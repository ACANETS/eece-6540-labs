<?xml version="1.0" encoding="UTF-8"?>
<deploy
 date="2023.06.04.09:54:33"
 outputDirectory="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/">
 <perimeter>
  <parameter
     name="AUTO_GENERATION_ID"
     type="Integer"
     defaultValue="0"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_UNIQUE_ID"
     type="String"
     defaultValue=""
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_DEVICE_FAMILY"
     type="String"
     defaultValue="Arria 10"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_DEVICE"
     type="String"
     defaultValue="10AX115N2F40E2LG"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_DEVICE_SPEEDGRADE"
     type="String"
     defaultValue="2"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_CLK_200_CLOCK_RATE"
     type="Long"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_CLK_200_CLOCK_DOMAIN"
     type="Integer"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_CLK_200_RESET_DOMAIN"
     type="Integer"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_EMIF_DDR4A_ADDRESS_MAP"
     type="AddressMap"
     defaultValue=""
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_EMIF_DDR4A_ADDRESS_WIDTH"
     type="AddressWidthType"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_EMIF_DDR4B_ADDRESS_MAP"
     type="AddressMap"
     defaultValue=""
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_EMIF_DDR4B_ADDRESS_WIDTH"
     type="AddressWidthType"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_EMIF_DDR4A_CLK_CLOCK_RATE"
     type="Long"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_EMIF_DDR4A_CLK_CLOCK_DOMAIN"
     type="Integer"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_EMIF_DDR4A_CLK_RESET_DOMAIN"
     type="Integer"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_EMIF_DDR4B_CLK_CLOCK_RATE"
     type="Long"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_EMIF_DDR4B_CLK_CLOCK_DOMAIN"
     type="Integer"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_EMIF_DDR4B_CLK_RESET_DOMAIN"
     type="Integer"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_KERNEL_CLK_IN_CLOCK_RATE"
     type="Long"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_KERNEL_CLK_IN_CLOCK_DOMAIN"
     type="Integer"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_KERNEL_CLK_IN_RESET_DOMAIN"
     type="Integer"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_KERNEL_CRA_ADDRESS_MAP"
     type="AddressMap"
     defaultValue=""
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_KERNEL_CRA_ADDRESS_WIDTH"
     type="AddressWidthType"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_KERNEL_IRQ_INTERRUPTS_USED"
     type="BigInteger"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_CCIP_AVMM_REQUESTOR_RD_ADDRESS_MAP"
     type="AddressMap"
     defaultValue=""
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_CCIP_AVMM_REQUESTOR_RD_ADDRESS_WIDTH"
     type="AddressWidthType"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_CCIP_AVMM_REQUESTOR_WR_ADDRESS_MAP"
     type="AddressMap"
     defaultValue=""
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_CCIP_AVMM_REQUESTOR_WR_ADDRESS_WIDTH"
     type="AddressWidthType"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <interface name="host_kernel_irq" kind="interrupt" start="0">
   <property name="associatedAddressablePoint" value="" />
   <property name="associatedClock" value="clk_200" />
   <property name="associatedReset" value="global_reset" />
   <property name="bridgedReceiverOffset" value="0" />
   <property name="bridgesToReceiver" value="" />
   <property name="irqScheme" value="NONE" />
   <port name="host_kernel_irq_irq" direction="output" role="irq" width="1" />
  </interface>
  <interface name="clk_200" kind="clock" start="0">
   <property name="clockRate" value="0" />
   <property name="externallyDriven" value="false" />
   <property name="ptfSchematicName" value="" />
   <port name="clk_200_clk" direction="input" role="clk" width="1" />
  </interface>
  <interface name="emif_ddr4a_clk" kind="clock" start="0">
   <property name="clockRate" value="0" />
   <property name="externallyDriven" value="false" />
   <property name="ptfSchematicName" value="" />
   <port name="emif_ddr4a_clk_clk" direction="input" role="clk" width="1" />
  </interface>
  <interface name="emif_ddr4b_clk" kind="clock" start="0">
   <property name="clockRate" value="0" />
   <property name="externallyDriven" value="false" />
   <property name="ptfSchematicName" value="" />
   <port name="emif_ddr4b_clk_clk" direction="input" role="clk" width="1" />
  </interface>
  <interface name="global_reset" kind="reset" start="0">
   <property name="associatedClock" value="clk_200" />
   <property name="synchronousEdges" value="BOTH" />
   <port name="global_reset_reset" direction="input" role="reset" width="1" />
  </interface>
  <interface name="kernel_clk" kind="clock" start="1">
   <property name="associatedDirectClock" value="kernel_clk_in" />
   <property name="clockRate" value="0" />
   <property name="clockRateKnown" value="false" />
   <property name="externallyDriven" value="true" />
   <property name="ptfSchematicName" value="" />
   <port name="kernel_clk_clk" direction="output" role="clk" width="1" />
  </interface>
  <interface name="kernel_reset" kind="reset" start="1">
   <property name="associatedClock" value="kernel_clk" />
   <property name="associatedDirectReset" value="global_reset" />
   <property name="associatedResetSinks" value="global_reset,global_reset" />
   <property name="synchronousEdges" value="DEASSERT" />
   <port
       name="kernel_reset_reset_n"
       direction="output"
       role="reset_n"
       width="1" />
  </interface>
  <interface name="kernel_clk_in" kind="clock" start="0">
   <property name="clockRate" value="0" />
   <property name="externallyDriven" value="false" />
   <property name="ptfSchematicName" value="" />
   <port name="kernel_clk_in_clk" direction="input" role="clk" width="1" />
  </interface>
  <interface name="kernel_cra" kind="avalon" start="1">
   <property name="adaptsTo" value="" />
   <property name="addressGroup" value="0" />
   <property name="addressUnits" value="SYMBOLS" />
   <property name="alwaysBurstMaxBurst" value="false" />
   <property name="associatedClock" value="kernel_clk_in" />
   <property name="associatedReset" value="global_reset" />
   <property name="bitsPerSymbol" value="8" />
   <property name="burstOnBurstBoundariesOnly" value="false" />
   <property name="burstcountUnits" value="WORDS" />
   <property name="constantBurstBehavior" value="false" />
   <property name="dBSBigEndian" value="false" />
   <property name="doStreamReads" value="false" />
   <property name="doStreamWrites" value="false" />
   <property name="holdTime" value="0" />
   <property name="interleaveBursts" value="false" />
   <property name="isAsynchronous" value="false" />
   <property name="isBigEndian" value="false" />
   <property name="isReadable" value="false" />
   <property name="isWriteable" value="false" />
   <property name="linewrapBursts" value="false" />
   <property name="maxAddressWidth" value="32" />
   <property name="maximumPendingReadTransactions" value="0" />
   <property name="maximumPendingWriteTransactions" value="0" />
   <property name="minimumReadLatency" value="1" />
   <property name="minimumResponseLatency" value="1" />
   <property name="prSafe" value="false" />
   <property name="readLatency" value="0" />
   <property name="readWaitTime" value="1" />
   <property name="registerIncomingSignals" value="false" />
   <property name="registerOutgoingSignals" value="false" />
   <property name="setupTime" value="0" />
   <property name="timingUnits" value="Cycles" />
   <property name="waitrequestAllowance" value="0" />
   <property name="writeWaitTime" value="0" />
   <port
       name="kernel_cra_waitrequest"
       direction="input"
       role="waitrequest"
       width="1" />
   <port
       name="kernel_cra_readdata"
       direction="input"
       role="readdata"
       width="64" />
   <port
       name="kernel_cra_readdatavalid"
       direction="input"
       role="readdatavalid"
       width="1" />
   <port
       name="kernel_cra_burstcount"
       direction="output"
       role="burstcount"
       width="1" />
   <port
       name="kernel_cra_writedata"
       direction="output"
       role="writedata"
       width="64" />
   <port
       name="kernel_cra_address"
       direction="output"
       role="address"
       width="30" />
   <port name="kernel_cra_write" direction="output" role="write" width="1" />
   <port name="kernel_cra_read" direction="output" role="read" width="1" />
   <port
       name="kernel_cra_byteenable"
       direction="output"
       role="byteenable"
       width="8" />
   <port
       name="kernel_cra_debugaccess"
       direction="output"
       role="debugaccess"
       width="1" />
  </interface>
  <interface name="kernel_irq" kind="interrupt" start="1">
   <property name="associatedAddressablePoint" value="" />
   <property name="associatedClock" value="kernel_clk_in" />
   <property name="associatedReset" value="global_reset" />
   <property
       name="irqMap"
       value="&lt;map&gt;&lt;mapping port=&apos;0&apos; sender=&apos;sender0_irq&apos; /&gt;&lt;/map&gt;" />
   <property name="irqScheme" value="INDIVIDUAL_REQUESTS" />
   <port name="kernel_irq_irq" direction="input" role="irq" width="1" />
  </interface>
  <interface name="ccip_avmm_requestor_rd" kind="avalon" start="1">
   <property name="adaptsTo" value="" />
   <property name="addressGroup" value="0" />
   <property name="addressUnits" value="SYMBOLS" />
   <property name="alwaysBurstMaxBurst" value="false" />
   <property name="associatedClock" value="clk_200" />
   <property name="associatedReset" value="global_reset" />
   <property name="bitsPerSymbol" value="8" />
   <property name="burstOnBurstBoundariesOnly" value="false" />
   <property name="burstcountUnits" value="WORDS" />
   <property name="constantBurstBehavior" value="false" />
   <property name="dBSBigEndian" value="false" />
   <property name="doStreamReads" value="false" />
   <property name="doStreamWrites" value="false" />
   <property name="holdTime" value="0" />
   <property name="interleaveBursts" value="false" />
   <property name="isAsynchronous" value="false" />
   <property name="isBigEndian" value="false" />
   <property name="isReadable" value="false" />
   <property name="isWriteable" value="false" />
   <property name="linewrapBursts" value="false" />
   <property name="maxAddressWidth" value="32" />
   <property name="maximumPendingReadTransactions" value="0" />
   <property name="maximumPendingWriteTransactions" value="0" />
   <property name="minimumReadLatency" value="1" />
   <property name="minimumResponseLatency" value="1" />
   <property name="prSafe" value="false" />
   <property name="readLatency" value="0" />
   <property name="readWaitTime" value="1" />
   <property name="registerIncomingSignals" value="false" />
   <property name="registerOutgoingSignals" value="false" />
   <property name="setupTime" value="0" />
   <property name="timingUnits" value="Cycles" />
   <property name="waitrequestAllowance" value="0" />
   <property name="writeWaitTime" value="0" />
   <port
       name="ccip_avmm_requestor_rd_waitrequest"
       direction="input"
       role="waitrequest"
       width="1" />
   <port
       name="ccip_avmm_requestor_rd_readdata"
       direction="input"
       role="readdata"
       width="512" />
   <port
       name="ccip_avmm_requestor_rd_readdatavalid"
       direction="input"
       role="readdatavalid"
       width="1" />
   <port
       name="ccip_avmm_requestor_rd_burstcount"
       direction="output"
       role="burstcount"
       width="3" />
   <port
       name="ccip_avmm_requestor_rd_writedata"
       direction="output"
       role="writedata"
       width="512" />
   <port
       name="ccip_avmm_requestor_rd_address"
       direction="output"
       role="address"
       width="48" />
   <port
       name="ccip_avmm_requestor_rd_write"
       direction="output"
       role="write"
       width="1" />
   <port
       name="ccip_avmm_requestor_rd_read"
       direction="output"
       role="read"
       width="1" />
   <port
       name="ccip_avmm_requestor_rd_byteenable"
       direction="output"
       role="byteenable"
       width="64" />
   <port
       name="ccip_avmm_requestor_rd_debugaccess"
       direction="output"
       role="debugaccess"
       width="1" />
  </interface>
  <interface name="ccip_avmm_requestor_wr" kind="avalon" start="1">
   <property name="adaptsTo" value="" />
   <property name="addressGroup" value="0" />
   <property name="addressUnits" value="SYMBOLS" />
   <property name="alwaysBurstMaxBurst" value="false" />
   <property name="associatedClock" value="clk_200" />
   <property name="associatedReset" value="global_reset" />
   <property name="bitsPerSymbol" value="8" />
   <property name="burstOnBurstBoundariesOnly" value="false" />
   <property name="burstcountUnits" value="WORDS" />
   <property name="constantBurstBehavior" value="false" />
   <property name="dBSBigEndian" value="false" />
   <property name="doStreamReads" value="false" />
   <property name="doStreamWrites" value="false" />
   <property name="holdTime" value="0" />
   <property name="interleaveBursts" value="false" />
   <property name="isAsynchronous" value="false" />
   <property name="isBigEndian" value="false" />
   <property name="isReadable" value="false" />
   <property name="isWriteable" value="false" />
   <property name="linewrapBursts" value="false" />
   <property name="maxAddressWidth" value="32" />
   <property name="maximumPendingReadTransactions" value="0" />
   <property name="maximumPendingWriteTransactions" value="0" />
   <property name="minimumReadLatency" value="1" />
   <property name="minimumResponseLatency" value="1" />
   <property name="prSafe" value="false" />
   <property name="readLatency" value="0" />
   <property name="readWaitTime" value="1" />
   <property name="registerIncomingSignals" value="false" />
   <property name="registerOutgoingSignals" value="false" />
   <property name="setupTime" value="0" />
   <property name="timingUnits" value="Cycles" />
   <property name="waitrequestAllowance" value="0" />
   <property name="writeWaitTime" value="0" />
   <port
       name="ccip_avmm_requestor_wr_waitrequest"
       direction="input"
       role="waitrequest"
       width="1" />
   <port
       name="ccip_avmm_requestor_wr_readdata"
       direction="input"
       role="readdata"
       width="512" />
   <port
       name="ccip_avmm_requestor_wr_readdatavalid"
       direction="input"
       role="readdatavalid"
       width="1" />
   <port
       name="ccip_avmm_requestor_wr_burstcount"
       direction="output"
       role="burstcount"
       width="3" />
   <port
       name="ccip_avmm_requestor_wr_writedata"
       direction="output"
       role="writedata"
       width="512" />
   <port
       name="ccip_avmm_requestor_wr_address"
       direction="output"
       role="address"
       width="48" />
   <port
       name="ccip_avmm_requestor_wr_write"
       direction="output"
       role="write"
       width="1" />
   <port
       name="ccip_avmm_requestor_wr_read"
       direction="output"
       role="read"
       width="1" />
   <port
       name="ccip_avmm_requestor_wr_byteenable"
       direction="output"
       role="byteenable"
       width="64" />
   <port
       name="ccip_avmm_requestor_wr_debugaccess"
       direction="output"
       role="debugaccess"
       width="1" />
  </interface>
  <interface name="ccip_avmm_mmio" kind="avalon" start="0">
   <property name="addressAlignment" value="DYNAMIC" />
   <property name="addressGroup" value="0" />
   <property name="addressSpan" value="262144" />
   <property name="addressUnits" value="SYMBOLS" />
   <property name="alwaysBurstMaxBurst" value="false" />
   <property name="associatedClock" value="clk_200" />
   <property name="associatedReset" value="global_reset" />
   <property name="bitsPerSymbol" value="8" />
   <property name="bridgedAddressOffset" value="0" />
   <property name="bridgesToMaster" value="" />
   <property name="burstOnBurstBoundariesOnly" value="false" />
   <property name="burstcountUnits" value="WORDS" />
   <property name="constantBurstBehavior" value="false" />
   <property name="explicitAddressSpan" value="0" />
   <property name="holdTime" value="0" />
   <property name="interleaveBursts" value="false" />
   <property name="isBigEndian" value="false" />
   <property name="isFlash" value="false" />
   <property name="isMemoryDevice" value="false" />
   <property name="isNonVolatileStorage" value="false" />
   <property name="linewrapBursts" value="false" />
   <property name="maximumPendingReadTransactions" value="1" />
   <property name="maximumPendingWriteTransactions" value="0" />
   <property name="minimumReadLatency" value="1" />
   <property name="minimumResponseLatency" value="1" />
   <property name="minimumUninterruptedRunLength" value="1" />
   <property name="prSafe" value="false" />
   <property name="printableDevice" value="false" />
   <property name="readLatency" value="0" />
   <property name="readWaitStates" value="0" />
   <property name="readWaitTime" value="0" />
   <property name="registerIncomingSignals" value="false" />
   <property name="registerOutgoingSignals" value="false" />
   <property name="setupTime" value="0" />
   <property name="timingUnits" value="Cycles" />
   <property name="transparentBridge" value="false" />
   <property name="waitrequestAllowance" value="0" />
   <property name="wellBehavedWaitrequest" value="false" />
   <property name="writeLatency" value="0" />
   <property name="writeWaitStates" value="0" />
   <property name="writeWaitTime" value="0" />
   <port
       name="ccip_avmm_mmio_waitrequest"
       direction="output"
       role="waitrequest"
       width="1" />
   <port
       name="ccip_avmm_mmio_readdata"
       direction="output"
       role="readdata"
       width="64" />
   <port
       name="ccip_avmm_mmio_readdatavalid"
       direction="output"
       role="readdatavalid"
       width="1" />
   <port
       name="ccip_avmm_mmio_burstcount"
       direction="input"
       role="burstcount"
       width="1" />
   <port
       name="ccip_avmm_mmio_writedata"
       direction="input"
       role="writedata"
       width="64" />
   <port
       name="ccip_avmm_mmio_address"
       direction="input"
       role="address"
       width="18" />
   <port name="ccip_avmm_mmio_write" direction="input" role="write" width="1" />
   <port name="ccip_avmm_mmio_read" direction="input" role="read" width="1" />
   <port
       name="ccip_avmm_mmio_byteenable"
       direction="input"
       role="byteenable"
       width="8" />
   <port
       name="ccip_avmm_mmio_debugaccess"
       direction="input"
       role="debugaccess"
       width="1" />
  </interface>
  <interface name="kernel_ddr4a" kind="avalon" start="0">
   <property name="addressAlignment" value="DYNAMIC" />
   <property name="addressGroup" value="0" />
   <property name="addressSpan" value="4294967296" />
   <property name="addressUnits" value="SYMBOLS" />
   <property name="alwaysBurstMaxBurst" value="false" />
   <property name="associatedClock" value="kernel_clk_in" />
   <property name="associatedReset" value="global_reset" />
   <property name="bitsPerSymbol" value="8" />
   <property name="bridgedAddressOffset" value="0" />
   <property name="bridgesToMaster" value="" />
   <property name="burstOnBurstBoundariesOnly" value="false" />
   <property name="burstcountUnits" value="WORDS" />
   <property name="constantBurstBehavior" value="false" />
   <property name="explicitAddressSpan" value="0" />
   <property name="holdTime" value="0" />
   <property name="interleaveBursts" value="false" />
   <property name="isBigEndian" value="false" />
   <property name="isFlash" value="false" />
   <property name="isMemoryDevice" value="false" />
   <property name="isNonVolatileStorage" value="false" />
   <property name="linewrapBursts" value="false" />
   <property name="maximumPendingReadTransactions" value="128" />
   <property name="maximumPendingWriteTransactions" value="0" />
   <property name="minimumReadLatency" value="1" />
   <property name="minimumResponseLatency" value="1" />
   <property name="minimumUninterruptedRunLength" value="1" />
   <property name="prSafe" value="false" />
   <property name="printableDevice" value="false" />
   <property name="readLatency" value="0" />
   <property name="readWaitStates" value="0" />
   <property name="readWaitTime" value="0" />
   <property name="registerIncomingSignals" value="false" />
   <property name="registerOutgoingSignals" value="false" />
   <property name="setupTime" value="0" />
   <property name="timingUnits" value="Cycles" />
   <property name="transparentBridge" value="false" />
   <property name="waitrequestAllowance" value="0" />
   <property name="wellBehavedWaitrequest" value="false" />
   <property name="writeLatency" value="0" />
   <property name="writeWaitStates" value="0" />
   <property name="writeWaitTime" value="0" />
   <port
       name="kernel_ddr4a_waitrequest"
       direction="output"
       role="waitrequest"
       width="1" />
   <port
       name="kernel_ddr4a_readdata"
       direction="output"
       role="readdata"
       width="512" />
   <port
       name="kernel_ddr4a_readdatavalid"
       direction="output"
       role="readdatavalid"
       width="1" />
   <port
       name="kernel_ddr4a_burstcount"
       direction="input"
       role="burstcount"
       width="5" />
   <port
       name="kernel_ddr4a_writedata"
       direction="input"
       role="writedata"
       width="512" />
   <port
       name="kernel_ddr4a_address"
       direction="input"
       role="address"
       width="32" />
   <port name="kernel_ddr4a_write" direction="input" role="write" width="1" />
   <port name="kernel_ddr4a_read" direction="input" role="read" width="1" />
   <port
       name="kernel_ddr4a_byteenable"
       direction="input"
       role="byteenable"
       width="64" />
   <port
       name="kernel_ddr4a_debugaccess"
       direction="input"
       role="debugaccess"
       width="1" />
  </interface>
  <interface name="emif_ddr4a" kind="avalon" start="1">
   <property name="adaptsTo" value="" />
   <property name="addressGroup" value="0" />
   <property name="addressUnits" value="SYMBOLS" />
   <property name="alwaysBurstMaxBurst" value="false" />
   <property name="associatedClock" value="emif_ddr4a_clk" />
   <property name="associatedReset" value="global_reset" />
   <property name="bitsPerSymbol" value="8" />
   <property name="burstOnBurstBoundariesOnly" value="false" />
   <property name="burstcountUnits" value="WORDS" />
   <property name="constantBurstBehavior" value="false" />
   <property name="dBSBigEndian" value="false" />
   <property name="doStreamReads" value="false" />
   <property name="doStreamWrites" value="false" />
   <property name="holdTime" value="0" />
   <property name="interleaveBursts" value="false" />
   <property name="isAsynchronous" value="false" />
   <property name="isBigEndian" value="false" />
   <property name="isReadable" value="false" />
   <property name="isWriteable" value="false" />
   <property name="linewrapBursts" value="false" />
   <property name="maxAddressWidth" value="32" />
   <property name="maximumPendingReadTransactions" value="0" />
   <property name="maximumPendingWriteTransactions" value="0" />
   <property name="minimumReadLatency" value="1" />
   <property name="minimumResponseLatency" value="1" />
   <property name="prSafe" value="false" />
   <property name="readLatency" value="0" />
   <property name="readWaitTime" value="1" />
   <property name="registerIncomingSignals" value="false" />
   <property name="registerOutgoingSignals" value="false" />
   <property name="setupTime" value="0" />
   <property name="timingUnits" value="Cycles" />
   <property name="waitrequestAllowance" value="0" />
   <property name="writeWaitTime" value="0" />
   <port
       name="emif_ddr4a_waitrequest"
       direction="input"
       role="waitrequest"
       width="1" />
   <port
       name="emif_ddr4a_readdata"
       direction="input"
       role="readdata"
       width="512" />
   <port
       name="emif_ddr4a_readdatavalid"
       direction="input"
       role="readdatavalid"
       width="1" />
   <port
       name="emif_ddr4a_burstcount"
       direction="output"
       role="burstcount"
       width="7" />
   <port
       name="emif_ddr4a_writedata"
       direction="output"
       role="writedata"
       width="512" />
   <port
       name="emif_ddr4a_address"
       direction="output"
       role="address"
       width="32" />
   <port name="emif_ddr4a_write" direction="output" role="write" width="1" />
   <port name="emif_ddr4a_read" direction="output" role="read" width="1" />
   <port
       name="emif_ddr4a_byteenable"
       direction="output"
       role="byteenable"
       width="64" />
   <port
       name="emif_ddr4a_debugaccess"
       direction="output"
       role="debugaccess"
       width="1" />
  </interface>
  <interface name="kernel_ddr4b" kind="avalon" start="0">
   <property name="addressAlignment" value="DYNAMIC" />
   <property name="addressGroup" value="0" />
   <property name="addressSpan" value="4294967296" />
   <property name="addressUnits" value="SYMBOLS" />
   <property name="alwaysBurstMaxBurst" value="false" />
   <property name="associatedClock" value="kernel_clk_in" />
   <property name="associatedReset" value="global_reset" />
   <property name="bitsPerSymbol" value="8" />
   <property name="bridgedAddressOffset" value="0" />
   <property name="bridgesToMaster" value="" />
   <property name="burstOnBurstBoundariesOnly" value="false" />
   <property name="burstcountUnits" value="WORDS" />
   <property name="constantBurstBehavior" value="false" />
   <property name="explicitAddressSpan" value="0" />
   <property name="holdTime" value="0" />
   <property name="interleaveBursts" value="false" />
   <property name="isBigEndian" value="false" />
   <property name="isFlash" value="false" />
   <property name="isMemoryDevice" value="false" />
   <property name="isNonVolatileStorage" value="false" />
   <property name="linewrapBursts" value="false" />
   <property name="maximumPendingReadTransactions" value="128" />
   <property name="maximumPendingWriteTransactions" value="0" />
   <property name="minimumReadLatency" value="1" />
   <property name="minimumResponseLatency" value="1" />
   <property name="minimumUninterruptedRunLength" value="1" />
   <property name="prSafe" value="false" />
   <property name="printableDevice" value="false" />
   <property name="readLatency" value="0" />
   <property name="readWaitStates" value="0" />
   <property name="readWaitTime" value="0" />
   <property name="registerIncomingSignals" value="false" />
   <property name="registerOutgoingSignals" value="false" />
   <property name="setupTime" value="0" />
   <property name="timingUnits" value="Cycles" />
   <property name="transparentBridge" value="false" />
   <property name="waitrequestAllowance" value="0" />
   <property name="wellBehavedWaitrequest" value="false" />
   <property name="writeLatency" value="0" />
   <property name="writeWaitStates" value="0" />
   <property name="writeWaitTime" value="0" />
   <port
       name="kernel_ddr4b_waitrequest"
       direction="output"
       role="waitrequest"
       width="1" />
   <port
       name="kernel_ddr4b_readdata"
       direction="output"
       role="readdata"
       width="512" />
   <port
       name="kernel_ddr4b_readdatavalid"
       direction="output"
       role="readdatavalid"
       width="1" />
   <port
       name="kernel_ddr4b_burstcount"
       direction="input"
       role="burstcount"
       width="5" />
   <port
       name="kernel_ddr4b_writedata"
       direction="input"
       role="writedata"
       width="512" />
   <port
       name="kernel_ddr4b_address"
       direction="input"
       role="address"
       width="32" />
   <port name="kernel_ddr4b_write" direction="input" role="write" width="1" />
   <port name="kernel_ddr4b_read" direction="input" role="read" width="1" />
   <port
       name="kernel_ddr4b_byteenable"
       direction="input"
       role="byteenable"
       width="64" />
   <port
       name="kernel_ddr4b_debugaccess"
       direction="input"
       role="debugaccess"
       width="1" />
  </interface>
  <interface name="emif_ddr4b" kind="avalon" start="1">
   <property name="adaptsTo" value="" />
   <property name="addressGroup" value="0" />
   <property name="addressUnits" value="SYMBOLS" />
   <property name="alwaysBurstMaxBurst" value="false" />
   <property name="associatedClock" value="emif_ddr4b_clk" />
   <property name="associatedReset" value="global_reset" />
   <property name="bitsPerSymbol" value="8" />
   <property name="burstOnBurstBoundariesOnly" value="false" />
   <property name="burstcountUnits" value="WORDS" />
   <property name="constantBurstBehavior" value="false" />
   <property name="dBSBigEndian" value="false" />
   <property name="doStreamReads" value="false" />
   <property name="doStreamWrites" value="false" />
   <property name="holdTime" value="0" />
   <property name="interleaveBursts" value="false" />
   <property name="isAsynchronous" value="false" />
   <property name="isBigEndian" value="false" />
   <property name="isReadable" value="false" />
   <property name="isWriteable" value="false" />
   <property name="linewrapBursts" value="false" />
   <property name="maxAddressWidth" value="32" />
   <property name="maximumPendingReadTransactions" value="0" />
   <property name="maximumPendingWriteTransactions" value="0" />
   <property name="minimumReadLatency" value="1" />
   <property name="minimumResponseLatency" value="1" />
   <property name="prSafe" value="false" />
   <property name="readLatency" value="0" />
   <property name="readWaitTime" value="1" />
   <property name="registerIncomingSignals" value="false" />
   <property name="registerOutgoingSignals" value="false" />
   <property name="setupTime" value="0" />
   <property name="timingUnits" value="Cycles" />
   <property name="waitrequestAllowance" value="0" />
   <property name="writeWaitTime" value="0" />
   <port
       name="emif_ddr4b_waitrequest"
       direction="input"
       role="waitrequest"
       width="1" />
   <port
       name="emif_ddr4b_readdata"
       direction="input"
       role="readdata"
       width="512" />
   <port
       name="emif_ddr4b_readdatavalid"
       direction="input"
       role="readdatavalid"
       width="1" />
   <port
       name="emif_ddr4b_burstcount"
       direction="output"
       role="burstcount"
       width="7" />
   <port
       name="emif_ddr4b_writedata"
       direction="output"
       role="writedata"
       width="512" />
   <port
       name="emif_ddr4b_address"
       direction="output"
       role="address"
       width="32" />
   <port name="emif_ddr4b_write" direction="output" role="write" width="1" />
   <port name="emif_ddr4b_read" direction="output" role="read" width="1" />
   <port
       name="emif_ddr4b_byteenable"
       direction="output"
       role="byteenable"
       width="64" />
   <port
       name="emif_ddr4b_debugaccess"
       direction="output"
       role="debugaccess"
       width="1" />
  </interface>
  <interface name="acl_internal_snoop" kind="avalon_streaming" start="1">
   <property name="associatedClock" value="kernel_clk_in" />
   <property name="associatedReset" value="global_reset" />
   <property name="beatsPerCycle" value="1" />
   <property name="dataBitsPerSymbol" value="33" />
   <property name="emptyWithinPacket" value="false" />
   <property name="errorDescriptor" value="" />
   <property name="firstSymbolInHighOrderBits" value="true" />
   <property name="highOrderSymbolAtMSB" value="false" />
   <property name="maxChannel" value="0" />
   <property name="packetDescription" value="" />
   <property name="prSafe" value="false" />
   <property name="readyAllowance" value="0" />
   <property name="readyLatency" value="0" />
   <property name="symbolsPerBeat" value="1" />
   <port
       name="acl_internal_snoop_data"
       direction="output"
       role="data"
       width="33" />
   <port
       name="acl_internal_snoop_valid"
       direction="output"
       role="valid"
       width="1" />
   <port
       name="acl_internal_snoop_ready"
       direction="input"
       role="ready"
       width="1" />
  </interface>
  <interface name="msgdma_bbb_0_dma_irq" kind="interrupt" start="0">
   <property name="associatedAddressablePoint" value="board.ccip_avmm_mmio" />
   <property name="associatedClock" value="clk_200" />
   <property name="associatedReset" value="global_reset" />
   <property name="bridgedReceiverOffset" value="0" />
   <property name="bridgesToReceiver" value="" />
   <property name="irqScheme" value="NONE" />
   <port
       name="msgdma_bbb_0_dma_irq_irq"
       direction="output"
       role="irq"
       width="1" />
  </interface>
  <interface name="msgdma_bbb_1_dma_irq" kind="interrupt" start="0">
   <property name="associatedAddressablePoint" value="board.ccip_avmm_mmio" />
   <property name="associatedClock" value="clk_200" />
   <property name="associatedReset" value="global_reset" />
   <property name="bridgedReceiverOffset" value="0" />
   <property name="bridgesToReceiver" value="" />
   <property name="irqScheme" value="NONE" />
   <port
       name="msgdma_bbb_1_dma_irq_irq"
       direction="output"
       role="irq"
       width="1" />
  </interface>
 </perimeter>
 <entity kind="board" version="1.0" name="board">
  <parameter name="AUTO_EMIF_DDR4B_CLK_CLOCK_RATE" value="-1" />
  <parameter name="AUTO_CCIP_AVMM_REQUESTOR_RD_ADDRESS_MAP" value="" />
  <parameter name="AUTO_CCIP_AVMM_REQUESTOR_WR_ADDRESS_WIDTH" value="-1" />
  <parameter name="AUTO_KERNEL_CLK_IN_CLOCK_RATE" value="-1" />
  <parameter name="AUTO_CLK_200_CLOCK_DOMAIN" value="-1" />
  <parameter name="AUTO_EMIF_DDR4A_CLK_RESET_DOMAIN" value="-1" />
  <parameter name="AUTO_UNIQUE_ID" value="" />
  <parameter name="AUTO_KERNEL_CRA_ADDRESS_WIDTH" value="-1" />
  <parameter name="AUTO_EMIF_DDR4B_CLK_RESET_DOMAIN" value="-1" />
  <parameter name="AUTO_EMIF_DDR4B_ADDRESS_MAP" value="" />
  <parameter name="AUTO_EMIF_DDR4B_ADDRESS_WIDTH" value="-1" />
  <parameter name="AUTO_EMIF_DDR4A_ADDRESS_MAP" value="" />
  <parameter name="AUTO_KERNEL_CLK_IN_CLOCK_DOMAIN" value="-1" />
  <parameter name="AUTO_GENERATION_ID" value="0" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="AUTO_CLK_200_RESET_DOMAIN" value="-1" />
  <parameter name="AUTO_EMIF_DDR4A_CLK_CLOCK_DOMAIN" value="-1" />
  <parameter name="AUTO_KERNEL_CRA_ADDRESS_MAP" value="" />
  <parameter name="AUTO_DEVICE_SPEEDGRADE" value="2" />
  <parameter name="AUTO_KERNEL_IRQ_INTERRUPTS_USED" value="-1" />
  <parameter name="AUTO_CCIP_AVMM_REQUESTOR_WR_ADDRESS_MAP" value="" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_EMIF_DDR4B_CLK_CLOCK_DOMAIN" value="-1" />
  <parameter name="AUTO_CCIP_AVMM_REQUESTOR_RD_ADDRESS_WIDTH" value="-1" />
  <parameter name="AUTO_CLK_200_CLOCK_RATE" value="-1" />
  <parameter name="AUTO_EMIF_DDR4A_ADDRESS_WIDTH" value="-1" />
  <parameter name="AUTO_EMIF_DDR4A_CLK_CLOCK_RATE" value="-1" />
  <parameter name="AUTO_KERNEL_CLK_IN_RESET_DOMAIN" value="-1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/synth/board.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/synth/board.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board.qsys" />
  </sourceFiles>
  <childSourceFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/ddr_board.qsys" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_mm_interconnect/altera_mm_interconnect_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_translator/altera_merlin_master_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_translator/altera_merlin_slave_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_mm_interconnect/altera_mm_interconnect_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_translator/altera_merlin_master_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_translator/altera_merlin_slave_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_agent/altera_merlin_master_agent_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_agent/altera_merlin_slave_agent_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_traffic_limiter/altera_merlin_traffic_limiter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/iconnect/alt_hiconnect_sc_fifo/alt_hiconnect_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_burst_adapter/altera_merlin_burst_adapter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/avalon_st/altera_avalon_st_pipeline_stage/altera_avalon_st_pipeline_stage_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_irq_mapper/altera_irq_mapper_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_irq_clock_crosser/altera_irq_clock_crosser_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_reset_controller/altera_reset_controller_hw.tcl" />
  </childSourceFiles>
  <messages>
   <message level="Info" culprit="board">"Generating: board"</message>
   <message level="Info" culprit="board">"Generating: board_afu_id_avmm_slave_0"</message>
   <message level="Info" culprit="board">"Generating: board_irq_ctrl_0"</message>
   <message level="Info" culprit="board">"Generating: board_clk_200"</message>
   <message level="Info" culprit="board">"Generating: board_clock_bridge_0"</message>
   <message level="Info" culprit="board">"Generating: board_clock_bridge_1"</message>
   <message level="Info" culprit="board">"Generating: board_global_reset_in"</message>
   <message level="Info" culprit="board">"Generating: board_kernel_clk_export"</message>
   <message level="Info" culprit="board">"Generating: board_kernel_clk_in"</message>
   <message level="Info" culprit="board">"Generating: board_kernel_interface"</message>
   <message level="Info" culprit="board">"Generating: pipe_stage_msgdma_csr_0"</message>
   <message level="Info" culprit="board">"Generating: pipe_stage_dma_host_rd_0"</message>
   <message level="Info" culprit="board">"Generating: board_pipe_stage_host_ctrl"</message>
   <message level="Info" culprit="board">"Generating: board_altera_mm_interconnect_191_plnkcii"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_master_translator_191_g7h47bq"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_slave_translator_191_x56fcki"</message>
   <message level="Info" culprit="board">"Generating: board_altera_mm_interconnect_191_qqmhvsy"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_master_translator_191_g7h47bq"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_slave_translator_191_x56fcki"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_master_agent_191_mpbm6tq"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_slave_agent_191_ncfkfri"</message>
   <message level="Info" culprit="board">"Generating: board_altera_avalon_sc_fifo_191_e5eqkcq"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_router_191_qdcstwy"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_router_191_ymmgbda"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_router_191_p7j7u6q"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_traffic_limiter_191_kcba44q"</message>
   <message level="Info" culprit="my_altera_avalon_sc_fifo_dest_id_fifo">"Generating: my_altera_avalon_sc_fifo_dest_id_fifo"</message>
   <message level="Info" culprit="my_alt_hiconnect_sc_fifo_dest_id_fifo">"Generating: my_alt_hiconnect_sc_fifo_dest_id_fifo"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_traffic_limiter_191_eiui2ey"</message>
   <message level="Info" culprit="board">"Generating: board_altera_avalon_sc_fifo_191_e5eqkcq"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_traffic_limiter_191_obycr2q"</message>
   <message level="Info" culprit="board">"Generating: board_alt_hiconnect_sc_fifo_191_7qtmpqq"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_burst_adapter_191_32tg2fa"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_demultiplexer_191_lgtc25y"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_multiplexer_191_2bsc4nq"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_demultiplexer_191_wkeid3i"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_multiplexer_191_lg6qpai"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_width_adapter_191_vfugsvi"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_width_adapter_191_w5iwv2q"</message>
   <message level="Info" culprit="board">"Generating: altera_avalon_st_pipeline_stage"</message>
   <message level="Info" culprit="board">"Generating: board_altera_irq_mapper_191_vnrcumq"</message>
   <message level="Info" culprit="board">"Generating: board_altera_irq_clock_crosser_191_4qcttxy"</message>
   <message level="Info" culprit="board">"Generating: altera_reset_controller"</message>
  </messages>
 </entity>
 <entity kind="ddr_board" version="1.0" name="ddr_board">
  <parameter name="AUTO_DDR_CLK_A_RESET_DOMAIN" value="2" />
  <parameter name="AUTO_KERNEL_CLK_CLOCK_RATE" value="-1" />
  <parameter name="AUTO_DDR_CLK_B_RESET_DOMAIN" value="3" />
  <parameter
     name="AUTO_HOST_RD_ADDRESS_MAP"
     value="&lt;address-map&gt;&lt;slave name=&apos;pipe_stage_dma_host_rd.s0&apos; start=&apos;0x0&apos; end=&apos;0x1000000000000&apos; datawidth=&apos;512&apos; /&gt;&lt;/address-map&gt;" />
  <parameter name="AUTO_UNIQUE_ID" value="board_ddr_board" />
  <parameter name="AUTO_HOST_CLK_RESET_DOMAIN" value="1" />
  <parameter name="AUTO_EMIF_DDR4B_ADDRESS_MAP" value="" />
  <parameter name="AUTO_HOST_CLK_CLOCK_RATE" value="200000000" />
  <parameter name="AUTO_EMIF_DDR4B_ADDRESS_WIDTH" value="-1" />
  <parameter name="AUTO_EMIF_DDR4A_ADDRESS_MAP" value="" />
  <parameter name="AUTO_KERNEL_CLK_RESET_DOMAIN" value="6" />
  <parameter name="AUTO_DDR_CLK_B_CLOCK_DOMAIN" value="3" />
  <parameter name="AUTO_GENERATION_ID" value="0" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="AUTO_DDR_CLK_A_CLOCK_DOMAIN" value="2" />
  <parameter name="AUTO_DDR_CLK_A_CLOCK_RATE" value="266000000" />
  <parameter name="AUTO_HOST_CLK_CLOCK_DOMAIN" value="1" />
  <parameter name="AUTO_DEVICE_SPEEDGRADE" value="2" />
  <parameter
     name="AUTO_HOST_WR_ADDRESS_MAP"
     value="&lt;address-map&gt;&lt;slave name=&apos;pipe_stage_dma_host_wr.s0&apos; start=&apos;0x0&apos; end=&apos;0x1000000000000&apos; datawidth=&apos;512&apos; /&gt;&lt;/address-map&gt;" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_HOST_WR_ADDRESS_WIDTH" value="48" />
  <parameter name="AUTO_KERNEL_CLK_CLOCK_DOMAIN" value="6" />
  <parameter name="AUTO_DDR_CLK_B_CLOCK_RATE" value="266000000" />
  <parameter name="AUTO_HOST_RD_ADDRESS_WIDTH" value="48" />
  <parameter name="AUTO_EMIF_DDR4A_ADDRESS_WIDTH" value="-1" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/ddr_board.qsys" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator instantiator="board" as="ddr_board" />
  <messages/>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="board_afu_id_avmm_slave_0">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;afu_cfg_slave&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;avmm_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avmm_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avmm_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avmm_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avmm_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;64&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;clock&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;BOTH&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;afu_cfg_slave&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;avmm_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avmm_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avmm_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avmm_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avmm_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;64&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;clock&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;BOTH&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;afu_id_avmm_slave&lt;/className&gt;
        &lt;version&gt;1.0&lt;/version&gt;
        &lt;displayName&gt;afu_id_avmm_slave&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors/&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;afu_cfg_slave&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;afu_cfg_slave&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name=&apos;afu_cfg_slave&apos; start=&apos;0x0&apos; end=&apos;0x40&apos; datawidth=&apos;64&apos; /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;6&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                            &lt;value&gt;64&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;board_afu_id_avmm_slave_0&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_afu_id_avmm_slave_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_afu_id_avmm_slave_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_afu_id_avmm_slave_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_afu_id_avmm_slave_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_afu_id_avmm_slave_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_afu_id_avmm_slave_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/board/board_afu_id_avmm_slave_0.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="board" as="board_afu_id_avmm_slave_0" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_afu_id_avmm_slave_0"</message>
  </messages>
 </entity>
 <entity kind="altera_generic_component" version="1.0" name="board_irq_ctrl_0">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;Clock&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;Clk_i&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;IRQ_Mask_Slave&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;MaskWrite_i&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;MaskWritedata_i&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;MaskByteenable_i&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;4&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;MaskRead_i&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;MaskReaddata_o&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;MaskWaitrequest_o&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;4&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;Clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;Resetn&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;IRQ_Read_Slave&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;IrqRead_i&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;IrqReadData_o&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;4&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;Clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;Resetn&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;Resetn&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;Rstn_i&lt;/name&gt;
                    &lt;role&gt;reset_n&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;Clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;interrupt_receiver&lt;/name&gt;
            &lt;type&gt;interrupt&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;Irq_i&lt;/name&gt;
                    &lt;role&gt;irq&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedAddressablePoint&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;Clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;Resetn&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;irqMap&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;irqScheme&lt;/key&gt;
                        &lt;value&gt;INDIVIDUAL_REQUESTS&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;interrupt_sender&lt;/name&gt;
            &lt;type&gt;interrupt&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;Irq_o&lt;/name&gt;
                    &lt;role&gt;irq&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedAddressablePoint&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;Clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;Resetn&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedReceiverOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToReceiver&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;irqScheme&lt;/key&gt;
                        &lt;value&gt;NONE&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;Clock&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;Clk_i&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;IRQ_Mask_Slave&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;MaskWrite_i&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;MaskWritedata_i&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;MaskByteenable_i&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;4&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;MaskRead_i&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;MaskReaddata_o&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;MaskWaitrequest_o&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;4&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;Clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;Resetn&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;IRQ_Read_Slave&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;IrqRead_i&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;IrqReadData_o&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;4&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;Clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;Resetn&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;Resetn&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;Rstn_i&lt;/name&gt;
                        &lt;role&gt;reset_n&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;Clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;interrupt_receiver&lt;/name&gt;
                &lt;type&gt;interrupt&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;Irq_i&lt;/name&gt;
                        &lt;role&gt;irq&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedAddressablePoint&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;Clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;Resetn&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;irqMap&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;irqScheme&lt;/key&gt;
                            &lt;value&gt;INDIVIDUAL_REQUESTS&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;interrupt_sender&lt;/name&gt;
                &lt;type&gt;interrupt&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;Irq_o&lt;/name&gt;
                        &lt;role&gt;irq&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedAddressablePoint&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;Clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;Resetn&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedReceiverOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToReceiver&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;irqScheme&lt;/key&gt;
                            &lt;value&gt;NONE&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;irq_ctrl&lt;/className&gt;
        &lt;version&gt;1.0&lt;/version&gt;
        &lt;displayName&gt;IRQ CTRL&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;-1&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;AUTO_INTERRUPT_RECEIVER_INTERRUPTS_USED&lt;/parameterName&gt;
                &lt;parameterType&gt;java.math.BigInteger&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;interrupt_receiver&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;INTERRUPTS_USED&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;IRQ_Mask_Slave&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;IRQ_Mask_Slave&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name=&apos;IRQ_Mask_Slave&apos; start=&apos;0x0&apos; end=&apos;0x4&apos; datawidth=&apos;32&apos; /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;2&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;IRQ_Read_Slave&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;IRQ_Read_Slave&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name=&apos;IRQ_Read_Slave&apos; start=&apos;0x0&apos; end=&apos;0x4&apos; datawidth=&apos;32&apos; /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;2&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;interrupt_receiver&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;interrupt_receiver&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;INTERRUPTS_USED&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter name="AUTO_INTERRUPT_RECEIVER_INTERRUPTS_USED" value="1" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;board_irq_ctrl_0&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_irq_ctrl_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_irq_ctrl_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_irq_ctrl_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_irq_ctrl_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_irq_ctrl_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_irq_ctrl_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/board/board_irq_ctrl_0.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="board" as="board_irq_ctrl_0" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_irq_ctrl_0"</message>
  </messages>
 </entity>
 <entity kind="altera_generic_component" version="1.0" name="board_clk_200">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;in_clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;in_clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;out_clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;out_clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedDirectClock&lt;/key&gt;
                        &lt;value&gt;in_clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;200000000&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRateKnown&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;in_clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;in_clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;out_clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;out_clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedDirectClock&lt;/key&gt;
                            &lt;value&gt;in_clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;200000000&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRateKnown&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_clock_bridge&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Clock Bridge Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;0&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;DERIVED_CLOCK_RATE&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Long&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;in_clk&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;CLOCK_RATE&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;in_clk&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;in_clk&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;out_clk&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;out_clk&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;200000000&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter name="DERIVED_CLOCK_RATE" value="0" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;board_clk_200&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_clk_200&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_clk_200&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_clk_200&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_clk_200&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_clk_200&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_clk_200&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/board/board_clk_200.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="board" as="clk_200" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_clk_200"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="board_clock_bridge_0">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;in_clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;in_clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;out_clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;out_clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedDirectClock&lt;/key&gt;
                        &lt;value&gt;in_clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;266000000&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRateKnown&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;in_clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;in_clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;out_clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;out_clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedDirectClock&lt;/key&gt;
                            &lt;value&gt;in_clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;266000000&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRateKnown&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_clock_bridge&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Clock Bridge Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;0&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;DERIVED_CLOCK_RATE&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Long&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;in_clk&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;CLOCK_RATE&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;in_clk&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;in_clk&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;out_clk&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;out_clk&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;266000000&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter name="DERIVED_CLOCK_RATE" value="0" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;board_clock_bridge_0&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_clock_bridge_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_clock_bridge_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_clock_bridge_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_clock_bridge_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_clock_bridge_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_clock_bridge_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/board/board_clock_bridge_0.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="board" as="emif_ddr4a_clk" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_clock_bridge_0"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="board_clock_bridge_1">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;in_clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;in_clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;out_clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;out_clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedDirectClock&lt;/key&gt;
                        &lt;value&gt;in_clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;266000000&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRateKnown&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;in_clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;in_clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;out_clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;out_clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedDirectClock&lt;/key&gt;
                            &lt;value&gt;in_clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;266000000&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRateKnown&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_clock_bridge&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Clock Bridge Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;0&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;DERIVED_CLOCK_RATE&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Long&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;in_clk&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;CLOCK_RATE&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;in_clk&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;in_clk&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;out_clk&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;out_clk&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;266000000&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter name="DERIVED_CLOCK_RATE" value="0" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;board_clock_bridge_1&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_clock_bridge_1&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_clock_bridge_1&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_clock_bridge_1&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_clock_bridge_1&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_clock_bridge_1&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_clock_bridge_1&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/board/board_clock_bridge_1.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="board" as="emif_ddr4b_clk" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_clock_bridge_1"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="board_global_reset_in">
  <parameter name="AUTO_CLK_CLOCK_RATE" value="200000000" />
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;in_reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;in_reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;BOTH&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;out_reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;out_reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedDirectReset&lt;/key&gt;
                        &lt;value&gt;in_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedResetSinks&lt;/key&gt;
                        &lt;value&gt;in_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;BOTH&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;in_reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;in_reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;BOTH&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;out_reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;out_reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedDirectReset&lt;/key&gt;
                            &lt;value&gt;in_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedResetSinks&lt;/key&gt;
                            &lt;value&gt;in_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;BOTH&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_reset_bridge&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Reset Bridge Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;-1&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;AUTO_CLK_CLOCK_RATE&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Long&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;clk&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;CLOCK_RATE&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;clk&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;clk&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;200000000&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;board_global_reset_in&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_global_reset_in&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_global_reset_in&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_global_reset_in&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_global_reset_in&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_global_reset_in&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_global_reset_in&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/board/board_global_reset_in.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="board" as="global_reset_in" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_global_reset_in"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="board_kernel_clk_export">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="inputClockFrequency" value="0" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk_out&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedDirectClock&lt;/key&gt;
                        &lt;value&gt;clk_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRateKnown&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;clk_in&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;in_clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;qsys.ui.export_name&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;clk_in_reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset_n&lt;/name&gt;
                    &lt;role&gt;reset_n&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;qsys.ui.export_name&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;clk_reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset_n_out&lt;/name&gt;
                    &lt;role&gt;reset_n&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedDirectReset&lt;/key&gt;
                        &lt;value&gt;clk_in_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedResetSinks&lt;/key&gt;
                        &lt;value&gt;clk_in_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk_out&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedDirectClock&lt;/key&gt;
                            &lt;value&gt;clk_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRateKnown&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;clk_in&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;in_clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;qsys.ui.export_name&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;clk_in_reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset_n&lt;/name&gt;
                        &lt;role&gt;reset_n&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;qsys.ui.export_name&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;clk_reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset_n_out&lt;/name&gt;
                        &lt;role&gt;reset_n&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedDirectReset&lt;/key&gt;
                            &lt;value&gt;clk_in_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedResetSinks&lt;/key&gt;
                            &lt;value&gt;clk_in_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;clock_source&lt;/className&gt;
        &lt;displayName&gt;Clock Source&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;0&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;inputClockFrequency&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Long&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;clk_in&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;CLOCK_RATE&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;clk&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;clk&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;clk_in&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;clk_in&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;board_kernel_clk_export&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_kernel_clk_export&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_kernel_clk_export&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_kernel_clk_export&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_kernel_clk_export&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_kernel_clk_export&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_kernel_clk_export&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/board/board_kernel_clk_export.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="board" as="kernel_clk_export" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_kernel_clk_export"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="board_kernel_clk_in">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;in_clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;in_clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;out_clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;out_clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedDirectClock&lt;/key&gt;
                        &lt;value&gt;in_clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRateKnown&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;in_clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;in_clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;out_clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;out_clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedDirectClock&lt;/key&gt;
                            &lt;value&gt;in_clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRateKnown&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_clock_bridge&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Clock Bridge Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;0&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;DERIVED_CLOCK_RATE&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Long&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;in_clk&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;CLOCK_RATE&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;in_clk&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;in_clk&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;out_clk&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;out_clk&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter name="DERIVED_CLOCK_RATE" value="0" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;board_kernel_clk_in&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_kernel_clk_in&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_kernel_clk_in&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_kernel_clk_in&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_kernel_clk_in&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_kernel_clk_in&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_kernel_clk_in&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/board/board_kernel_clk_in.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="board" as="kernel_clk_in" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_kernel_clk_in"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="board_kernel_interface">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;acl_bsp_memorg_host0x018&lt;/name&gt;
            &lt;type&gt;conduit&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;acl_bsp_memorg_host0x018_mode&lt;/name&gt;
                    &lt;role&gt;mode&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;2&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk_clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;qsys.ui.export_name&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;100000000&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;ctrl&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;ctrl_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;ctrl_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;ctrl_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;ctrl_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;ctrl_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;ctrl_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;14&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;ctrl_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;ctrl_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;ctrl_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;4&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;ctrl_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;16384&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;kernel_clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;kernel_clk_clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;kernel_cra&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;kernel_cra_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;kernel_cra_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;kernel_cra_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;kernel_cra_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;kernel_cra_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;kernel_cra_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;30&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;kernel_cra_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;kernel_cra_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;kernel_cra_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;8&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;kernel_cra_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;adaptsTo&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;kernel_clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dBSBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamReads&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamWrites&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isAsynchronous&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isReadable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isWriteable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxAddressWidth&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;kernel_irq_from_kernel&lt;/name&gt;
            &lt;type&gt;interrupt&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;kernel_irq_from_kernel_irq&lt;/name&gt;
                    &lt;role&gt;irq&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedAddressablePoint&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;kernel_clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;irqMap&lt;/key&gt;
                        &lt;value&gt;&amp;lt;map&amp;gt;&amp;lt;mapping port=&apos;0&apos; sender=&apos;sender0_irq&apos; /&amp;gt;&amp;lt;/map&amp;gt;&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;irqScheme&lt;/key&gt;
                        &lt;value&gt;INDIVIDUAL_REQUESTS&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;kernel_irq_to_host&lt;/name&gt;
            &lt;type&gt;interrupt&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;kernel_irq_to_host_irq&lt;/name&gt;
                    &lt;role&gt;irq&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedAddressablePoint&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;kernel_clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedReceiverOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToReceiver&lt;/key&gt;
                        &lt;value&gt;kernel_interface.kernel_irq_from_kernel&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;irqScheme&lt;/key&gt;
                        &lt;value&gt;NONE&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;kernel_reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;kernel_reset_reset_n&lt;/name&gt;
                    &lt;role&gt;reset_n&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;kernel_clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedDirectReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedResetSinks&lt;/key&gt;
                        &lt;value&gt;reset,reset,sw_reset_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset_reset_n&lt;/name&gt;
                    &lt;role&gt;reset_n&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;qsys.ui.export_name&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;sw_reset_export&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;sw_reset_export_reset_n&lt;/name&gt;
                    &lt;role&gt;reset_n&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedDirectReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedResetSinks&lt;/key&gt;
                        &lt;value&gt;reset,sw_reset_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;sw_reset_in&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;sw_reset_in_reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;acl_bsp_memorg_host0x018&lt;/name&gt;
                &lt;type&gt;conduit&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;acl_bsp_memorg_host0x018_mode&lt;/name&gt;
                        &lt;role&gt;mode&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;2&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk_clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;qsys.ui.export_name&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;100000000&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;ctrl&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;ctrl_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;ctrl_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;ctrl_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;ctrl_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;ctrl_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;ctrl_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;14&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;ctrl_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;ctrl_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;ctrl_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;4&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;ctrl_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;16384&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;kernel_clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;kernel_clk_clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;kernel_cra&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;kernel_cra_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;kernel_cra_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;kernel_cra_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;kernel_cra_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;kernel_cra_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;kernel_cra_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;30&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;kernel_cra_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;kernel_cra_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;kernel_cra_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;8&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;kernel_cra_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;adaptsTo&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;kernel_clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dBSBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamReads&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamWrites&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isAsynchronous&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isReadable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isWriteable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxAddressWidth&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;kernel_irq_from_kernel&lt;/name&gt;
                &lt;type&gt;interrupt&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;kernel_irq_from_kernel_irq&lt;/name&gt;
                        &lt;role&gt;irq&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedAddressablePoint&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;kernel_clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;irqMap&lt;/key&gt;
                            &lt;value&gt;&amp;lt;map&amp;gt;&amp;lt;mapping port=&apos;0&apos; sender=&apos;sender0_irq&apos; /&amp;gt;&amp;lt;/map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;irqScheme&lt;/key&gt;
                            &lt;value&gt;INDIVIDUAL_REQUESTS&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;kernel_irq_to_host&lt;/name&gt;
                &lt;type&gt;interrupt&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;kernel_irq_to_host_irq&lt;/name&gt;
                        &lt;role&gt;irq&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedAddressablePoint&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;kernel_clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedReceiverOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToReceiver&lt;/key&gt;
                            &lt;value&gt;kernel_interface.kernel_irq_from_kernel&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;irqScheme&lt;/key&gt;
                            &lt;value&gt;NONE&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;kernel_reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;kernel_reset_reset_n&lt;/name&gt;
                        &lt;role&gt;reset_n&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;kernel_clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedDirectReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedResetSinks&lt;/key&gt;
                            &lt;value&gt;reset,reset,sw_reset_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset_reset_n&lt;/name&gt;
                        &lt;role&gt;reset_n&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;qsys.ui.export_name&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;sw_reset_export&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;sw_reset_export_reset_n&lt;/name&gt;
                        &lt;role&gt;reset_n&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedDirectReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedResetSinks&lt;/key&gt;
                            &lt;value&gt;reset,sw_reset_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;sw_reset_in&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;sw_reset_in_reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;kernel_interface&lt;/className&gt;
        &lt;version&gt;15.1&lt;/version&gt;
        &lt;displayName&gt;OpenCL Kernel Interface&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;AUTO_DEVICE&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.String&lt;/parameterType&gt;
                &lt;systemInfotype&gt;DEVICE&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;AUTO_DEVICE_FAMILY&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.String&lt;/parameterType&gt;
                &lt;systemInfotype&gt;DEVICE_FAMILY&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;AUTO_DEVICE_SPEEDGRADE&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.String&lt;/parameterType&gt;
                &lt;systemInfotype&gt;DEVICE_SPEEDGRADE&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;ctrl&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;ctrl&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name=&apos;ctrl&apos; start=&apos;0x0&apos; end=&apos;0x4000&apos; datawidth=&apos;32&apos; /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;14&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter name="AUTO_DEVICE_SPEEDGRADE" value="2" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;board_kernel_interface&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_kernel_interface&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_kernel_interface&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_kernel_interface&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_kernel_interface&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_kernel_interface&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_kernel_interface&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/board/board_kernel_interface.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="board" as="kernel_interface" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_kernel_interface"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="pipe_stage_msgdma_csr_0">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="SYSINFO_ADDR_WIDTH" value="10" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;m0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;48&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;adaptsTo&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dBSBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamReads&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamWrites&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isAsynchronous&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isReadable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isWriteable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxAddressWidth&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;s0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;48&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;281474976710656&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;value&gt;pipe_stage_dma_host_rd.m0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;64&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;m0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;48&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;adaptsTo&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dBSBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamReads&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamWrites&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isAsynchronous&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isReadable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isWriteable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxAddressWidth&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;s0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;48&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;281474976710656&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                            &lt;value&gt;pipe_stage_dma_host_rd.m0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;64&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_avalon_mm_bridge&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Avalon-MM Pipeline Bridge Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;10&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;SYSINFO_ADDR_WIDTH&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Integer&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;m0&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;ADDRESS_WIDTH&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;m0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;m0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;10&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;s0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;s0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;pipe_stage_msgdma_csr_0&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;pipe_stage_msgdma_csr_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;pipe_stage_msgdma_csr_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;pipe_stage_msgdma_csr_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;pipe_stage_msgdma_csr_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;pipe_stage_msgdma_csr_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;pipe_stage_msgdma_csr_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/board/pipe_stage_msgdma_csr_0.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="board" as="pipe_stage_dma_host_rd" />
  <messages>
   <message level="Info" culprit="board">"Generating: pipe_stage_msgdma_csr_0"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="pipe_stage_dma_host_rd_0">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="SYSINFO_ADDR_WIDTH" value="10" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;m0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;48&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;adaptsTo&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dBSBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamReads&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamWrites&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isAsynchronous&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isReadable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isWriteable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxAddressWidth&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;s0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;48&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;281474976710656&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;value&gt;pipe_stage_dma_host_wr.m0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;64&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;m0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;48&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;adaptsTo&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dBSBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamReads&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamWrites&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isAsynchronous&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isReadable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isWriteable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxAddressWidth&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;s0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;48&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;281474976710656&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                            &lt;value&gt;pipe_stage_dma_host_wr.m0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;64&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_avalon_mm_bridge&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Avalon-MM Pipeline Bridge Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;10&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;SYSINFO_ADDR_WIDTH&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Integer&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;m0&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;ADDRESS_WIDTH&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;m0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;m0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;10&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;s0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;s0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;pipe_stage_dma_host_rd_0&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;pipe_stage_dma_host_rd_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;pipe_stage_dma_host_rd_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;pipe_stage_dma_host_rd_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;pipe_stage_dma_host_rd_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;pipe_stage_dma_host_rd_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;pipe_stage_dma_host_rd_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/board/pipe_stage_dma_host_rd_0.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="board" as="pipe_stage_dma_host_wr" />
  <messages>
   <message level="Info" culprit="board">"Generating: pipe_stage_dma_host_rd_0"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="board_pipe_stage_host_ctrl">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="SYSINFO_ADDR_WIDTH" value="18" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;m0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;18&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;8&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;adaptsTo&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dBSBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamReads&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamWrites&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isAsynchronous&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isReadable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isWriteable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxAddressWidth&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;s0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;18&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;8&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;262144&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;value&gt;pipe_stage_host_ctrl.m0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;m0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;18&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;8&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;adaptsTo&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dBSBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamReads&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamWrites&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isAsynchronous&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isReadable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isWriteable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxAddressWidth&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;s0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;18&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;8&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;262144&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                            &lt;value&gt;pipe_stage_host_ctrl.m0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_avalon_mm_bridge&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Avalon-MM Pipeline Bridge Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;10&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;SYSINFO_ADDR_WIDTH&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Integer&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;m0&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;ADDRESS_WIDTH&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;m0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;m0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;18&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;s0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;s0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;board_pipe_stage_host_ctrl&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_pipe_stage_host_ctrl&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_pipe_stage_host_ctrl&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_pipe_stage_host_ctrl&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_pipe_stage_host_ctrl&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;board_pipe_stage_host_ctrl&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;board_pipe_stage_host_ctrl&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/board/board_pipe_stage_host_ctrl.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="board" as="pipe_stage_host_ctrl" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_pipe_stage_host_ctrl"</message>
  </messages>
 </entity>
 <entity
   kind="altera_mm_interconnect"
   version="19.1"
   name="board_altera_mm_interconnect_191_plnkcii">
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="AUTO_DEVICE_SPEEDGRADE" value="" />
  <parameter
     name="COMPOSE_CONTENTS"
     value="add_instance {ddr_board_host_wr_translator} {altera_merlin_master_translator};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_ADDRESS_W} {49};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_DATA_W} {512};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_BURSTCOUNT_W} {3};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_BYTEENABLE_W} {64};set_instance_parameter_value {ddr_board_host_wr_translator} {UAV_ADDRESS_W} {49};set_instance_parameter_value {ddr_board_host_wr_translator} {UAV_BURSTCOUNT_W} {9};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_READLATENCY} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_READDATA} {1};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_READ} {1};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_WRITE} {1};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_ADDRESS} {1};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_DEBUGACCESS} {1};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_CLKEN} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_LOCK} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_SYMBOLS_PER_WORD} {64};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_CONSTANT_BURST_BEHAVIOR} {1};set_instance_parameter_value {ddr_board_host_wr_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {1};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {64};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {SYNC_RESET} {0};set_instance_parameter_value {ddr_board_host_wr_translator} {WAITREQUEST_ALLOWANCE} {0};add_instance {pipe_stage_dma_host_wr_s0_translator} {altera_merlin_slave_translator};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_ADDRESS_W} {48};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_DATA_W} {512};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {UAV_DATA_W} {512};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_BURSTCOUNT_W} {3};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_BYTEENABLE_W} {64};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {UAV_BYTEENABLE_W} {64};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {UAV_ADDRESS_W} {49};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {UAV_BURSTCOUNT_W} {9};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_READLATENCY} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_READ_WAIT} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_READDATA} {1};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_READ} {1};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_WRITE} {1};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_ADDRESS} {1};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_LOCK} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_DEBUGACCESS} {1};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_SYMBOLS_PER_WORD} {64};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {64};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_s0_translator} {SYNC_RESET} {0};add_instance {pipe_stage_dma_host_wr_reset_reset_bridge} {altera_reset_bridge};set_instance_parameter_value {pipe_stage_dma_host_wr_reset_reset_bridge} {ACTIVE_LOW_RESET} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_reset_reset_bridge} {SYNCHRONOUS_EDGES} {deassert};set_instance_parameter_value {pipe_stage_dma_host_wr_reset_reset_bridge} {NUM_RESET_OUTPUTS} {1};set_instance_parameter_value {pipe_stage_dma_host_wr_reset_reset_bridge} {USE_RESET_REQUEST} {0};set_instance_parameter_value {pipe_stage_dma_host_wr_reset_reset_bridge} {SYNC_RESET} {0};add_instance {clk_200_out_clk_clock_bridge} {altera_clock_bridge};set_instance_parameter_value {clk_200_out_clk_clock_bridge} {EXPLICIT_CLOCK_RATE} {200000000};set_instance_parameter_value {clk_200_out_clk_clock_bridge} {NUM_CLOCK_OUTPUTS} {1};add_connection {ddr_board_host_wr_translator.avalon_universal_master_0} {pipe_stage_dma_host_wr_s0_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {ddr_board_host_wr_translator.avalon_universal_master_0/pipe_stage_dma_host_wr_s0_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {ddr_board_host_wr_translator.avalon_universal_master_0/pipe_stage_dma_host_wr_s0_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {ddr_board_host_wr_translator.avalon_universal_master_0/pipe_stage_dma_host_wr_s0_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {ddr_board_host_wr_translator.avalon_universal_master_0/pipe_stage_dma_host_wr_s0_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {ddr_board_host_wr_translator.avalon_universal_master_0/pipe_stage_dma_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {4};set_connection_parameter_value {ddr_board_host_wr_translator.avalon_universal_master_0/pipe_stage_dma_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {FIFO};set_connection_parameter_value {ddr_board_host_wr_translator.avalon_universal_master_0/pipe_stage_dma_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {ddr_board_host_wr_translator.avalon_universal_master_0/pipe_stage_dma_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {ddr_board_host_wr_translator.avalon_universal_master_0/pipe_stage_dma_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {ddr_board_host_wr_translator.avalon_universal_master_0/pipe_stage_dma_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {ddr_board_host_wr_translator.avalon_universal_master_0/pipe_stage_dma_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {ddr_board_host_wr_translator.avalon_universal_master_0/pipe_stage_dma_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {ddr_board_host_wr_translator.avalon_universal_master_0/pipe_stage_dma_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {ddr_board_host_wr_translator.avalon_universal_master_0/pipe_stage_dma_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {pipe_stage_dma_host_wr_reset_reset_bridge.out_reset} {ddr_board_host_wr_translator.reset} {reset};add_connection {pipe_stage_dma_host_wr_reset_reset_bridge.out_reset} {pipe_stage_dma_host_wr_s0_translator.reset} {reset};add_connection {clk_200_out_clk_clock_bridge.out_clk} {ddr_board_host_wr_translator.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {pipe_stage_dma_host_wr_s0_translator.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {pipe_stage_dma_host_wr_reset_reset_bridge.clk} {clock};add_interface {ddr_board_host_wr} {avalon} {slave};set_interface_property {ddr_board_host_wr} {EXPORT_OF} {ddr_board_host_wr_translator.avalon_anti_master_0};add_interface {pipe_stage_dma_host_wr_s0} {avalon} {master};set_interface_property {pipe_stage_dma_host_wr_s0} {EXPORT_OF} {pipe_stage_dma_host_wr_s0_translator.avalon_anti_slave_0};add_interface {pipe_stage_dma_host_wr_reset_reset_bridge_in_reset} {reset} {slave};set_interface_property {pipe_stage_dma_host_wr_reset_reset_bridge_in_reset} {EXPORT_OF} {pipe_stage_dma_host_wr_reset_reset_bridge.in_reset};add_interface {clk_200_out_clk} {clock} {slave};set_interface_property {clk_200_out_clk} {EXPORT_OF} {clk_200_out_clk_clock_bridge.in_clk};set_module_assignment {interconnect_id.ddr_board.host_wr} {0};set_module_assignment {interconnect_id.pipe_stage_dma_host_wr.s0} {0};" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_mm_interconnect_191/synth/board_altera_mm_interconnect_191_plnkcii.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_mm_interconnect_191/synth/board_altera_mm_interconnect_191_plnkcii.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_mm_interconnect/altera_mm_interconnect_hw.tcl" />
  </sourceFiles>
  <childSourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_translator/altera_merlin_master_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_translator/altera_merlin_slave_translator_hw.tcl" />
  </childSourceFiles>
  <instantiator instantiator="board" as="mm_interconnect_1" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_mm_interconnect_191_plnkcii"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_master_translator_191_g7h47bq"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_slave_translator_191_x56fcki"</message>
  </messages>
 </entity>
 <entity
   kind="altera_mm_interconnect"
   version="19.1"
   name="board_altera_mm_interconnect_191_qqmhvsy">
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="AUTO_DEVICE_SPEEDGRADE" value="" />
  <parameter
     name="COMPOSE_CONTENTS"
     value="add_instance {pipe_stage_host_ctrl_m0_translator} {altera_merlin_master_translator};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_ADDRESS_W} {18};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_DATA_W} {64};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_BYTEENABLE_W} {8};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {UAV_ADDRESS_W} {18};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {UAV_BURSTCOUNT_W} {4};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_READLATENCY} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_READDATA} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_READ} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_WRITE} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_ADDRESS} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_DEBUGACCESS} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_CLKEN} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_LOCK} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_SYMBOLS_PER_WORD} {8};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {64};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {SYNC_RESET} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_translator} {WAITREQUEST_ALLOWANCE} {0};add_instance {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {altera_merlin_slave_translator};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_ADDRESS_W} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_DATA_W} {32};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {UAV_DATA_W} {32};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_BYTEENABLE_W} {4};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {UAV_BYTEENABLE_W} {4};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {UAV_ADDRESS_W} {18};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {UAV_BURSTCOUNT_W} {3};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_READLATENCY} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_READDATA} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_READ} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_WRITE} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_ADDRESS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_BURSTCOUNT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_READDATAVALID} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_LOCK} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_DEBUGACCESS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_SYMBOLS_PER_WORD} {4};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_ADDRESS_SYMBOLS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_translator} {SYNC_RESET} {0};add_instance {board_irq_ctrl_0_IRQ_Read_Slave_translator} {altera_merlin_slave_translator};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_ADDRESS_W} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_DATA_W} {32};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {UAV_DATA_W} {32};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_BYTEENABLE_W} {4};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {UAV_BYTEENABLE_W} {4};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {UAV_ADDRESS_W} {18};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {UAV_BURSTCOUNT_W} {3};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_READLATENCY} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_READDATA} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_WRITEDATA} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_READ} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_WRITE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_BYTEENABLE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_ADDRESS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_BURSTCOUNT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_READDATAVALID} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_WAITREQUEST} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_LOCK} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_DEBUGACCESS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_SYMBOLS_PER_WORD} {4};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_ADDRESS_SYMBOLS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_translator} {SYNC_RESET} {0};add_instance {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {altera_merlin_slave_translator};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_ADDRESS_W} {3};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_DATA_W} {64};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {UAV_DATA_W} {64};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_BYTEENABLE_W} {8};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {UAV_BYTEENABLE_W} {8};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {UAV_ADDRESS_W} {18};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {UAV_BURSTCOUNT_W} {4};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_READLATENCY} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_READDATA} {1};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_READ} {1};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_WRITE} {1};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_BYTEENABLE} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_ADDRESS} {1};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_BURSTCOUNT} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_READDATAVALID} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_WAITREQUEST} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_LOCK} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_DEBUGACCESS} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_SYMBOLS_PER_WORD} {8};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_ADDRESS_SYMBOLS} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {1};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_translator} {SYNC_RESET} {0};add_instance {ddr_board_ase_0_avmm_pipe_slave_translator} {altera_merlin_slave_translator};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_ADDRESS_W} {13};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_DATA_W} {64};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {UAV_DATA_W} {64};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_BYTEENABLE_W} {8};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {UAV_BYTEENABLE_W} {8};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {UAV_ADDRESS_W} {18};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {UAV_BURSTCOUNT_W} {4};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_READLATENCY} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_READ_WAIT} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_READDATA} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_READ} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_WRITE} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_ADDRESS} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_LOCK} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_DEBUGACCESS} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_SYMBOLS_PER_WORD} {8};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_translator} {SYNC_RESET} {0};add_instance {kernel_interface_ctrl_translator} {altera_merlin_slave_translator};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_ADDRESS_W} {14};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_DATA_W} {32};set_instance_parameter_value {kernel_interface_ctrl_translator} {UAV_DATA_W} {32};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_BYTEENABLE_W} {4};set_instance_parameter_value {kernel_interface_ctrl_translator} {UAV_BYTEENABLE_W} {4};set_instance_parameter_value {kernel_interface_ctrl_translator} {UAV_ADDRESS_W} {18};set_instance_parameter_value {kernel_interface_ctrl_translator} {UAV_BURSTCOUNT_W} {3};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_READLATENCY} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_READ_WAIT} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_READDATA} {1};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_READ} {1};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_WRITE} {1};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_ADDRESS} {1};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_LOCK} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_DEBUGACCESS} {1};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_SYMBOLS_PER_WORD} {4};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {1};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {kernel_interface_ctrl_translator} {SYNC_RESET} {0};add_instance {ddr_board_msgdma_bbb_0_csr_translator} {altera_merlin_slave_translator};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_ADDRESS_W} {7};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_DATA_W} {64};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {UAV_DATA_W} {64};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_BYTEENABLE_W} {8};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {UAV_BYTEENABLE_W} {8};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {UAV_ADDRESS_W} {18};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {UAV_BURSTCOUNT_W} {4};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_READLATENCY} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_READ_WAIT} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_READDATA} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_READ} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_WRITE} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_ADDRESS} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_LOCK} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_DEBUGACCESS} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_SYMBOLS_PER_WORD} {8};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_translator} {SYNC_RESET} {0};add_instance {ddr_board_msgdma_bbb_1_csr_translator} {altera_merlin_slave_translator};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_ADDRESS_W} {7};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_DATA_W} {64};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {UAV_DATA_W} {64};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_BYTEENABLE_W} {8};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {UAV_BYTEENABLE_W} {8};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {UAV_ADDRESS_W} {18};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {UAV_BURSTCOUNT_W} {4};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_READLATENCY} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_READ_WAIT} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_READDATA} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_READ} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_WRITE} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_ADDRESS} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_LOCK} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_DEBUGACCESS} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_SYMBOLS_PER_WORD} {8};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_translator} {SYNC_RESET} {0};add_instance {ddr_board_null_dfh_afu_id_translator} {altera_merlin_slave_translator};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_ADDRESS_W} {3};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_DATA_W} {64};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {UAV_DATA_W} {64};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_BYTEENABLE_W} {8};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {UAV_BYTEENABLE_W} {8};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {UAV_ADDRESS_W} {18};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {UAV_BURSTCOUNT_W} {4};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_READLATENCY} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_READDATA} {1};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_READ} {1};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_WRITE} {1};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_BYTEENABLE} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_ADDRESS} {1};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_BURSTCOUNT} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_READDATAVALID} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_WAITREQUEST} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_LOCK} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_DEBUGACCESS} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_SYMBOLS_PER_WORD} {8};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_ADDRESS_SYMBOLS} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {1};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_translator} {SYNC_RESET} {0};add_instance {pipe_stage_host_ctrl_m0_agent} {altera_merlin_master_agent};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_WUNIQUE} {137};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_DOMAIN_H} {136};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_DOMAIN_L} {135};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_SNOOP_H} {134};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_SNOOP_L} {131};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_BARRIER_H} {130};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_BARRIER_L} {129};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_ORI_BURST_SIZE_H} {128};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_ORI_BURST_SIZE_L} {126};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_RESPONSE_STATUS_H} {125};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_RESPONSE_STATUS_L} {124};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_QOS_H} {109};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_QOS_L} {109};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_DATA_SIDEBAND_H} {107};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_DATA_SIDEBAND_L} {107};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_ADDR_SIDEBAND_H} {106};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_ADDR_SIDEBAND_L} {106};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_BURST_TYPE_H} {105};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_BURST_TYPE_L} {104};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_CACHE_H} {123};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_CACHE_L} {120};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_THREAD_ID_H} {116};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_THREAD_ID_L} {116};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_BURST_SIZE_H} {103};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_BURST_SIZE_L} {101};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_TRANS_EXCLUSIVE} {95};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_TRANS_LOCK} {94};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_BEGIN_BURST} {108};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_PROTECTION_H} {119};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_PROTECTION_L} {117};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_BURSTWRAP_H} {100};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_BURSTWRAP_L} {100};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_BYTE_CNT_H} {99};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_BYTE_CNT_L} {96};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_ADDR_H} {89};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_ADDR_L} {72};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_TRANS_COMPRESSED_READ} {90};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_TRANS_POSTED} {91};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_TRANS_WRITE} {92};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_TRANS_READ} {93};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_DATA_H} {63};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_DATA_L} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_BYTEEN_H} {71};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_BYTEEN_L} {64};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_SRC_ID_H} {112};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_SRC_ID_L} {110};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_DEST_ID_H} {115};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {PKT_DEST_ID_L} {113};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {ST_DATA_W} {138};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {ST_CHANNEL_W} {8};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {AV_BURSTCOUNT_W} {4};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {ADDR_MAP} {&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;address_map&gt;
 &lt;slave
   id=&quot;1&quot;
   name=&quot;board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_universal_slave_0&quot;
   start=&quot;0x0000000000000108&quot;
   end=&quot;0x0000000000000010c&quot;
   responds=&quot;1&quot;
   user_default=&quot;0&quot; /&gt;
 &lt;slave
   id=&quot;2&quot;
   name=&quot;board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_universal_slave_0&quot;
   start=&quot;0x0000000000000100&quot;
   end=&quot;0x00000000000000104&quot;
   responds=&quot;1&quot;
   user_default=&quot;0&quot; /&gt;
 &lt;slave
   id=&quot;0&quot;
   name=&quot;board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0&quot;
   start=&quot;0x0000000000000000&quot;
   end=&quot;0x00000000000000040&quot;
   responds=&quot;1&quot;
   user_default=&quot;0&quot; /&gt;
 &lt;slave
   id=&quot;3&quot;
   name=&quot;ddr_board_ase_0_avmm_pipe_slave_translator.avalon_universal_slave_0&quot;
   start=&quot;0x0000000000010000&quot;
   end=&quot;0x00000000000012000&quot;
   responds=&quot;1&quot;
   user_default=&quot;0&quot; /&gt;
 &lt;slave
   id=&quot;7&quot;
   name=&quot;kernel_interface_ctrl_translator.avalon_universal_slave_0&quot;
   start=&quot;0x0000000000004000&quot;
   end=&quot;0x00000000000008000&quot;
   responds=&quot;1&quot;
   user_default=&quot;0&quot; /&gt;
 &lt;slave
   id=&quot;4&quot;
   name=&quot;ddr_board_msgdma_bbb_0_csr_translator.avalon_universal_slave_0&quot;
   start=&quot;0x0000000000020000&quot;
   end=&quot;0x00000000000020080&quot;
   responds=&quot;1&quot;
   user_default=&quot;0&quot; /&gt;
 &lt;slave
   id=&quot;5&quot;
   name=&quot;ddr_board_msgdma_bbb_1_csr_translator.avalon_universal_slave_0&quot;
   start=&quot;0x0000000000020100&quot;
   end=&quot;0x00000000000020180&quot;
   responds=&quot;1&quot;
   user_default=&quot;0&quot; /&gt;
 &lt;slave
   id=&quot;6&quot;
   name=&quot;ddr_board_null_dfh_afu_id_translator.avalon_universal_slave_0&quot;
   start=&quot;0x0000000000020200&quot;
   end=&quot;0x00000000000020240&quot;
   responds=&quot;1&quot;
   user_default=&quot;0&quot; /&gt;
&lt;/address_map&gt;
};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {SUPPRESS_0_BYTEEN_RSP} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {ID} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {BURSTWRAP_VALUE} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {CACHE_VALUE} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {SECURE_ACCESS_BIT} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {DOMAIN_VALUE} {3};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {BARRIER_VALUE} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {SNOOP_VALUE} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {WUNIQUE_VALUE} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_agent} {SYNC_RESET} {0};add_instance {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {altera_merlin_slave_agent};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_ORI_BURST_SIZE_H} {92};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_ORI_BURST_SIZE_L} {90};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_RESPONSE_STATUS_H} {89};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_RESPONSE_STATUS_L} {88};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_BURST_SIZE_H} {67};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_BURST_SIZE_L} {65};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_TRANS_LOCK} {58};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_BEGIN_BURST} {72};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_PROTECTION_H} {83};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_PROTECTION_L} {81};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_BURSTWRAP_H} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_BURSTWRAP_L} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_BYTE_CNT_H} {63};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_BYTE_CNT_L} {60};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_ADDR_H} {53};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_ADDR_L} {36};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_TRANS_COMPRESSED_READ} {54};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_TRANS_POSTED} {55};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_TRANS_WRITE} {56};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_TRANS_READ} {57};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_DATA_H} {31};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_DATA_L} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_BYTEEN_H} {35};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_BYTEEN_L} {32};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_SRC_ID_H} {76};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_SRC_ID_L} {74};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_DEST_ID_H} {79};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_DEST_ID_L} {77};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {ST_CHANNEL_W} {8};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {ST_DATA_W} {102};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {AVS_BURSTCOUNT_W} {3};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {MERLIN_PACKET_FORMAT} {wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {SUPPRESS_0_BYTEEN_CMD} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {MAX_BYTE_CNT} {4};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {MAX_BURSTWRAP} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {ID} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {ECC_ENABLE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent} {SYNC_RESET} {0};add_instance {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo} {BITS_PER_SYMBOL} {103};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo} {SYNC_RESET} {0};add_instance {board_irq_ctrl_0_IRQ_Read_Slave_agent} {altera_merlin_slave_agent};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_ORI_BURST_SIZE_H} {92};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_ORI_BURST_SIZE_L} {90};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_RESPONSE_STATUS_H} {89};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_RESPONSE_STATUS_L} {88};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_BURST_SIZE_H} {67};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_BURST_SIZE_L} {65};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_TRANS_LOCK} {58};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_BEGIN_BURST} {72};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_PROTECTION_H} {83};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_PROTECTION_L} {81};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_BURSTWRAP_H} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_BURSTWRAP_L} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_BYTE_CNT_H} {63};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_BYTE_CNT_L} {60};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_ADDR_H} {53};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_ADDR_L} {36};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_TRANS_COMPRESSED_READ} {54};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_TRANS_POSTED} {55};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_TRANS_WRITE} {56};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_TRANS_READ} {57};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_DATA_H} {31};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_DATA_L} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_BYTEEN_H} {35};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_BYTEEN_L} {32};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_SRC_ID_H} {76};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_SRC_ID_L} {74};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_DEST_ID_H} {79};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_DEST_ID_L} {77};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {ST_CHANNEL_W} {8};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {ST_DATA_W} {102};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {AVS_BURSTCOUNT_W} {3};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {MERLIN_PACKET_FORMAT} {wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {SUPPRESS_0_BYTEEN_CMD} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {MAX_BYTE_CNT} {4};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {MAX_BURSTWRAP} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {ID} {2};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {ECC_ENABLE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent} {SYNC_RESET} {0};add_instance {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo} {BITS_PER_SYMBOL} {103};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo} {SYNC_RESET} {0};add_instance {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {altera_merlin_slave_agent};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_ORI_BURST_SIZE_H} {128};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_ORI_BURST_SIZE_L} {126};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_RESPONSE_STATUS_H} {125};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_RESPONSE_STATUS_L} {124};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BURST_SIZE_H} {103};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BURST_SIZE_L} {101};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_TRANS_LOCK} {94};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BEGIN_BURST} {108};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_PROTECTION_H} {119};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_PROTECTION_L} {117};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BURSTWRAP_H} {100};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BURSTWRAP_L} {100};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BYTE_CNT_H} {99};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BYTE_CNT_L} {96};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_ADDR_H} {89};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_ADDR_L} {72};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_TRANS_COMPRESSED_READ} {90};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_TRANS_POSTED} {91};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_TRANS_WRITE} {92};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_TRANS_READ} {93};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_DATA_H} {63};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_DATA_L} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BYTEEN_H} {71};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BYTEEN_L} {64};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_SRC_ID_H} {112};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_SRC_ID_L} {110};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_DEST_ID_H} {115};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_DEST_ID_L} {113};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {ST_CHANNEL_W} {8};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {ST_DATA_W} {138};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {AVS_BURSTCOUNT_W} {4};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {SUPPRESS_0_BYTEEN_CMD} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {MAX_BYTE_CNT} {8};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {MAX_BURSTWRAP} {1};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {ID} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {ECC_ENABLE} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent} {SYNC_RESET} {0};add_instance {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {BITS_PER_SYMBOL} {139};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};set_instance_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {SYNC_RESET} {0};add_instance {ddr_board_ase_0_avmm_pipe_slave_agent} {altera_merlin_slave_agent};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_ORI_BURST_SIZE_H} {128};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_ORI_BURST_SIZE_L} {126};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_RESPONSE_STATUS_H} {125};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_RESPONSE_STATUS_L} {124};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_BURST_SIZE_H} {103};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_BURST_SIZE_L} {101};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_TRANS_LOCK} {94};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_BEGIN_BURST} {108};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_PROTECTION_H} {119};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_PROTECTION_L} {117};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_BURSTWRAP_H} {100};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_BURSTWRAP_L} {100};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_BYTE_CNT_H} {99};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_BYTE_CNT_L} {96};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_ADDR_H} {89};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_ADDR_L} {72};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_TRANS_COMPRESSED_READ} {90};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_TRANS_POSTED} {91};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_TRANS_WRITE} {92};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_TRANS_READ} {93};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_DATA_H} {63};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_DATA_L} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_BYTEEN_H} {71};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_BYTEEN_L} {64};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_SRC_ID_H} {112};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_SRC_ID_L} {110};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_DEST_ID_H} {115};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_DEST_ID_L} {113};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {ST_CHANNEL_W} {8};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {ST_DATA_W} {138};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {AVS_BURSTCOUNT_W} {4};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {SUPPRESS_0_BYTEEN_CMD} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {MAX_BYTE_CNT} {8};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {MAX_BURSTWRAP} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {ID} {3};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {ECC_ENABLE} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent} {SYNC_RESET} {0};add_instance {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo} {BITS_PER_SYMBOL} {139};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};set_instance_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo} {SYNC_RESET} {0};add_instance {kernel_interface_ctrl_agent} {altera_merlin_slave_agent};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_ORI_BURST_SIZE_H} {92};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_ORI_BURST_SIZE_L} {90};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_RESPONSE_STATUS_H} {89};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_RESPONSE_STATUS_L} {88};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_BURST_SIZE_H} {67};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_BURST_SIZE_L} {65};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_TRANS_LOCK} {58};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_BEGIN_BURST} {72};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_PROTECTION_H} {83};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_PROTECTION_L} {81};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_BURSTWRAP_H} {64};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_BURSTWRAP_L} {64};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_BYTE_CNT_H} {63};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_BYTE_CNT_L} {60};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_ADDR_H} {53};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_ADDR_L} {36};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_TRANS_COMPRESSED_READ} {54};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_TRANS_POSTED} {55};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_TRANS_WRITE} {56};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_TRANS_READ} {57};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_DATA_H} {31};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_DATA_L} {0};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_BYTEEN_H} {35};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_BYTEEN_L} {32};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_SRC_ID_H} {76};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_SRC_ID_L} {74};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_DEST_ID_H} {79};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_DEST_ID_L} {77};set_instance_parameter_value {kernel_interface_ctrl_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {kernel_interface_ctrl_agent} {ST_CHANNEL_W} {8};set_instance_parameter_value {kernel_interface_ctrl_agent} {ST_DATA_W} {102};set_instance_parameter_value {kernel_interface_ctrl_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {kernel_interface_ctrl_agent} {AVS_BURSTCOUNT_W} {3};set_instance_parameter_value {kernel_interface_ctrl_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {kernel_interface_ctrl_agent} {MERLIN_PACKET_FORMAT} {wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)};set_instance_parameter_value {kernel_interface_ctrl_agent} {SUPPRESS_0_BYTEEN_CMD} {1};set_instance_parameter_value {kernel_interface_ctrl_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {kernel_interface_ctrl_agent} {MAX_BYTE_CNT} {4};set_instance_parameter_value {kernel_interface_ctrl_agent} {MAX_BURSTWRAP} {1};set_instance_parameter_value {kernel_interface_ctrl_agent} {ID} {7};set_instance_parameter_value {kernel_interface_ctrl_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {kernel_interface_ctrl_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {kernel_interface_ctrl_agent} {ECC_ENABLE} {0};set_instance_parameter_value {kernel_interface_ctrl_agent} {SYNC_RESET} {0};add_instance {kernel_interface_ctrl_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {kernel_interface_ctrl_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {kernel_interface_ctrl_agent_rsp_fifo} {BITS_PER_SYMBOL} {103};set_instance_parameter_value {kernel_interface_ctrl_agent_rsp_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {kernel_interface_ctrl_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {kernel_interface_ctrl_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {kernel_interface_ctrl_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {kernel_interface_ctrl_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {kernel_interface_ctrl_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {kernel_interface_ctrl_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {kernel_interface_ctrl_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {kernel_interface_ctrl_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {kernel_interface_ctrl_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {kernel_interface_ctrl_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {kernel_interface_ctrl_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};set_instance_parameter_value {kernel_interface_ctrl_agent_rsp_fifo} {SYNC_RESET} {0};add_instance {ddr_board_msgdma_bbb_0_csr_agent} {altera_merlin_slave_agent};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_ORI_BURST_SIZE_H} {128};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_ORI_BURST_SIZE_L} {126};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_RESPONSE_STATUS_H} {125};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_RESPONSE_STATUS_L} {124};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_BURST_SIZE_H} {103};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_BURST_SIZE_L} {101};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_TRANS_LOCK} {94};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_BEGIN_BURST} {108};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_PROTECTION_H} {119};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_PROTECTION_L} {117};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_BURSTWRAP_H} {100};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_BURSTWRAP_L} {100};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_BYTE_CNT_H} {99};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_BYTE_CNT_L} {96};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_ADDR_H} {89};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_ADDR_L} {72};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_TRANS_COMPRESSED_READ} {90};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_TRANS_POSTED} {91};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_TRANS_WRITE} {92};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_TRANS_READ} {93};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_DATA_H} {63};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_DATA_L} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_BYTEEN_H} {71};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_BYTEEN_L} {64};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_SRC_ID_H} {112};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_SRC_ID_L} {110};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_DEST_ID_H} {115};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_DEST_ID_L} {113};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {ST_CHANNEL_W} {8};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {ST_DATA_W} {138};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {AVS_BURSTCOUNT_W} {4};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {SUPPRESS_0_BYTEEN_CMD} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {MAX_BYTE_CNT} {8};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {MAX_BURSTWRAP} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {ID} {4};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {ECC_ENABLE} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent} {SYNC_RESET} {0};add_instance {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo} {BITS_PER_SYMBOL} {139};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo} {SYNC_RESET} {0};add_instance {ddr_board_msgdma_bbb_1_csr_agent} {altera_merlin_slave_agent};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_ORI_BURST_SIZE_H} {128};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_ORI_BURST_SIZE_L} {126};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_RESPONSE_STATUS_H} {125};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_RESPONSE_STATUS_L} {124};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_BURST_SIZE_H} {103};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_BURST_SIZE_L} {101};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_TRANS_LOCK} {94};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_BEGIN_BURST} {108};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_PROTECTION_H} {119};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_PROTECTION_L} {117};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_BURSTWRAP_H} {100};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_BURSTWRAP_L} {100};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_BYTE_CNT_H} {99};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_BYTE_CNT_L} {96};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_ADDR_H} {89};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_ADDR_L} {72};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_TRANS_COMPRESSED_READ} {90};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_TRANS_POSTED} {91};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_TRANS_WRITE} {92};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_TRANS_READ} {93};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_DATA_H} {63};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_DATA_L} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_BYTEEN_H} {71};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_BYTEEN_L} {64};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_SRC_ID_H} {112};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_SRC_ID_L} {110};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_DEST_ID_H} {115};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_DEST_ID_L} {113};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {ST_CHANNEL_W} {8};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {ST_DATA_W} {138};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {AVS_BURSTCOUNT_W} {4};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {SUPPRESS_0_BYTEEN_CMD} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {MAX_BYTE_CNT} {8};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {MAX_BURSTWRAP} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {ID} {5};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {ECC_ENABLE} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent} {SYNC_RESET} {0};add_instance {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo} {BITS_PER_SYMBOL} {139};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};set_instance_parameter_value {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo} {SYNC_RESET} {0};add_instance {ddr_board_null_dfh_afu_id_agent} {altera_merlin_slave_agent};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_ORI_BURST_SIZE_H} {128};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_ORI_BURST_SIZE_L} {126};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_RESPONSE_STATUS_H} {125};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_RESPONSE_STATUS_L} {124};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_BURST_SIZE_H} {103};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_BURST_SIZE_L} {101};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_TRANS_LOCK} {94};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_BEGIN_BURST} {108};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_PROTECTION_H} {119};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_PROTECTION_L} {117};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_BURSTWRAP_H} {100};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_BURSTWRAP_L} {100};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_BYTE_CNT_H} {99};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_BYTE_CNT_L} {96};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_ADDR_H} {89};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_ADDR_L} {72};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_TRANS_COMPRESSED_READ} {90};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_TRANS_POSTED} {91};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_TRANS_WRITE} {92};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_TRANS_READ} {93};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_DATA_H} {63};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_DATA_L} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_BYTEEN_H} {71};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_BYTEEN_L} {64};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_SRC_ID_H} {112};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_SRC_ID_L} {110};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_DEST_ID_H} {115};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_DEST_ID_L} {113};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {ST_CHANNEL_W} {8};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {ST_DATA_W} {138};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {AVS_BURSTCOUNT_W} {4};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {SUPPRESS_0_BYTEEN_CMD} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {MAX_BYTE_CNT} {8};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {MAX_BURSTWRAP} {1};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {ID} {6};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {ECC_ENABLE} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent} {SYNC_RESET} {0};add_instance {ddr_board_null_dfh_afu_id_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent_rsp_fifo} {BITS_PER_SYMBOL} {139};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent_rsp_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};set_instance_parameter_value {ddr_board_null_dfh_afu_id_agent_rsp_fifo} {SYNC_RESET} {0};add_instance {router} {altera_merlin_router};set_instance_parameter_value {router} {DESTINATION_ID} {0 2 1 7 3 4 5 6 };set_instance_parameter_value {router} {CHANNEL_ID} {00000100 00000010 00000001 00010000 00001000 00100000 01000000 10000000 };set_instance_parameter_value {router} {TYPE_OF_TRANSACTION} {both read both both both both both both };set_instance_parameter_value {router} {START_ADDRESS} {0x0 0x100 0x108 0x4000 0x10000 0x20000 0x20100 0x20200 };set_instance_parameter_value {router} {END_ADDRESS} {0x40 0x104 0x10c 0x8000 0x12000 0x20080 0x20180 0x20240 };set_instance_parameter_value {router} {NON_SECURED_TAG} {1 1 1 1 1 1 1 1 };set_instance_parameter_value {router} {SECURED_RANGE_PAIRS} {0 0 0 0 0 0 0 0 };set_instance_parameter_value {router} {SECURED_RANGE_LIST} {0 0 0 0 0 0 0 0 };set_instance_parameter_value {router} {SPAN_OFFSET} {};set_instance_parameter_value {router} {PKT_ADDR_H} {89};set_instance_parameter_value {router} {PKT_ADDR_L} {72};set_instance_parameter_value {router} {PKT_PROTECTION_H} {119};set_instance_parameter_value {router} {PKT_PROTECTION_L} {117};set_instance_parameter_value {router} {PKT_DEST_ID_H} {115};set_instance_parameter_value {router} {PKT_DEST_ID_L} {113};set_instance_parameter_value {router} {PKT_TRANS_WRITE} {92};set_instance_parameter_value {router} {PKT_TRANS_READ} {93};set_instance_parameter_value {router} {ST_DATA_W} {138};set_instance_parameter_value {router} {ST_CHANNEL_W} {8};set_instance_parameter_value {router} {DECODER_TYPE} {0};set_instance_parameter_value {router} {DEFAULT_CHANNEL} {4};set_instance_parameter_value {router} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router} {DEFAULT_DESTID} {7};set_instance_parameter_value {router} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {router} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router} {SYNC_RESET} {0};add_instance {router_001} {altera_merlin_router};set_instance_parameter_value {router_001} {DESTINATION_ID} {0 };set_instance_parameter_value {router_001} {CHANNEL_ID} {1 };set_instance_parameter_value {router_001} {TYPE_OF_TRANSACTION} {both };set_instance_parameter_value {router_001} {START_ADDRESS} {0x0 };set_instance_parameter_value {router_001} {END_ADDRESS} {0x0 };set_instance_parameter_value {router_001} {NON_SECURED_TAG} {1 };set_instance_parameter_value {router_001} {SECURED_RANGE_PAIRS} {0 };set_instance_parameter_value {router_001} {SECURED_RANGE_LIST} {0 };set_instance_parameter_value {router_001} {SPAN_OFFSET} {};set_instance_parameter_value {router_001} {PKT_ADDR_H} {53};set_instance_parameter_value {router_001} {PKT_ADDR_L} {36};set_instance_parameter_value {router_001} {PKT_PROTECTION_H} {83};set_instance_parameter_value {router_001} {PKT_PROTECTION_L} {81};set_instance_parameter_value {router_001} {PKT_DEST_ID_H} {79};set_instance_parameter_value {router_001} {PKT_DEST_ID_L} {77};set_instance_parameter_value {router_001} {PKT_TRANS_WRITE} {56};set_instance_parameter_value {router_001} {PKT_TRANS_READ} {57};set_instance_parameter_value {router_001} {ST_DATA_W} {102};set_instance_parameter_value {router_001} {ST_CHANNEL_W} {8};set_instance_parameter_value {router_001} {DECODER_TYPE} {1};set_instance_parameter_value {router_001} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_001} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_001} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_001} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_001} {MERLIN_PACKET_FORMAT} {wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)};set_instance_parameter_value {router_001} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router_001} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router_001} {SYNC_RESET} {0};add_instance {router_002} {altera_merlin_router};set_instance_parameter_value {router_002} {DESTINATION_ID} {0 };set_instance_parameter_value {router_002} {CHANNEL_ID} {1 };set_instance_parameter_value {router_002} {TYPE_OF_TRANSACTION} {both };set_instance_parameter_value {router_002} {START_ADDRESS} {0x0 };set_instance_parameter_value {router_002} {END_ADDRESS} {0x0 };set_instance_parameter_value {router_002} {NON_SECURED_TAG} {1 };set_instance_parameter_value {router_002} {SECURED_RANGE_PAIRS} {0 };set_instance_parameter_value {router_002} {SECURED_RANGE_LIST} {0 };set_instance_parameter_value {router_002} {SPAN_OFFSET} {};set_instance_parameter_value {router_002} {PKT_ADDR_H} {53};set_instance_parameter_value {router_002} {PKT_ADDR_L} {36};set_instance_parameter_value {router_002} {PKT_PROTECTION_H} {83};set_instance_parameter_value {router_002} {PKT_PROTECTION_L} {81};set_instance_parameter_value {router_002} {PKT_DEST_ID_H} {79};set_instance_parameter_value {router_002} {PKT_DEST_ID_L} {77};set_instance_parameter_value {router_002} {PKT_TRANS_WRITE} {56};set_instance_parameter_value {router_002} {PKT_TRANS_READ} {57};set_instance_parameter_value {router_002} {ST_DATA_W} {102};set_instance_parameter_value {router_002} {ST_CHANNEL_W} {8};set_instance_parameter_value {router_002} {DECODER_TYPE} {1};set_instance_parameter_value {router_002} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_002} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_002} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_002} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_002} {MERLIN_PACKET_FORMAT} {wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)};set_instance_parameter_value {router_002} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router_002} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router_002} {SYNC_RESET} {0};add_instance {router_003} {altera_merlin_router};set_instance_parameter_value {router_003} {DESTINATION_ID} {0 };set_instance_parameter_value {router_003} {CHANNEL_ID} {1 };set_instance_parameter_value {router_003} {TYPE_OF_TRANSACTION} {both };set_instance_parameter_value {router_003} {START_ADDRESS} {0x0 };set_instance_parameter_value {router_003} {END_ADDRESS} {0x0 };set_instance_parameter_value {router_003} {NON_SECURED_TAG} {1 };set_instance_parameter_value {router_003} {SECURED_RANGE_PAIRS} {0 };set_instance_parameter_value {router_003} {SECURED_RANGE_LIST} {0 };set_instance_parameter_value {router_003} {SPAN_OFFSET} {};set_instance_parameter_value {router_003} {PKT_ADDR_H} {89};set_instance_parameter_value {router_003} {PKT_ADDR_L} {72};set_instance_parameter_value {router_003} {PKT_PROTECTION_H} {119};set_instance_parameter_value {router_003} {PKT_PROTECTION_L} {117};set_instance_parameter_value {router_003} {PKT_DEST_ID_H} {115};set_instance_parameter_value {router_003} {PKT_DEST_ID_L} {113};set_instance_parameter_value {router_003} {PKT_TRANS_WRITE} {92};set_instance_parameter_value {router_003} {PKT_TRANS_READ} {93};set_instance_parameter_value {router_003} {ST_DATA_W} {138};set_instance_parameter_value {router_003} {ST_CHANNEL_W} {8};set_instance_parameter_value {router_003} {DECODER_TYPE} {1};set_instance_parameter_value {router_003} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_003} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_003} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_003} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_003} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {router_003} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router_003} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router_003} {SYNC_RESET} {0};add_instance {router_004} {altera_merlin_router};set_instance_parameter_value {router_004} {DESTINATION_ID} {0 };set_instance_parameter_value {router_004} {CHANNEL_ID} {1 };set_instance_parameter_value {router_004} {TYPE_OF_TRANSACTION} {both };set_instance_parameter_value {router_004} {START_ADDRESS} {0x0 };set_instance_parameter_value {router_004} {END_ADDRESS} {0x0 };set_instance_parameter_value {router_004} {NON_SECURED_TAG} {1 };set_instance_parameter_value {router_004} {SECURED_RANGE_PAIRS} {0 };set_instance_parameter_value {router_004} {SECURED_RANGE_LIST} {0 };set_instance_parameter_value {router_004} {SPAN_OFFSET} {};set_instance_parameter_value {router_004} {PKT_ADDR_H} {89};set_instance_parameter_value {router_004} {PKT_ADDR_L} {72};set_instance_parameter_value {router_004} {PKT_PROTECTION_H} {119};set_instance_parameter_value {router_004} {PKT_PROTECTION_L} {117};set_instance_parameter_value {router_004} {PKT_DEST_ID_H} {115};set_instance_parameter_value {router_004} {PKT_DEST_ID_L} {113};set_instance_parameter_value {router_004} {PKT_TRANS_WRITE} {92};set_instance_parameter_value {router_004} {PKT_TRANS_READ} {93};set_instance_parameter_value {router_004} {ST_DATA_W} {138};set_instance_parameter_value {router_004} {ST_CHANNEL_W} {8};set_instance_parameter_value {router_004} {DECODER_TYPE} {1};set_instance_parameter_value {router_004} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_004} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_004} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_004} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_004} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {router_004} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router_004} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router_004} {SYNC_RESET} {0};add_instance {router_005} {altera_merlin_router};set_instance_parameter_value {router_005} {DESTINATION_ID} {0 };set_instance_parameter_value {router_005} {CHANNEL_ID} {1 };set_instance_parameter_value {router_005} {TYPE_OF_TRANSACTION} {both };set_instance_parameter_value {router_005} {START_ADDRESS} {0x0 };set_instance_parameter_value {router_005} {END_ADDRESS} {0x0 };set_instance_parameter_value {router_005} {NON_SECURED_TAG} {1 };set_instance_parameter_value {router_005} {SECURED_RANGE_PAIRS} {0 };set_instance_parameter_value {router_005} {SECURED_RANGE_LIST} {0 };set_instance_parameter_value {router_005} {SPAN_OFFSET} {};set_instance_parameter_value {router_005} {PKT_ADDR_H} {53};set_instance_parameter_value {router_005} {PKT_ADDR_L} {36};set_instance_parameter_value {router_005} {PKT_PROTECTION_H} {83};set_instance_parameter_value {router_005} {PKT_PROTECTION_L} {81};set_instance_parameter_value {router_005} {PKT_DEST_ID_H} {79};set_instance_parameter_value {router_005} {PKT_DEST_ID_L} {77};set_instance_parameter_value {router_005} {PKT_TRANS_WRITE} {56};set_instance_parameter_value {router_005} {PKT_TRANS_READ} {57};set_instance_parameter_value {router_005} {ST_DATA_W} {102};set_instance_parameter_value {router_005} {ST_CHANNEL_W} {8};set_instance_parameter_value {router_005} {DECODER_TYPE} {1};set_instance_parameter_value {router_005} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_005} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_005} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_005} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_005} {MERLIN_PACKET_FORMAT} {wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)};set_instance_parameter_value {router_005} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router_005} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router_005} {SYNC_RESET} {0};add_instance {router_006} {altera_merlin_router};set_instance_parameter_value {router_006} {DESTINATION_ID} {0 };set_instance_parameter_value {router_006} {CHANNEL_ID} {1 };set_instance_parameter_value {router_006} {TYPE_OF_TRANSACTION} {both };set_instance_parameter_value {router_006} {START_ADDRESS} {0x0 };set_instance_parameter_value {router_006} {END_ADDRESS} {0x0 };set_instance_parameter_value {router_006} {NON_SECURED_TAG} {1 };set_instance_parameter_value {router_006} {SECURED_RANGE_PAIRS} {0 };set_instance_parameter_value {router_006} {SECURED_RANGE_LIST} {0 };set_instance_parameter_value {router_006} {SPAN_OFFSET} {};set_instance_parameter_value {router_006} {PKT_ADDR_H} {89};set_instance_parameter_value {router_006} {PKT_ADDR_L} {72};set_instance_parameter_value {router_006} {PKT_PROTECTION_H} {119};set_instance_parameter_value {router_006} {PKT_PROTECTION_L} {117};set_instance_parameter_value {router_006} {PKT_DEST_ID_H} {115};set_instance_parameter_value {router_006} {PKT_DEST_ID_L} {113};set_instance_parameter_value {router_006} {PKT_TRANS_WRITE} {92};set_instance_parameter_value {router_006} {PKT_TRANS_READ} {93};set_instance_parameter_value {router_006} {ST_DATA_W} {138};set_instance_parameter_value {router_006} {ST_CHANNEL_W} {8};set_instance_parameter_value {router_006} {DECODER_TYPE} {1};set_instance_parameter_value {router_006} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_006} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_006} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_006} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_006} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {router_006} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router_006} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router_006} {SYNC_RESET} {0};add_instance {router_007} {altera_merlin_router};set_instance_parameter_value {router_007} {DESTINATION_ID} {0 };set_instance_parameter_value {router_007} {CHANNEL_ID} {1 };set_instance_parameter_value {router_007} {TYPE_OF_TRANSACTION} {both };set_instance_parameter_value {router_007} {START_ADDRESS} {0x0 };set_instance_parameter_value {router_007} {END_ADDRESS} {0x0 };set_instance_parameter_value {router_007} {NON_SECURED_TAG} {1 };set_instance_parameter_value {router_007} {SECURED_RANGE_PAIRS} {0 };set_instance_parameter_value {router_007} {SECURED_RANGE_LIST} {0 };set_instance_parameter_value {router_007} {SPAN_OFFSET} {};set_instance_parameter_value {router_007} {PKT_ADDR_H} {89};set_instance_parameter_value {router_007} {PKT_ADDR_L} {72};set_instance_parameter_value {router_007} {PKT_PROTECTION_H} {119};set_instance_parameter_value {router_007} {PKT_PROTECTION_L} {117};set_instance_parameter_value {router_007} {PKT_DEST_ID_H} {115};set_instance_parameter_value {router_007} {PKT_DEST_ID_L} {113};set_instance_parameter_value {router_007} {PKT_TRANS_WRITE} {92};set_instance_parameter_value {router_007} {PKT_TRANS_READ} {93};set_instance_parameter_value {router_007} {ST_DATA_W} {138};set_instance_parameter_value {router_007} {ST_CHANNEL_W} {8};set_instance_parameter_value {router_007} {DECODER_TYPE} {1};set_instance_parameter_value {router_007} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_007} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_007} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_007} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_007} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {router_007} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router_007} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router_007} {SYNC_RESET} {0};add_instance {router_008} {altera_merlin_router};set_instance_parameter_value {router_008} {DESTINATION_ID} {0 };set_instance_parameter_value {router_008} {CHANNEL_ID} {1 };set_instance_parameter_value {router_008} {TYPE_OF_TRANSACTION} {both };set_instance_parameter_value {router_008} {START_ADDRESS} {0x0 };set_instance_parameter_value {router_008} {END_ADDRESS} {0x0 };set_instance_parameter_value {router_008} {NON_SECURED_TAG} {1 };set_instance_parameter_value {router_008} {SECURED_RANGE_PAIRS} {0 };set_instance_parameter_value {router_008} {SECURED_RANGE_LIST} {0 };set_instance_parameter_value {router_008} {SPAN_OFFSET} {};set_instance_parameter_value {router_008} {PKT_ADDR_H} {89};set_instance_parameter_value {router_008} {PKT_ADDR_L} {72};set_instance_parameter_value {router_008} {PKT_PROTECTION_H} {119};set_instance_parameter_value {router_008} {PKT_PROTECTION_L} {117};set_instance_parameter_value {router_008} {PKT_DEST_ID_H} {115};set_instance_parameter_value {router_008} {PKT_DEST_ID_L} {113};set_instance_parameter_value {router_008} {PKT_TRANS_WRITE} {92};set_instance_parameter_value {router_008} {PKT_TRANS_READ} {93};set_instance_parameter_value {router_008} {ST_DATA_W} {138};set_instance_parameter_value {router_008} {ST_CHANNEL_W} {8};set_instance_parameter_value {router_008} {DECODER_TYPE} {1};set_instance_parameter_value {router_008} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_008} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_008} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_008} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_008} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {router_008} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router_008} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router_008} {SYNC_RESET} {0};add_instance {pipe_stage_host_ctrl_m0_limiter} {altera_merlin_traffic_limiter};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {SYNC_RESET} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {PKT_DEST_ID_H} {115};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {PKT_DEST_ID_L} {113};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {PKT_SRC_ID_H} {112};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {PKT_SRC_ID_L} {110};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {PKT_BYTE_CNT_H} {99};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {PKT_BYTE_CNT_L} {96};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {PKT_BYTEEN_H} {71};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {PKT_BYTEEN_L} {64};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {PKT_TRANS_POSTED} {91};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {PKT_TRANS_WRITE} {92};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {PKT_THREAD_ID_H} {116};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {PKT_THREAD_ID_L} {116};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {MAX_BURST_LENGTH} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {MAX_OUTSTANDING_RESPONSES} {16};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {PIPELINED} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {ST_DATA_W} {138};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {ST_CHANNEL_W} {8};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {VALID_WIDTH} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {ENFORCE_ORDER} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {PREVENT_HAZARDS} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {SUPPORTS_POSTED_WRITES} {1};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {SUPPORTS_NONPOSTED_WRITES} {0};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {pipe_stage_host_ctrl_m0_limiter} {REORDER} {0};add_instance {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {altera_merlin_burst_adapter};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PKT_ADDR_H} {53};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PKT_ADDR_L} {36};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PKT_BEGIN_BURST} {72};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PKT_BYTE_CNT_H} {63};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PKT_BYTE_CNT_L} {60};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PKT_BYTEEN_H} {35};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PKT_BYTEEN_L} {32};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PKT_BURST_SIZE_H} {67};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PKT_BURST_SIZE_L} {65};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PKT_BURST_TYPE_H} {69};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PKT_BURST_TYPE_L} {68};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PKT_BURSTWRAP_H} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PKT_BURSTWRAP_L} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PKT_TRANS_COMPRESSED_READ} {54};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PKT_TRANS_WRITE} {56};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PKT_TRANS_READ} {57};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {OUT_NARROW_SIZE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {IN_NARROW_SIZE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {OUT_FIXED} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {OUT_COMPLETE_WRAP} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {ST_DATA_W} {102};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {ST_CHANNEL_W} {8};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {OUT_BYTE_CNT_H} {62};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {OUT_BURSTWRAP_H} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {MERLIN_PACKET_FORMAT} {wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {COMPRESSED_READ_SUPPORT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {BYTEENABLE_SYNTHESIS} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {PIPE_INPUTS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {NO_WRAP_SUPPORT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {INCOMPLETE_WRAP_SUPPORT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {BURSTWRAP_CONST_MASK} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {BURSTWRAP_CONST_VALUE} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {ADAPTER_VERSION} {13.1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter} {SYNC_RESET} {0};add_instance {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {altera_merlin_burst_adapter};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PKT_ADDR_H} {53};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PKT_ADDR_L} {36};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PKT_BEGIN_BURST} {72};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PKT_BYTE_CNT_H} {63};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PKT_BYTE_CNT_L} {60};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PKT_BYTEEN_H} {35};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PKT_BYTEEN_L} {32};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PKT_BURST_SIZE_H} {67};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PKT_BURST_SIZE_L} {65};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PKT_BURST_TYPE_H} {69};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PKT_BURST_TYPE_L} {68};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PKT_BURSTWRAP_H} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PKT_BURSTWRAP_L} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PKT_TRANS_COMPRESSED_READ} {54};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PKT_TRANS_WRITE} {56};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PKT_TRANS_READ} {57};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {OUT_NARROW_SIZE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {IN_NARROW_SIZE} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {OUT_FIXED} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {OUT_COMPLETE_WRAP} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {ST_DATA_W} {102};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {ST_CHANNEL_W} {8};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {OUT_BYTE_CNT_H} {62};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {OUT_BURSTWRAP_H} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {MERLIN_PACKET_FORMAT} {wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {COMPRESSED_READ_SUPPORT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {BYTEENABLE_SYNTHESIS} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {PIPE_INPUTS} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {NO_WRAP_SUPPORT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {INCOMPLETE_WRAP_SUPPORT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {BURSTWRAP_CONST_MASK} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {BURSTWRAP_CONST_VALUE} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {ADAPTER_VERSION} {13.1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter} {SYNC_RESET} {0};add_instance {kernel_interface_ctrl_burst_adapter} {altera_merlin_burst_adapter};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PKT_ADDR_H} {53};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PKT_ADDR_L} {36};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PKT_BEGIN_BURST} {72};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PKT_BYTE_CNT_H} {63};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PKT_BYTE_CNT_L} {60};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PKT_BYTEEN_H} {35};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PKT_BYTEEN_L} {32};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PKT_BURST_SIZE_H} {67};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PKT_BURST_SIZE_L} {65};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PKT_BURST_TYPE_H} {69};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PKT_BURST_TYPE_L} {68};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PKT_BURSTWRAP_H} {64};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PKT_BURSTWRAP_L} {64};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PKT_TRANS_COMPRESSED_READ} {54};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PKT_TRANS_WRITE} {56};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PKT_TRANS_READ} {57};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {OUT_NARROW_SIZE} {0};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {IN_NARROW_SIZE} {0};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {OUT_FIXED} {0};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {OUT_COMPLETE_WRAP} {0};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {ST_DATA_W} {102};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {ST_CHANNEL_W} {8};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {OUT_BYTE_CNT_H} {62};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {OUT_BURSTWRAP_H} {64};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {MERLIN_PACKET_FORMAT} {wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {COMPRESSED_READ_SUPPORT} {0};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {BYTEENABLE_SYNTHESIS} {1};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {PIPE_INPUTS} {0};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {NO_WRAP_SUPPORT} {0};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {INCOMPLETE_WRAP_SUPPORT} {0};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {BURSTWRAP_CONST_MASK} {1};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {BURSTWRAP_CONST_VALUE} {1};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {ADAPTER_VERSION} {13.1};set_instance_parameter_value {kernel_interface_ctrl_burst_adapter} {SYNC_RESET} {0};add_instance {cmd_demux} {altera_merlin_demultiplexer};set_instance_parameter_value {cmd_demux} {ST_DATA_W} {138};set_instance_parameter_value {cmd_demux} {ST_CHANNEL_W} {8};set_instance_parameter_value {cmd_demux} {NUM_OUTPUTS} {8};set_instance_parameter_value {cmd_demux} {VALID_WIDTH} {1};set_instance_parameter_value {cmd_demux} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {cmd_demux} {SYNC_RESET} {0};add_instance {cmd_mux} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux} {ST_DATA_W} {138};set_instance_parameter_value {cmd_mux} {ST_CHANNEL_W} {8};set_instance_parameter_value {cmd_mux} {NUM_INPUTS} {1};set_instance_parameter_value {cmd_mux} {PIPELINE_ARB} {1};set_instance_parameter_value {cmd_mux} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux} {PKT_TRANS_LOCK} {94};set_instance_parameter_value {cmd_mux} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux} {ARBITRATION_SHARES} {1 };set_instance_parameter_value {cmd_mux} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {cmd_mux} {SYNC_RESET} {0};add_instance {cmd_mux_001} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux_001} {ST_DATA_W} {138};set_instance_parameter_value {cmd_mux_001} {ST_CHANNEL_W} {8};set_instance_parameter_value {cmd_mux_001} {NUM_INPUTS} {1};set_instance_parameter_value {cmd_mux_001} {PIPELINE_ARB} {1};set_instance_parameter_value {cmd_mux_001} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux_001} {PKT_TRANS_LOCK} {94};set_instance_parameter_value {cmd_mux_001} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux_001} {ARBITRATION_SHARES} {1 };set_instance_parameter_value {cmd_mux_001} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {cmd_mux_001} {SYNC_RESET} {0};add_instance {cmd_mux_002} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux_002} {ST_DATA_W} {138};set_instance_parameter_value {cmd_mux_002} {ST_CHANNEL_W} {8};set_instance_parameter_value {cmd_mux_002} {NUM_INPUTS} {1};set_instance_parameter_value {cmd_mux_002} {PIPELINE_ARB} {1};set_instance_parameter_value {cmd_mux_002} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux_002} {PKT_TRANS_LOCK} {94};set_instance_parameter_value {cmd_mux_002} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux_002} {ARBITRATION_SHARES} {1 };set_instance_parameter_value {cmd_mux_002} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {cmd_mux_002} {SYNC_RESET} {0};add_instance {cmd_mux_003} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux_003} {ST_DATA_W} {138};set_instance_parameter_value {cmd_mux_003} {ST_CHANNEL_W} {8};set_instance_parameter_value {cmd_mux_003} {NUM_INPUTS} {1};set_instance_parameter_value {cmd_mux_003} {PIPELINE_ARB} {1};set_instance_parameter_value {cmd_mux_003} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux_003} {PKT_TRANS_LOCK} {94};set_instance_parameter_value {cmd_mux_003} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux_003} {ARBITRATION_SHARES} {1 };set_instance_parameter_value {cmd_mux_003} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {cmd_mux_003} {SYNC_RESET} {0};add_instance {cmd_mux_004} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux_004} {ST_DATA_W} {138};set_instance_parameter_value {cmd_mux_004} {ST_CHANNEL_W} {8};set_instance_parameter_value {cmd_mux_004} {NUM_INPUTS} {1};set_instance_parameter_value {cmd_mux_004} {PIPELINE_ARB} {1};set_instance_parameter_value {cmd_mux_004} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux_004} {PKT_TRANS_LOCK} {94};set_instance_parameter_value {cmd_mux_004} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux_004} {ARBITRATION_SHARES} {1 };set_instance_parameter_value {cmd_mux_004} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {cmd_mux_004} {SYNC_RESET} {0};add_instance {cmd_mux_005} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux_005} {ST_DATA_W} {138};set_instance_parameter_value {cmd_mux_005} {ST_CHANNEL_W} {8};set_instance_parameter_value {cmd_mux_005} {NUM_INPUTS} {1};set_instance_parameter_value {cmd_mux_005} {PIPELINE_ARB} {1};set_instance_parameter_value {cmd_mux_005} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux_005} {PKT_TRANS_LOCK} {94};set_instance_parameter_value {cmd_mux_005} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux_005} {ARBITRATION_SHARES} {1 };set_instance_parameter_value {cmd_mux_005} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {cmd_mux_005} {SYNC_RESET} {0};add_instance {cmd_mux_006} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux_006} {ST_DATA_W} {138};set_instance_parameter_value {cmd_mux_006} {ST_CHANNEL_W} {8};set_instance_parameter_value {cmd_mux_006} {NUM_INPUTS} {1};set_instance_parameter_value {cmd_mux_006} {PIPELINE_ARB} {1};set_instance_parameter_value {cmd_mux_006} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux_006} {PKT_TRANS_LOCK} {94};set_instance_parameter_value {cmd_mux_006} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux_006} {ARBITRATION_SHARES} {1 };set_instance_parameter_value {cmd_mux_006} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {cmd_mux_006} {SYNC_RESET} {0};add_instance {cmd_mux_007} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux_007} {ST_DATA_W} {138};set_instance_parameter_value {cmd_mux_007} {ST_CHANNEL_W} {8};set_instance_parameter_value {cmd_mux_007} {NUM_INPUTS} {1};set_instance_parameter_value {cmd_mux_007} {PIPELINE_ARB} {1};set_instance_parameter_value {cmd_mux_007} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux_007} {PKT_TRANS_LOCK} {94};set_instance_parameter_value {cmd_mux_007} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux_007} {ARBITRATION_SHARES} {1 };set_instance_parameter_value {cmd_mux_007} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {cmd_mux_007} {SYNC_RESET} {0};add_instance {rsp_demux} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux} {ST_DATA_W} {138};set_instance_parameter_value {rsp_demux} {ST_CHANNEL_W} {8};set_instance_parameter_value {rsp_demux} {NUM_OUTPUTS} {1};set_instance_parameter_value {rsp_demux} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {rsp_demux} {SYNC_RESET} {0};add_instance {rsp_demux_001} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux_001} {ST_DATA_W} {138};set_instance_parameter_value {rsp_demux_001} {ST_CHANNEL_W} {8};set_instance_parameter_value {rsp_demux_001} {NUM_OUTPUTS} {1};set_instance_parameter_value {rsp_demux_001} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux_001} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {rsp_demux_001} {SYNC_RESET} {0};add_instance {rsp_demux_002} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux_002} {ST_DATA_W} {138};set_instance_parameter_value {rsp_demux_002} {ST_CHANNEL_W} {8};set_instance_parameter_value {rsp_demux_002} {NUM_OUTPUTS} {1};set_instance_parameter_value {rsp_demux_002} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux_002} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {rsp_demux_002} {SYNC_RESET} {0};add_instance {rsp_demux_003} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux_003} {ST_DATA_W} {138};set_instance_parameter_value {rsp_demux_003} {ST_CHANNEL_W} {8};set_instance_parameter_value {rsp_demux_003} {NUM_OUTPUTS} {1};set_instance_parameter_value {rsp_demux_003} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux_003} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {rsp_demux_003} {SYNC_RESET} {0};add_instance {rsp_demux_004} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux_004} {ST_DATA_W} {138};set_instance_parameter_value {rsp_demux_004} {ST_CHANNEL_W} {8};set_instance_parameter_value {rsp_demux_004} {NUM_OUTPUTS} {1};set_instance_parameter_value {rsp_demux_004} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux_004} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {rsp_demux_004} {SYNC_RESET} {0};add_instance {rsp_demux_005} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux_005} {ST_DATA_W} {138};set_instance_parameter_value {rsp_demux_005} {ST_CHANNEL_W} {8};set_instance_parameter_value {rsp_demux_005} {NUM_OUTPUTS} {1};set_instance_parameter_value {rsp_demux_005} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux_005} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {rsp_demux_005} {SYNC_RESET} {0};add_instance {rsp_demux_006} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux_006} {ST_DATA_W} {138};set_instance_parameter_value {rsp_demux_006} {ST_CHANNEL_W} {8};set_instance_parameter_value {rsp_demux_006} {NUM_OUTPUTS} {1};set_instance_parameter_value {rsp_demux_006} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux_006} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {rsp_demux_006} {SYNC_RESET} {0};add_instance {rsp_demux_007} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux_007} {ST_DATA_W} {138};set_instance_parameter_value {rsp_demux_007} {ST_CHANNEL_W} {8};set_instance_parameter_value {rsp_demux_007} {NUM_OUTPUTS} {1};set_instance_parameter_value {rsp_demux_007} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux_007} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {rsp_demux_007} {SYNC_RESET} {0};add_instance {rsp_mux} {altera_merlin_multiplexer};set_instance_parameter_value {rsp_mux} {ST_DATA_W} {138};set_instance_parameter_value {rsp_mux} {ST_CHANNEL_W} {8};set_instance_parameter_value {rsp_mux} {NUM_INPUTS} {8};set_instance_parameter_value {rsp_mux} {PIPELINE_ARB} {0};set_instance_parameter_value {rsp_mux} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {rsp_mux} {PKT_TRANS_LOCK} {94};set_instance_parameter_value {rsp_mux} {ARBITRATION_SCHEME} {no-arb};set_instance_parameter_value {rsp_mux} {ARBITRATION_SHARES} {1 1 1 1 1 1 1 1 };set_instance_parameter_value {rsp_mux} {MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {rsp_mux} {SYNC_RESET} {0};add_instance {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {altera_merlin_width_adapter};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_ADDR_H} {53};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_ADDR_L} {36};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_DATA_H} {31};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_DATA_L} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_BYTEEN_H} {35};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_BYTEEN_L} {32};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_BYTE_CNT_H} {63};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_BYTE_CNT_L} {60};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_TRANS_COMPRESSED_READ} {54};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_TRANS_WRITE} {56};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_BURSTWRAP_H} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_BURSTWRAP_L} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_BURST_SIZE_H} {67};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_BURST_SIZE_L} {65};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_RESPONSE_STATUS_H} {89};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_RESPONSE_STATUS_L} {88};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_TRANS_EXCLUSIVE} {59};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_BURST_TYPE_H} {69};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_BURST_TYPE_L} {68};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_ORI_BURST_SIZE_L} {90};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_PKT_ORI_BURST_SIZE_H} {92};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_ST_DATA_W} {102};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_ADDR_H} {89};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_ADDR_L} {72};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_DATA_H} {63};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_DATA_L} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_BYTEEN_H} {71};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_BYTEEN_L} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_BYTE_CNT_H} {99};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_BYTE_CNT_L} {96};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_TRANS_COMPRESSED_READ} {90};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_BURST_SIZE_H} {103};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_BURST_SIZE_L} {101};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_RESPONSE_STATUS_H} {125};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_RESPONSE_STATUS_L} {124};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_TRANS_EXCLUSIVE} {95};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_BURST_TYPE_H} {105};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_BURST_TYPE_L} {104};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_ORI_BURST_SIZE_L} {126};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_PKT_ORI_BURST_SIZE_H} {128};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_ST_DATA_W} {138};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {ST_CHANNEL_W} {8};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OPTIMIZE_FOR_RSP} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {RESPONSE_PATH} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {CONSTANT_BURST_SIZE} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {PACKING} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {IN_MERLIN_PACKET_FORMAT} {wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {OUT_MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {COMMAND_SIZE_W} {3};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {ENABLE_ADDRESS_ALIGNMENT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter} {SYNC_RESET} {0};add_instance {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {altera_merlin_width_adapter};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_ADDR_H} {53};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_ADDR_L} {36};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_DATA_H} {31};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_DATA_L} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_BYTEEN_H} {35};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_BYTEEN_L} {32};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_BYTE_CNT_H} {63};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_BYTE_CNT_L} {60};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_TRANS_COMPRESSED_READ} {54};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_TRANS_WRITE} {56};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_BURSTWRAP_H} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_BURSTWRAP_L} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_BURST_SIZE_H} {67};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_BURST_SIZE_L} {65};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_RESPONSE_STATUS_H} {89};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_RESPONSE_STATUS_L} {88};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_TRANS_EXCLUSIVE} {59};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_BURST_TYPE_H} {69};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_BURST_TYPE_L} {68};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_ORI_BURST_SIZE_L} {90};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_PKT_ORI_BURST_SIZE_H} {92};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_ST_DATA_W} {102};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_ADDR_H} {89};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_ADDR_L} {72};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_DATA_H} {63};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_DATA_L} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_BYTEEN_H} {71};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_BYTEEN_L} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_BYTE_CNT_H} {99};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_BYTE_CNT_L} {96};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_TRANS_COMPRESSED_READ} {90};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_BURST_SIZE_H} {103};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_BURST_SIZE_L} {101};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_RESPONSE_STATUS_H} {125};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_RESPONSE_STATUS_L} {124};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_TRANS_EXCLUSIVE} {95};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_BURST_TYPE_H} {105};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_BURST_TYPE_L} {104};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_ORI_BURST_SIZE_L} {126};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_PKT_ORI_BURST_SIZE_H} {128};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_ST_DATA_W} {138};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {ST_CHANNEL_W} {8};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OPTIMIZE_FOR_RSP} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {RESPONSE_PATH} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {CONSTANT_BURST_SIZE} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {PACKING} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {IN_MERLIN_PACKET_FORMAT} {wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {OUT_MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {COMMAND_SIZE_W} {3};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {ENABLE_ADDRESS_ALIGNMENT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter} {SYNC_RESET} {0};add_instance {kernel_interface_ctrl_rsp_width_adapter} {altera_merlin_width_adapter};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_ADDR_H} {53};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_ADDR_L} {36};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_DATA_H} {31};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_DATA_L} {0};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_BYTEEN_H} {35};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_BYTEEN_L} {32};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_BYTE_CNT_H} {63};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_BYTE_CNT_L} {60};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_TRANS_COMPRESSED_READ} {54};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_TRANS_WRITE} {56};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_BURSTWRAP_H} {64};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_BURSTWRAP_L} {64};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_BURST_SIZE_H} {67};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_BURST_SIZE_L} {65};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_RESPONSE_STATUS_H} {89};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_RESPONSE_STATUS_L} {88};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_TRANS_EXCLUSIVE} {59};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_BURST_TYPE_H} {69};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_BURST_TYPE_L} {68};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_ORI_BURST_SIZE_L} {90};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_PKT_ORI_BURST_SIZE_H} {92};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_ST_DATA_W} {102};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_ADDR_H} {89};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_ADDR_L} {72};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_DATA_H} {63};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_DATA_L} {0};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_BYTEEN_H} {71};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_BYTEEN_L} {64};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_BYTE_CNT_H} {99};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_BYTE_CNT_L} {96};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_TRANS_COMPRESSED_READ} {90};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_BURST_SIZE_H} {103};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_BURST_SIZE_L} {101};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_RESPONSE_STATUS_H} {125};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_RESPONSE_STATUS_L} {124};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_TRANS_EXCLUSIVE} {95};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_BURST_TYPE_H} {105};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_BURST_TYPE_L} {104};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_ORI_BURST_SIZE_L} {126};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_PKT_ORI_BURST_SIZE_H} {128};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_ST_DATA_W} {138};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {ST_CHANNEL_W} {8};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OPTIMIZE_FOR_RSP} {1};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {RESPONSE_PATH} {1};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {CONSTANT_BURST_SIZE} {1};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {PACKING} {1};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {IN_MERLIN_PACKET_FORMAT} {wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {OUT_MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {COMMAND_SIZE_W} {3};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {ENABLE_ADDRESS_ALIGNMENT} {0};set_instance_parameter_value {kernel_interface_ctrl_rsp_width_adapter} {SYNC_RESET} {0};add_instance {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {altera_merlin_width_adapter};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_ADDR_H} {89};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_ADDR_L} {72};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_DATA_H} {63};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_DATA_L} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_BYTEEN_H} {71};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_BYTEEN_L} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_BYTE_CNT_H} {99};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_BYTE_CNT_L} {96};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_TRANS_COMPRESSED_READ} {90};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_TRANS_WRITE} {92};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_BURSTWRAP_H} {100};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_BURSTWRAP_L} {100};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_BURST_SIZE_H} {103};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_BURST_SIZE_L} {101};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_RESPONSE_STATUS_H} {125};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_RESPONSE_STATUS_L} {124};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_TRANS_EXCLUSIVE} {95};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_BURST_TYPE_H} {105};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_BURST_TYPE_L} {104};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_ORI_BURST_SIZE_L} {126};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_PKT_ORI_BURST_SIZE_H} {128};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_ST_DATA_W} {138};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_ADDR_H} {53};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_ADDR_L} {36};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_DATA_H} {31};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_DATA_L} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_BYTEEN_H} {35};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_BYTEEN_L} {32};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_BYTE_CNT_H} {63};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_BYTE_CNT_L} {60};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_TRANS_COMPRESSED_READ} {54};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_BURST_SIZE_H} {67};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_BURST_SIZE_L} {65};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_RESPONSE_STATUS_H} {89};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_RESPONSE_STATUS_L} {88};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_TRANS_EXCLUSIVE} {59};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_BURST_TYPE_H} {69};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_BURST_TYPE_L} {68};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_ORI_BURST_SIZE_L} {90};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_PKT_ORI_BURST_SIZE_H} {92};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_ST_DATA_W} {102};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {ST_CHANNEL_W} {8};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OPTIMIZE_FOR_RSP} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {RESPONSE_PATH} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {CONSTANT_BURST_SIZE} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {PACKING} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {IN_MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {OUT_MERLIN_PACKET_FORMAT} {wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {COMMAND_SIZE_W} {3};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {ENABLE_ADDRESS_ALIGNMENT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter} {SYNC_RESET} {0};add_instance {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {altera_merlin_width_adapter};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_ADDR_H} {89};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_ADDR_L} {72};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_DATA_H} {63};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_DATA_L} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_BYTEEN_H} {71};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_BYTEEN_L} {64};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_BYTE_CNT_H} {99};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_BYTE_CNT_L} {96};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_TRANS_COMPRESSED_READ} {90};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_TRANS_WRITE} {92};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_BURSTWRAP_H} {100};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_BURSTWRAP_L} {100};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_BURST_SIZE_H} {103};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_BURST_SIZE_L} {101};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_RESPONSE_STATUS_H} {125};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_RESPONSE_STATUS_L} {124};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_TRANS_EXCLUSIVE} {95};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_BURST_TYPE_H} {105};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_BURST_TYPE_L} {104};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_ORI_BURST_SIZE_L} {126};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_PKT_ORI_BURST_SIZE_H} {128};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_ST_DATA_W} {138};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_ADDR_H} {53};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_ADDR_L} {36};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_DATA_H} {31};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_DATA_L} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_BYTEEN_H} {35};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_BYTEEN_L} {32};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_BYTE_CNT_H} {63};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_BYTE_CNT_L} {60};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_TRANS_COMPRESSED_READ} {54};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_BURST_SIZE_H} {67};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_BURST_SIZE_L} {65};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_RESPONSE_STATUS_H} {89};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_RESPONSE_STATUS_L} {88};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_TRANS_EXCLUSIVE} {59};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_BURST_TYPE_H} {69};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_BURST_TYPE_L} {68};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_ORI_BURST_SIZE_L} {90};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_PKT_ORI_BURST_SIZE_H} {92};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_ST_DATA_W} {102};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {ST_CHANNEL_W} {8};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OPTIMIZE_FOR_RSP} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {RESPONSE_PATH} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {CONSTANT_BURST_SIZE} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {PACKING} {1};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {IN_MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {OUT_MERLIN_PACKET_FORMAT} {wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {COMMAND_SIZE_W} {3};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {ENABLE_ADDRESS_ALIGNMENT} {0};set_instance_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter} {SYNC_RESET} {0};add_instance {kernel_interface_ctrl_cmd_width_adapter} {altera_merlin_width_adapter};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_ADDR_H} {89};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_ADDR_L} {72};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_DATA_H} {63};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_DATA_L} {0};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_BYTEEN_H} {71};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_BYTEEN_L} {64};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_BYTE_CNT_H} {99};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_BYTE_CNT_L} {96};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_TRANS_COMPRESSED_READ} {90};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_TRANS_WRITE} {92};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_BURSTWRAP_H} {100};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_BURSTWRAP_L} {100};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_BURST_SIZE_H} {103};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_BURST_SIZE_L} {101};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_RESPONSE_STATUS_H} {125};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_RESPONSE_STATUS_L} {124};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_TRANS_EXCLUSIVE} {95};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_BURST_TYPE_H} {105};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_BURST_TYPE_L} {104};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_ORI_BURST_SIZE_L} {126};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_PKT_ORI_BURST_SIZE_H} {128};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_ST_DATA_W} {138};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_ADDR_H} {53};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_ADDR_L} {36};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_DATA_H} {31};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_DATA_L} {0};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_BYTEEN_H} {35};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_BYTEEN_L} {32};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_BYTE_CNT_H} {63};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_BYTE_CNT_L} {60};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_TRANS_COMPRESSED_READ} {54};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_BURST_SIZE_H} {67};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_BURST_SIZE_L} {65};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_RESPONSE_STATUS_H} {89};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_RESPONSE_STATUS_L} {88};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_TRANS_EXCLUSIVE} {59};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_BURST_TYPE_H} {69};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_BURST_TYPE_L} {68};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_ORI_BURST_SIZE_L} {90};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_PKT_ORI_BURST_SIZE_H} {92};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_ST_DATA_W} {102};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {ST_CHANNEL_W} {8};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OPTIMIZE_FOR_RSP} {0};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {RESPONSE_PATH} {0};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {CONSTANT_BURST_SIZE} {1};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {PACKING} {1};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {IN_MERLIN_PACKET_FORMAT} {wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {OUT_MERLIN_PACKET_FORMAT} {wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {COMMAND_SIZE_W} {3};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {ENABLE_ADDRESS_ALIGNMENT} {0};set_instance_parameter_value {kernel_interface_ctrl_cmd_width_adapter} {SYNC_RESET} {0};add_instance {limiter_pipeline} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {limiter_pipeline} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {limiter_pipeline} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {limiter_pipeline} {USE_PACKETS} {1};set_instance_parameter_value {limiter_pipeline} {USE_EMPTY} {0};set_instance_parameter_value {limiter_pipeline} {CHANNEL_WIDTH} {8};set_instance_parameter_value {limiter_pipeline} {MAX_CHANNEL} {0};set_instance_parameter_value {limiter_pipeline} {ERROR_WIDTH} {0};set_instance_parameter_value {limiter_pipeline} {PIPELINE_READY} {1};set_instance_parameter_value {limiter_pipeline} {SYNC_RESET} {0};add_instance {limiter_pipeline_001} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {limiter_pipeline_001} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {limiter_pipeline_001} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {limiter_pipeline_001} {USE_PACKETS} {1};set_instance_parameter_value {limiter_pipeline_001} {USE_EMPTY} {0};set_instance_parameter_value {limiter_pipeline_001} {CHANNEL_WIDTH} {8};set_instance_parameter_value {limiter_pipeline_001} {MAX_CHANNEL} {0};set_instance_parameter_value {limiter_pipeline_001} {ERROR_WIDTH} {0};set_instance_parameter_value {limiter_pipeline_001} {PIPELINE_READY} {1};set_instance_parameter_value {limiter_pipeline_001} {SYNC_RESET} {0};add_instance {agent_pipeline} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {agent_pipeline} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {agent_pipeline} {BITS_PER_SYMBOL} {102};set_instance_parameter_value {agent_pipeline} {USE_PACKETS} {1};set_instance_parameter_value {agent_pipeline} {USE_EMPTY} {0};set_instance_parameter_value {agent_pipeline} {CHANNEL_WIDTH} {8};set_instance_parameter_value {agent_pipeline} {MAX_CHANNEL} {0};set_instance_parameter_value {agent_pipeline} {ERROR_WIDTH} {0};set_instance_parameter_value {agent_pipeline} {PIPELINE_READY} {1};set_instance_parameter_value {agent_pipeline} {SYNC_RESET} {0};add_instance {agent_pipeline_001} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {agent_pipeline_001} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {agent_pipeline_001} {BITS_PER_SYMBOL} {102};set_instance_parameter_value {agent_pipeline_001} {USE_PACKETS} {1};set_instance_parameter_value {agent_pipeline_001} {USE_EMPTY} {0};set_instance_parameter_value {agent_pipeline_001} {CHANNEL_WIDTH} {0};set_instance_parameter_value {agent_pipeline_001} {MAX_CHANNEL} {0};set_instance_parameter_value {agent_pipeline_001} {ERROR_WIDTH} {0};set_instance_parameter_value {agent_pipeline_001} {PIPELINE_READY} {1};set_instance_parameter_value {agent_pipeline_001} {SYNC_RESET} {0};add_instance {agent_pipeline_002} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {agent_pipeline_002} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {agent_pipeline_002} {BITS_PER_SYMBOL} {102};set_instance_parameter_value {agent_pipeline_002} {USE_PACKETS} {1};set_instance_parameter_value {agent_pipeline_002} {USE_EMPTY} {0};set_instance_parameter_value {agent_pipeline_002} {CHANNEL_WIDTH} {8};set_instance_parameter_value {agent_pipeline_002} {MAX_CHANNEL} {0};set_instance_parameter_value {agent_pipeline_002} {ERROR_WIDTH} {0};set_instance_parameter_value {agent_pipeline_002} {PIPELINE_READY} {1};set_instance_parameter_value {agent_pipeline_002} {SYNC_RESET} {0};add_instance {agent_pipeline_003} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {agent_pipeline_003} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {agent_pipeline_003} {BITS_PER_SYMBOL} {102};set_instance_parameter_value {agent_pipeline_003} {USE_PACKETS} {1};set_instance_parameter_value {agent_pipeline_003} {USE_EMPTY} {0};set_instance_parameter_value {agent_pipeline_003} {CHANNEL_WIDTH} {0};set_instance_parameter_value {agent_pipeline_003} {MAX_CHANNEL} {0};set_instance_parameter_value {agent_pipeline_003} {ERROR_WIDTH} {0};set_instance_parameter_value {agent_pipeline_003} {PIPELINE_READY} {1};set_instance_parameter_value {agent_pipeline_003} {SYNC_RESET} {0};add_instance {agent_pipeline_004} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {agent_pipeline_004} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {agent_pipeline_004} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {agent_pipeline_004} {USE_PACKETS} {1};set_instance_parameter_value {agent_pipeline_004} {USE_EMPTY} {0};set_instance_parameter_value {agent_pipeline_004} {CHANNEL_WIDTH} {8};set_instance_parameter_value {agent_pipeline_004} {MAX_CHANNEL} {0};set_instance_parameter_value {agent_pipeline_004} {ERROR_WIDTH} {0};set_instance_parameter_value {agent_pipeline_004} {PIPELINE_READY} {1};set_instance_parameter_value {agent_pipeline_004} {SYNC_RESET} {0};add_instance {agent_pipeline_005} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {agent_pipeline_005} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {agent_pipeline_005} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {agent_pipeline_005} {USE_PACKETS} {1};set_instance_parameter_value {agent_pipeline_005} {USE_EMPTY} {0};set_instance_parameter_value {agent_pipeline_005} {CHANNEL_WIDTH} {0};set_instance_parameter_value {agent_pipeline_005} {MAX_CHANNEL} {0};set_instance_parameter_value {agent_pipeline_005} {ERROR_WIDTH} {0};set_instance_parameter_value {agent_pipeline_005} {PIPELINE_READY} {1};set_instance_parameter_value {agent_pipeline_005} {SYNC_RESET} {0};add_instance {agent_pipeline_006} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {agent_pipeline_006} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {agent_pipeline_006} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {agent_pipeline_006} {USE_PACKETS} {1};set_instance_parameter_value {agent_pipeline_006} {USE_EMPTY} {0};set_instance_parameter_value {agent_pipeline_006} {CHANNEL_WIDTH} {8};set_instance_parameter_value {agent_pipeline_006} {MAX_CHANNEL} {0};set_instance_parameter_value {agent_pipeline_006} {ERROR_WIDTH} {0};set_instance_parameter_value {agent_pipeline_006} {PIPELINE_READY} {1};set_instance_parameter_value {agent_pipeline_006} {SYNC_RESET} {0};add_instance {agent_pipeline_007} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {agent_pipeline_007} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {agent_pipeline_007} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {agent_pipeline_007} {USE_PACKETS} {1};set_instance_parameter_value {agent_pipeline_007} {USE_EMPTY} {0};set_instance_parameter_value {agent_pipeline_007} {CHANNEL_WIDTH} {0};set_instance_parameter_value {agent_pipeline_007} {MAX_CHANNEL} {0};set_instance_parameter_value {agent_pipeline_007} {ERROR_WIDTH} {0};set_instance_parameter_value {agent_pipeline_007} {PIPELINE_READY} {1};set_instance_parameter_value {agent_pipeline_007} {SYNC_RESET} {0};add_instance {agent_pipeline_008} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {agent_pipeline_008} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {agent_pipeline_008} {BITS_PER_SYMBOL} {102};set_instance_parameter_value {agent_pipeline_008} {USE_PACKETS} {1};set_instance_parameter_value {agent_pipeline_008} {USE_EMPTY} {0};set_instance_parameter_value {agent_pipeline_008} {CHANNEL_WIDTH} {8};set_instance_parameter_value {agent_pipeline_008} {MAX_CHANNEL} {0};set_instance_parameter_value {agent_pipeline_008} {ERROR_WIDTH} {0};set_instance_parameter_value {agent_pipeline_008} {PIPELINE_READY} {1};set_instance_parameter_value {agent_pipeline_008} {SYNC_RESET} {0};add_instance {agent_pipeline_009} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {agent_pipeline_009} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {agent_pipeline_009} {BITS_PER_SYMBOL} {102};set_instance_parameter_value {agent_pipeline_009} {USE_PACKETS} {1};set_instance_parameter_value {agent_pipeline_009} {USE_EMPTY} {0};set_instance_parameter_value {agent_pipeline_009} {CHANNEL_WIDTH} {0};set_instance_parameter_value {agent_pipeline_009} {MAX_CHANNEL} {0};set_instance_parameter_value {agent_pipeline_009} {ERROR_WIDTH} {0};set_instance_parameter_value {agent_pipeline_009} {PIPELINE_READY} {1};set_instance_parameter_value {agent_pipeline_009} {SYNC_RESET} {0};add_instance {agent_pipeline_010} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {agent_pipeline_010} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {agent_pipeline_010} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {agent_pipeline_010} {USE_PACKETS} {1};set_instance_parameter_value {agent_pipeline_010} {USE_EMPTY} {0};set_instance_parameter_value {agent_pipeline_010} {CHANNEL_WIDTH} {8};set_instance_parameter_value {agent_pipeline_010} {MAX_CHANNEL} {0};set_instance_parameter_value {agent_pipeline_010} {ERROR_WIDTH} {0};set_instance_parameter_value {agent_pipeline_010} {PIPELINE_READY} {1};set_instance_parameter_value {agent_pipeline_010} {SYNC_RESET} {0};add_instance {agent_pipeline_011} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {agent_pipeline_011} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {agent_pipeline_011} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {agent_pipeline_011} {USE_PACKETS} {1};set_instance_parameter_value {agent_pipeline_011} {USE_EMPTY} {0};set_instance_parameter_value {agent_pipeline_011} {CHANNEL_WIDTH} {0};set_instance_parameter_value {agent_pipeline_011} {MAX_CHANNEL} {0};set_instance_parameter_value {agent_pipeline_011} {ERROR_WIDTH} {0};set_instance_parameter_value {agent_pipeline_011} {PIPELINE_READY} {1};set_instance_parameter_value {agent_pipeline_011} {SYNC_RESET} {0};add_instance {agent_pipeline_012} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {agent_pipeline_012} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {agent_pipeline_012} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {agent_pipeline_012} {USE_PACKETS} {1};set_instance_parameter_value {agent_pipeline_012} {USE_EMPTY} {0};set_instance_parameter_value {agent_pipeline_012} {CHANNEL_WIDTH} {8};set_instance_parameter_value {agent_pipeline_012} {MAX_CHANNEL} {0};set_instance_parameter_value {agent_pipeline_012} {ERROR_WIDTH} {0};set_instance_parameter_value {agent_pipeline_012} {PIPELINE_READY} {1};set_instance_parameter_value {agent_pipeline_012} {SYNC_RESET} {0};add_instance {agent_pipeline_013} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {agent_pipeline_013} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {agent_pipeline_013} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {agent_pipeline_013} {USE_PACKETS} {1};set_instance_parameter_value {agent_pipeline_013} {USE_EMPTY} {0};set_instance_parameter_value {agent_pipeline_013} {CHANNEL_WIDTH} {0};set_instance_parameter_value {agent_pipeline_013} {MAX_CHANNEL} {0};set_instance_parameter_value {agent_pipeline_013} {ERROR_WIDTH} {0};set_instance_parameter_value {agent_pipeline_013} {PIPELINE_READY} {1};set_instance_parameter_value {agent_pipeline_013} {SYNC_RESET} {0};add_instance {agent_pipeline_014} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {agent_pipeline_014} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {agent_pipeline_014} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {agent_pipeline_014} {USE_PACKETS} {1};set_instance_parameter_value {agent_pipeline_014} {USE_EMPTY} {0};set_instance_parameter_value {agent_pipeline_014} {CHANNEL_WIDTH} {8};set_instance_parameter_value {agent_pipeline_014} {MAX_CHANNEL} {0};set_instance_parameter_value {agent_pipeline_014} {ERROR_WIDTH} {0};set_instance_parameter_value {agent_pipeline_014} {PIPELINE_READY} {1};set_instance_parameter_value {agent_pipeline_014} {SYNC_RESET} {0};add_instance {agent_pipeline_015} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {agent_pipeline_015} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {agent_pipeline_015} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {agent_pipeline_015} {USE_PACKETS} {1};set_instance_parameter_value {agent_pipeline_015} {USE_EMPTY} {0};set_instance_parameter_value {agent_pipeline_015} {CHANNEL_WIDTH} {0};set_instance_parameter_value {agent_pipeline_015} {MAX_CHANNEL} {0};set_instance_parameter_value {agent_pipeline_015} {ERROR_WIDTH} {0};set_instance_parameter_value {agent_pipeline_015} {PIPELINE_READY} {1};set_instance_parameter_value {agent_pipeline_015} {SYNC_RESET} {0};add_instance {mux_pipeline} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {mux_pipeline} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {mux_pipeline} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {mux_pipeline} {USE_PACKETS} {1};set_instance_parameter_value {mux_pipeline} {USE_EMPTY} {0};set_instance_parameter_value {mux_pipeline} {CHANNEL_WIDTH} {8};set_instance_parameter_value {mux_pipeline} {MAX_CHANNEL} {0};set_instance_parameter_value {mux_pipeline} {ERROR_WIDTH} {0};set_instance_parameter_value {mux_pipeline} {PIPELINE_READY} {1};set_instance_parameter_value {mux_pipeline} {SYNC_RESET} {0};add_instance {mux_pipeline_001} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {mux_pipeline_001} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {mux_pipeline_001} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {mux_pipeline_001} {USE_PACKETS} {1};set_instance_parameter_value {mux_pipeline_001} {USE_EMPTY} {0};set_instance_parameter_value {mux_pipeline_001} {CHANNEL_WIDTH} {8};set_instance_parameter_value {mux_pipeline_001} {MAX_CHANNEL} {0};set_instance_parameter_value {mux_pipeline_001} {ERROR_WIDTH} {0};set_instance_parameter_value {mux_pipeline_001} {PIPELINE_READY} {1};set_instance_parameter_value {mux_pipeline_001} {SYNC_RESET} {0};add_instance {mux_pipeline_002} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {mux_pipeline_002} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {mux_pipeline_002} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {mux_pipeline_002} {USE_PACKETS} {1};set_instance_parameter_value {mux_pipeline_002} {USE_EMPTY} {0};set_instance_parameter_value {mux_pipeline_002} {CHANNEL_WIDTH} {8};set_instance_parameter_value {mux_pipeline_002} {MAX_CHANNEL} {0};set_instance_parameter_value {mux_pipeline_002} {ERROR_WIDTH} {0};set_instance_parameter_value {mux_pipeline_002} {PIPELINE_READY} {1};set_instance_parameter_value {mux_pipeline_002} {SYNC_RESET} {0};add_instance {mux_pipeline_003} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {mux_pipeline_003} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {mux_pipeline_003} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {mux_pipeline_003} {USE_PACKETS} {1};set_instance_parameter_value {mux_pipeline_003} {USE_EMPTY} {0};set_instance_parameter_value {mux_pipeline_003} {CHANNEL_WIDTH} {8};set_instance_parameter_value {mux_pipeline_003} {MAX_CHANNEL} {0};set_instance_parameter_value {mux_pipeline_003} {ERROR_WIDTH} {0};set_instance_parameter_value {mux_pipeline_003} {PIPELINE_READY} {1};set_instance_parameter_value {mux_pipeline_003} {SYNC_RESET} {0};add_instance {mux_pipeline_004} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {mux_pipeline_004} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {mux_pipeline_004} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {mux_pipeline_004} {USE_PACKETS} {1};set_instance_parameter_value {mux_pipeline_004} {USE_EMPTY} {0};set_instance_parameter_value {mux_pipeline_004} {CHANNEL_WIDTH} {8};set_instance_parameter_value {mux_pipeline_004} {MAX_CHANNEL} {0};set_instance_parameter_value {mux_pipeline_004} {ERROR_WIDTH} {0};set_instance_parameter_value {mux_pipeline_004} {PIPELINE_READY} {1};set_instance_parameter_value {mux_pipeline_004} {SYNC_RESET} {0};add_instance {mux_pipeline_005} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {mux_pipeline_005} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {mux_pipeline_005} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {mux_pipeline_005} {USE_PACKETS} {1};set_instance_parameter_value {mux_pipeline_005} {USE_EMPTY} {0};set_instance_parameter_value {mux_pipeline_005} {CHANNEL_WIDTH} {8};set_instance_parameter_value {mux_pipeline_005} {MAX_CHANNEL} {0};set_instance_parameter_value {mux_pipeline_005} {ERROR_WIDTH} {0};set_instance_parameter_value {mux_pipeline_005} {PIPELINE_READY} {1};set_instance_parameter_value {mux_pipeline_005} {SYNC_RESET} {0};add_instance {mux_pipeline_006} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {mux_pipeline_006} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {mux_pipeline_006} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {mux_pipeline_006} {USE_PACKETS} {1};set_instance_parameter_value {mux_pipeline_006} {USE_EMPTY} {0};set_instance_parameter_value {mux_pipeline_006} {CHANNEL_WIDTH} {8};set_instance_parameter_value {mux_pipeline_006} {MAX_CHANNEL} {0};set_instance_parameter_value {mux_pipeline_006} {ERROR_WIDTH} {0};set_instance_parameter_value {mux_pipeline_006} {PIPELINE_READY} {1};set_instance_parameter_value {mux_pipeline_006} {SYNC_RESET} {0};add_instance {mux_pipeline_007} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {mux_pipeline_007} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {mux_pipeline_007} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {mux_pipeline_007} {USE_PACKETS} {1};set_instance_parameter_value {mux_pipeline_007} {USE_EMPTY} {0};set_instance_parameter_value {mux_pipeline_007} {CHANNEL_WIDTH} {8};set_instance_parameter_value {mux_pipeline_007} {MAX_CHANNEL} {0};set_instance_parameter_value {mux_pipeline_007} {ERROR_WIDTH} {0};set_instance_parameter_value {mux_pipeline_007} {PIPELINE_READY} {1};set_instance_parameter_value {mux_pipeline_007} {SYNC_RESET} {0};add_instance {mux_pipeline_008} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {mux_pipeline_008} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {mux_pipeline_008} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {mux_pipeline_008} {USE_PACKETS} {1};set_instance_parameter_value {mux_pipeline_008} {USE_EMPTY} {0};set_instance_parameter_value {mux_pipeline_008} {CHANNEL_WIDTH} {8};set_instance_parameter_value {mux_pipeline_008} {MAX_CHANNEL} {0};set_instance_parameter_value {mux_pipeline_008} {ERROR_WIDTH} {0};set_instance_parameter_value {mux_pipeline_008} {PIPELINE_READY} {1};set_instance_parameter_value {mux_pipeline_008} {SYNC_RESET} {0};add_instance {mux_pipeline_009} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {mux_pipeline_009} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {mux_pipeline_009} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {mux_pipeline_009} {USE_PACKETS} {1};set_instance_parameter_value {mux_pipeline_009} {USE_EMPTY} {0};set_instance_parameter_value {mux_pipeline_009} {CHANNEL_WIDTH} {8};set_instance_parameter_value {mux_pipeline_009} {MAX_CHANNEL} {0};set_instance_parameter_value {mux_pipeline_009} {ERROR_WIDTH} {0};set_instance_parameter_value {mux_pipeline_009} {PIPELINE_READY} {1};set_instance_parameter_value {mux_pipeline_009} {SYNC_RESET} {0};add_instance {mux_pipeline_010} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {mux_pipeline_010} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {mux_pipeline_010} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {mux_pipeline_010} {USE_PACKETS} {1};set_instance_parameter_value {mux_pipeline_010} {USE_EMPTY} {0};set_instance_parameter_value {mux_pipeline_010} {CHANNEL_WIDTH} {8};set_instance_parameter_value {mux_pipeline_010} {MAX_CHANNEL} {0};set_instance_parameter_value {mux_pipeline_010} {ERROR_WIDTH} {0};set_instance_parameter_value {mux_pipeline_010} {PIPELINE_READY} {1};set_instance_parameter_value {mux_pipeline_010} {SYNC_RESET} {0};add_instance {mux_pipeline_011} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {mux_pipeline_011} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {mux_pipeline_011} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {mux_pipeline_011} {USE_PACKETS} {1};set_instance_parameter_value {mux_pipeline_011} {USE_EMPTY} {0};set_instance_parameter_value {mux_pipeline_011} {CHANNEL_WIDTH} {8};set_instance_parameter_value {mux_pipeline_011} {MAX_CHANNEL} {0};set_instance_parameter_value {mux_pipeline_011} {ERROR_WIDTH} {0};set_instance_parameter_value {mux_pipeline_011} {PIPELINE_READY} {1};set_instance_parameter_value {mux_pipeline_011} {SYNC_RESET} {0};add_instance {mux_pipeline_012} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {mux_pipeline_012} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {mux_pipeline_012} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {mux_pipeline_012} {USE_PACKETS} {1};set_instance_parameter_value {mux_pipeline_012} {USE_EMPTY} {0};set_instance_parameter_value {mux_pipeline_012} {CHANNEL_WIDTH} {8};set_instance_parameter_value {mux_pipeline_012} {MAX_CHANNEL} {0};set_instance_parameter_value {mux_pipeline_012} {ERROR_WIDTH} {0};set_instance_parameter_value {mux_pipeline_012} {PIPELINE_READY} {1};set_instance_parameter_value {mux_pipeline_012} {SYNC_RESET} {0};add_instance {mux_pipeline_013} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {mux_pipeline_013} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {mux_pipeline_013} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {mux_pipeline_013} {USE_PACKETS} {1};set_instance_parameter_value {mux_pipeline_013} {USE_EMPTY} {0};set_instance_parameter_value {mux_pipeline_013} {CHANNEL_WIDTH} {8};set_instance_parameter_value {mux_pipeline_013} {MAX_CHANNEL} {0};set_instance_parameter_value {mux_pipeline_013} {ERROR_WIDTH} {0};set_instance_parameter_value {mux_pipeline_013} {PIPELINE_READY} {1};set_instance_parameter_value {mux_pipeline_013} {SYNC_RESET} {0};add_instance {mux_pipeline_014} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {mux_pipeline_014} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {mux_pipeline_014} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {mux_pipeline_014} {USE_PACKETS} {1};set_instance_parameter_value {mux_pipeline_014} {USE_EMPTY} {0};set_instance_parameter_value {mux_pipeline_014} {CHANNEL_WIDTH} {8};set_instance_parameter_value {mux_pipeline_014} {MAX_CHANNEL} {0};set_instance_parameter_value {mux_pipeline_014} {ERROR_WIDTH} {0};set_instance_parameter_value {mux_pipeline_014} {PIPELINE_READY} {1};set_instance_parameter_value {mux_pipeline_014} {SYNC_RESET} {0};add_instance {mux_pipeline_015} {altera_avalon_st_pipeline_stage};set_instance_parameter_value {mux_pipeline_015} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {mux_pipeline_015} {BITS_PER_SYMBOL} {138};set_instance_parameter_value {mux_pipeline_015} {USE_PACKETS} {1};set_instance_parameter_value {mux_pipeline_015} {USE_EMPTY} {0};set_instance_parameter_value {mux_pipeline_015} {CHANNEL_WIDTH} {8};set_instance_parameter_value {mux_pipeline_015} {MAX_CHANNEL} {0};set_instance_parameter_value {mux_pipeline_015} {ERROR_WIDTH} {0};set_instance_parameter_value {mux_pipeline_015} {PIPELINE_READY} {1};set_instance_parameter_value {mux_pipeline_015} {SYNC_RESET} {0};add_instance {pipe_stage_host_ctrl_reset_reset_bridge} {altera_reset_bridge};set_instance_parameter_value {pipe_stage_host_ctrl_reset_reset_bridge} {ACTIVE_LOW_RESET} {0};set_instance_parameter_value {pipe_stage_host_ctrl_reset_reset_bridge} {SYNCHRONOUS_EDGES} {deassert};set_instance_parameter_value {pipe_stage_host_ctrl_reset_reset_bridge} {NUM_RESET_OUTPUTS} {1};set_instance_parameter_value {pipe_stage_host_ctrl_reset_reset_bridge} {USE_RESET_REQUEST} {0};set_instance_parameter_value {pipe_stage_host_ctrl_reset_reset_bridge} {SYNC_RESET} {0};add_instance {clk_200_out_clk_clock_bridge} {altera_clock_bridge};set_instance_parameter_value {clk_200_out_clk_clock_bridge} {EXPLICIT_CLOCK_RATE} {200000000};set_instance_parameter_value {clk_200_out_clk_clock_bridge} {NUM_CLOCK_OUTPUTS} {1};add_connection {pipe_stage_host_ctrl_m0_translator.avalon_universal_master_0} {pipe_stage_host_ctrl_m0_agent.av} {avalon};set_connection_parameter_value {pipe_stage_host_ctrl_m0_translator.avalon_universal_master_0/pipe_stage_host_ctrl_m0_agent.av} {arbitrationPriority} {1};set_connection_parameter_value {pipe_stage_host_ctrl_m0_translator.avalon_universal_master_0/pipe_stage_host_ctrl_m0_agent.av} {baseAddress} {0x0000};set_connection_parameter_value {pipe_stage_host_ctrl_m0_translator.avalon_universal_master_0/pipe_stage_host_ctrl_m0_agent.av} {defaultConnection} {false};set_connection_parameter_value {pipe_stage_host_ctrl_m0_translator.avalon_universal_master_0/pipe_stage_host_ctrl_m0_agent.av} {domainAlias} {};set_connection_parameter_value {pipe_stage_host_ctrl_m0_translator.avalon_universal_master_0/pipe_stage_host_ctrl_m0_agent.av} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {pipe_stage_host_ctrl_m0_translator.avalon_universal_master_0/pipe_stage_host_ctrl_m0_agent.av} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {pipe_stage_host_ctrl_m0_translator.avalon_universal_master_0/pipe_stage_host_ctrl_m0_agent.av} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {pipe_stage_host_ctrl_m0_translator.avalon_universal_master_0/pipe_stage_host_ctrl_m0_agent.av} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {pipe_stage_host_ctrl_m0_translator.avalon_universal_master_0/pipe_stage_host_ctrl_m0_agent.av} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {pipe_stage_host_ctrl_m0_translator.avalon_universal_master_0/pipe_stage_host_ctrl_m0_agent.av} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {pipe_stage_host_ctrl_m0_translator.avalon_universal_master_0/pipe_stage_host_ctrl_m0_agent.av} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {pipe_stage_host_ctrl_m0_translator.avalon_universal_master_0/pipe_stage_host_ctrl_m0_agent.av} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {pipe_stage_host_ctrl_m0_translator.avalon_universal_master_0/pipe_stage_host_ctrl_m0_agent.av} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {pipe_stage_host_ctrl_m0_translator.avalon_universal_master_0/pipe_stage_host_ctrl_m0_agent.av} {qsys_mm.syncResets} {FALSE};add_connection {board_irq_ctrl_0_IRQ_Mask_Slave_agent.m0} {board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent.m0/board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent.m0/board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent.m0/board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent.m0/board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent.m0/board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent.m0/board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent.m0/board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent.m0/board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent.m0/board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent.m0/board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent.m0/board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent.m0/board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent.m0/board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Mask_Slave_agent.m0/board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {board_irq_ctrl_0_IRQ_Mask_Slave_agent.rf_source} {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo.in} {avalon_streaming};add_connection {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo.out} {board_irq_ctrl_0_IRQ_Mask_Slave_agent.rf_sink} {avalon_streaming};add_connection {board_irq_ctrl_0_IRQ_Mask_Slave_agent.rdata_fifo_src} {board_irq_ctrl_0_IRQ_Mask_Slave_agent.rdata_fifo_sink} {avalon_streaming};add_connection {board_irq_ctrl_0_IRQ_Read_Slave_agent.m0} {board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent.m0/board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent.m0/board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent.m0/board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent.m0/board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent.m0/board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent.m0/board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent.m0/board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent.m0/board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent.m0/board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent.m0/board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent.m0/board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent.m0/board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent.m0/board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {board_irq_ctrl_0_IRQ_Read_Slave_agent.m0/board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {board_irq_ctrl_0_IRQ_Read_Slave_agent.rf_source} {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo.in} {avalon_streaming};add_connection {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo.out} {board_irq_ctrl_0_IRQ_Read_Slave_agent.rf_sink} {avalon_streaming};add_connection {board_irq_ctrl_0_IRQ_Read_Slave_agent.rdata_fifo_src} {board_irq_ctrl_0_IRQ_Read_Slave_agent.rdata_fifo_sink} {avalon_streaming};add_connection {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0} {board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.rf_source} {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo.in} {avalon_streaming};add_connection {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo.out} {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.rf_sink} {avalon_streaming};add_connection {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.rdata_fifo_src} {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.rdata_fifo_sink} {avalon_streaming};add_connection {ddr_board_ase_0_avmm_pipe_slave_agent.m0} {ddr_board_ase_0_avmm_pipe_slave_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent.m0/ddr_board_ase_0_avmm_pipe_slave_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent.m0/ddr_board_ase_0_avmm_pipe_slave_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent.m0/ddr_board_ase_0_avmm_pipe_slave_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent.m0/ddr_board_ase_0_avmm_pipe_slave_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent.m0/ddr_board_ase_0_avmm_pipe_slave_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent.m0/ddr_board_ase_0_avmm_pipe_slave_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent.m0/ddr_board_ase_0_avmm_pipe_slave_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent.m0/ddr_board_ase_0_avmm_pipe_slave_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent.m0/ddr_board_ase_0_avmm_pipe_slave_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent.m0/ddr_board_ase_0_avmm_pipe_slave_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent.m0/ddr_board_ase_0_avmm_pipe_slave_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent.m0/ddr_board_ase_0_avmm_pipe_slave_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent.m0/ddr_board_ase_0_avmm_pipe_slave_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {ddr_board_ase_0_avmm_pipe_slave_agent.m0/ddr_board_ase_0_avmm_pipe_slave_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {ddr_board_ase_0_avmm_pipe_slave_agent.rf_source} {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo.in} {avalon_streaming};add_connection {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo.out} {ddr_board_ase_0_avmm_pipe_slave_agent.rf_sink} {avalon_streaming};add_connection {ddr_board_ase_0_avmm_pipe_slave_agent.rdata_fifo_src} {ddr_board_ase_0_avmm_pipe_slave_agent.rdata_fifo_sink} {avalon_streaming};add_connection {kernel_interface_ctrl_agent.m0} {kernel_interface_ctrl_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {kernel_interface_ctrl_agent.m0/kernel_interface_ctrl_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {kernel_interface_ctrl_agent.m0/kernel_interface_ctrl_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {kernel_interface_ctrl_agent.m0/kernel_interface_ctrl_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {kernel_interface_ctrl_agent.m0/kernel_interface_ctrl_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {kernel_interface_ctrl_agent.m0/kernel_interface_ctrl_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {kernel_interface_ctrl_agent.m0/kernel_interface_ctrl_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {kernel_interface_ctrl_agent.m0/kernel_interface_ctrl_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {kernel_interface_ctrl_agent.m0/kernel_interface_ctrl_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {kernel_interface_ctrl_agent.m0/kernel_interface_ctrl_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {kernel_interface_ctrl_agent.m0/kernel_interface_ctrl_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {kernel_interface_ctrl_agent.m0/kernel_interface_ctrl_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {kernel_interface_ctrl_agent.m0/kernel_interface_ctrl_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {kernel_interface_ctrl_agent.m0/kernel_interface_ctrl_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {kernel_interface_ctrl_agent.m0/kernel_interface_ctrl_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {kernel_interface_ctrl_agent.rf_source} {kernel_interface_ctrl_agent_rsp_fifo.in} {avalon_streaming};add_connection {kernel_interface_ctrl_agent_rsp_fifo.out} {kernel_interface_ctrl_agent.rf_sink} {avalon_streaming};add_connection {kernel_interface_ctrl_agent.rdata_fifo_src} {kernel_interface_ctrl_agent.rdata_fifo_sink} {avalon_streaming};add_connection {ddr_board_msgdma_bbb_0_csr_agent.m0} {ddr_board_msgdma_bbb_0_csr_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {ddr_board_msgdma_bbb_0_csr_agent.m0/ddr_board_msgdma_bbb_0_csr_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {ddr_board_msgdma_bbb_0_csr_agent.m0/ddr_board_msgdma_bbb_0_csr_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {ddr_board_msgdma_bbb_0_csr_agent.m0/ddr_board_msgdma_bbb_0_csr_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {ddr_board_msgdma_bbb_0_csr_agent.m0/ddr_board_msgdma_bbb_0_csr_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {ddr_board_msgdma_bbb_0_csr_agent.m0/ddr_board_msgdma_bbb_0_csr_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {ddr_board_msgdma_bbb_0_csr_agent.m0/ddr_board_msgdma_bbb_0_csr_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {ddr_board_msgdma_bbb_0_csr_agent.m0/ddr_board_msgdma_bbb_0_csr_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {ddr_board_msgdma_bbb_0_csr_agent.m0/ddr_board_msgdma_bbb_0_csr_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {ddr_board_msgdma_bbb_0_csr_agent.m0/ddr_board_msgdma_bbb_0_csr_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {ddr_board_msgdma_bbb_0_csr_agent.m0/ddr_board_msgdma_bbb_0_csr_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {ddr_board_msgdma_bbb_0_csr_agent.m0/ddr_board_msgdma_bbb_0_csr_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {ddr_board_msgdma_bbb_0_csr_agent.m0/ddr_board_msgdma_bbb_0_csr_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {ddr_board_msgdma_bbb_0_csr_agent.m0/ddr_board_msgdma_bbb_0_csr_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {ddr_board_msgdma_bbb_0_csr_agent.m0/ddr_board_msgdma_bbb_0_csr_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {ddr_board_msgdma_bbb_0_csr_agent.rf_source} {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo.in} {avalon_streaming};add_connection {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo.out} {ddr_board_msgdma_bbb_0_csr_agent.rf_sink} {avalon_streaming};add_connection {ddr_board_msgdma_bbb_0_csr_agent.rdata_fifo_src} {ddr_board_msgdma_bbb_0_csr_agent.rdata_fifo_sink} {avalon_streaming};add_connection {ddr_board_msgdma_bbb_1_csr_agent.m0} {ddr_board_msgdma_bbb_1_csr_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {ddr_board_msgdma_bbb_1_csr_agent.m0/ddr_board_msgdma_bbb_1_csr_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {ddr_board_msgdma_bbb_1_csr_agent.m0/ddr_board_msgdma_bbb_1_csr_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {ddr_board_msgdma_bbb_1_csr_agent.m0/ddr_board_msgdma_bbb_1_csr_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {ddr_board_msgdma_bbb_1_csr_agent.m0/ddr_board_msgdma_bbb_1_csr_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {ddr_board_msgdma_bbb_1_csr_agent.m0/ddr_board_msgdma_bbb_1_csr_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {ddr_board_msgdma_bbb_1_csr_agent.m0/ddr_board_msgdma_bbb_1_csr_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {ddr_board_msgdma_bbb_1_csr_agent.m0/ddr_board_msgdma_bbb_1_csr_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {ddr_board_msgdma_bbb_1_csr_agent.m0/ddr_board_msgdma_bbb_1_csr_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {ddr_board_msgdma_bbb_1_csr_agent.m0/ddr_board_msgdma_bbb_1_csr_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {ddr_board_msgdma_bbb_1_csr_agent.m0/ddr_board_msgdma_bbb_1_csr_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {ddr_board_msgdma_bbb_1_csr_agent.m0/ddr_board_msgdma_bbb_1_csr_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {ddr_board_msgdma_bbb_1_csr_agent.m0/ddr_board_msgdma_bbb_1_csr_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {ddr_board_msgdma_bbb_1_csr_agent.m0/ddr_board_msgdma_bbb_1_csr_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {ddr_board_msgdma_bbb_1_csr_agent.m0/ddr_board_msgdma_bbb_1_csr_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {ddr_board_msgdma_bbb_1_csr_agent.rf_source} {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo.in} {avalon_streaming};add_connection {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo.out} {ddr_board_msgdma_bbb_1_csr_agent.rf_sink} {avalon_streaming};add_connection {ddr_board_msgdma_bbb_1_csr_agent.rdata_fifo_src} {ddr_board_msgdma_bbb_1_csr_agent.rdata_fifo_sink} {avalon_streaming};add_connection {ddr_board_null_dfh_afu_id_agent.m0} {ddr_board_null_dfh_afu_id_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {ddr_board_null_dfh_afu_id_agent.m0/ddr_board_null_dfh_afu_id_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {ddr_board_null_dfh_afu_id_agent.m0/ddr_board_null_dfh_afu_id_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {ddr_board_null_dfh_afu_id_agent.m0/ddr_board_null_dfh_afu_id_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {ddr_board_null_dfh_afu_id_agent.m0/ddr_board_null_dfh_afu_id_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {ddr_board_null_dfh_afu_id_agent.m0/ddr_board_null_dfh_afu_id_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {ddr_board_null_dfh_afu_id_agent.m0/ddr_board_null_dfh_afu_id_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {ddr_board_null_dfh_afu_id_agent.m0/ddr_board_null_dfh_afu_id_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {ddr_board_null_dfh_afu_id_agent.m0/ddr_board_null_dfh_afu_id_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {ddr_board_null_dfh_afu_id_agent.m0/ddr_board_null_dfh_afu_id_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {ddr_board_null_dfh_afu_id_agent.m0/ddr_board_null_dfh_afu_id_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {ddr_board_null_dfh_afu_id_agent.m0/ddr_board_null_dfh_afu_id_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {ddr_board_null_dfh_afu_id_agent.m0/ddr_board_null_dfh_afu_id_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {ddr_board_null_dfh_afu_id_agent.m0/ddr_board_null_dfh_afu_id_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {ddr_board_null_dfh_afu_id_agent.m0/ddr_board_null_dfh_afu_id_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {ddr_board_null_dfh_afu_id_agent.rf_source} {ddr_board_null_dfh_afu_id_agent_rsp_fifo.in} {avalon_streaming};add_connection {ddr_board_null_dfh_afu_id_agent_rsp_fifo.out} {ddr_board_null_dfh_afu_id_agent.rf_sink} {avalon_streaming};add_connection {ddr_board_null_dfh_afu_id_agent.rdata_fifo_src} {ddr_board_null_dfh_afu_id_agent.rdata_fifo_sink} {avalon_streaming};add_connection {pipe_stage_host_ctrl_m0_agent.cp} {router.sink} {avalon_streaming};preview_set_connection_tag {pipe_stage_host_ctrl_m0_agent.cp/router.sink} {qsys_mm.command};add_connection {router_003.src} {rsp_demux_002.sink} {avalon_streaming};preview_set_connection_tag {router_003.src/rsp_demux_002.sink} {qsys_mm.response};add_connection {router_004.src} {rsp_demux_003.sink} {avalon_streaming};preview_set_connection_tag {router_004.src/rsp_demux_003.sink} {qsys_mm.response};add_connection {router_006.src} {rsp_demux_005.sink} {avalon_streaming};preview_set_connection_tag {router_006.src/rsp_demux_005.sink} {qsys_mm.response};add_connection {router_007.src} {rsp_demux_006.sink} {avalon_streaming};preview_set_connection_tag {router_007.src/rsp_demux_006.sink} {qsys_mm.response};add_connection {router_008.src} {rsp_demux_007.sink} {avalon_streaming};preview_set_connection_tag {router_008.src/rsp_demux_007.sink} {qsys_mm.response};add_connection {router.src} {pipe_stage_host_ctrl_m0_limiter.cmd_sink} {avalon_streaming};preview_set_connection_tag {router.src/pipe_stage_host_ctrl_m0_limiter.cmd_sink} {qsys_mm.command};add_connection {pipe_stage_host_ctrl_m0_limiter.rsp_src} {pipe_stage_host_ctrl_m0_agent.rp} {avalon_streaming};preview_set_connection_tag {pipe_stage_host_ctrl_m0_limiter.rsp_src/pipe_stage_host_ctrl_m0_agent.rp} {qsys_mm.response};add_connection {router_001.src} {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter.sink} {avalon_streaming};preview_set_connection_tag {router_001.src/board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter.sink} {qsys_mm.response};add_connection {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter.src} {rsp_demux.sink} {avalon_streaming};preview_set_connection_tag {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter.src/rsp_demux.sink} {qsys_mm.response};add_connection {router_002.src} {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter.sink} {avalon_streaming};preview_set_connection_tag {router_002.src/board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter.sink} {qsys_mm.response};add_connection {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter.src} {rsp_demux_001.sink} {avalon_streaming};preview_set_connection_tag {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter.src/rsp_demux_001.sink} {qsys_mm.response};add_connection {router_005.src} {kernel_interface_ctrl_rsp_width_adapter.sink} {avalon_streaming};preview_set_connection_tag {router_005.src/kernel_interface_ctrl_rsp_width_adapter.sink} {qsys_mm.response};add_connection {kernel_interface_ctrl_rsp_width_adapter.src} {rsp_demux_004.sink} {avalon_streaming};preview_set_connection_tag {kernel_interface_ctrl_rsp_width_adapter.src/rsp_demux_004.sink} {qsys_mm.response};add_connection {cmd_mux.src} {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter.sink} {avalon_streaming};preview_set_connection_tag {cmd_mux.src/board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter.sink} {qsys_mm.command};add_connection {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter.src} {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter.sink0} {avalon_streaming};preview_set_connection_tag {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter.src/board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter.sink0} {qsys_mm.command};add_connection {cmd_mux_001.src} {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter.sink} {avalon_streaming};preview_set_connection_tag {cmd_mux_001.src/board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter.sink} {qsys_mm.command};add_connection {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter.src} {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter.sink0} {avalon_streaming};preview_set_connection_tag {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter.src/board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter.sink0} {qsys_mm.command};add_connection {cmd_mux_004.src} {kernel_interface_ctrl_cmd_width_adapter.sink} {avalon_streaming};preview_set_connection_tag {cmd_mux_004.src/kernel_interface_ctrl_cmd_width_adapter.sink} {qsys_mm.command};add_connection {kernel_interface_ctrl_cmd_width_adapter.src} {kernel_interface_ctrl_burst_adapter.sink0} {avalon_streaming};preview_set_connection_tag {kernel_interface_ctrl_cmd_width_adapter.src/kernel_interface_ctrl_burst_adapter.sink0} {qsys_mm.command};add_connection {pipe_stage_host_ctrl_m0_limiter.cmd_src} {limiter_pipeline.sink0} {avalon_streaming};preview_set_connection_tag {pipe_stage_host_ctrl_m0_limiter.cmd_src/limiter_pipeline.sink0} {qsys_mm.command};add_connection {limiter_pipeline.source0} {cmd_demux.sink} {avalon_streaming};preview_set_connection_tag {limiter_pipeline.source0/cmd_demux.sink} {qsys_mm.command};add_connection {rsp_mux.src} {limiter_pipeline_001.sink0} {avalon_streaming};preview_set_connection_tag {rsp_mux.src/limiter_pipeline_001.sink0} {qsys_mm.response};add_connection {limiter_pipeline_001.source0} {pipe_stage_host_ctrl_m0_limiter.rsp_sink} {avalon_streaming};preview_set_connection_tag {limiter_pipeline_001.source0/pipe_stage_host_ctrl_m0_limiter.rsp_sink} {qsys_mm.response};add_connection {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter.source0} {agent_pipeline.sink0} {avalon_streaming};preview_set_connection_tag {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter.source0/agent_pipeline.sink0} {qsys_mm.command};add_connection {agent_pipeline.source0} {board_irq_ctrl_0_IRQ_Mask_Slave_agent.cp} {avalon_streaming};preview_set_connection_tag {agent_pipeline.source0/board_irq_ctrl_0_IRQ_Mask_Slave_agent.cp} {qsys_mm.command};add_connection {board_irq_ctrl_0_IRQ_Mask_Slave_agent.rp} {agent_pipeline_001.sink0} {avalon_streaming};preview_set_connection_tag {board_irq_ctrl_0_IRQ_Mask_Slave_agent.rp/agent_pipeline_001.sink0} {qsys_mm.response};add_connection {agent_pipeline_001.source0} {router_001.sink} {avalon_streaming};preview_set_connection_tag {agent_pipeline_001.source0/router_001.sink} {qsys_mm.response};add_connection {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter.source0} {agent_pipeline_002.sink0} {avalon_streaming};preview_set_connection_tag {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter.source0/agent_pipeline_002.sink0} {qsys_mm.command};add_connection {agent_pipeline_002.source0} {board_irq_ctrl_0_IRQ_Read_Slave_agent.cp} {avalon_streaming};preview_set_connection_tag {agent_pipeline_002.source0/board_irq_ctrl_0_IRQ_Read_Slave_agent.cp} {qsys_mm.command};add_connection {board_irq_ctrl_0_IRQ_Read_Slave_agent.rp} {agent_pipeline_003.sink0} {avalon_streaming};preview_set_connection_tag {board_irq_ctrl_0_IRQ_Read_Slave_agent.rp/agent_pipeline_003.sink0} {qsys_mm.response};add_connection {agent_pipeline_003.source0} {router_002.sink} {avalon_streaming};preview_set_connection_tag {agent_pipeline_003.source0/router_002.sink} {qsys_mm.response};add_connection {cmd_mux_002.src} {agent_pipeline_004.sink0} {avalon_streaming};preview_set_connection_tag {cmd_mux_002.src/agent_pipeline_004.sink0} {qsys_mm.command};add_connection {agent_pipeline_004.source0} {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.cp} {avalon_streaming};preview_set_connection_tag {agent_pipeline_004.source0/board_afu_id_avmm_slave_0_afu_cfg_slave_agent.cp} {qsys_mm.command};add_connection {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.rp} {agent_pipeline_005.sink0} {avalon_streaming};preview_set_connection_tag {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.rp/agent_pipeline_005.sink0} {qsys_mm.response};add_connection {agent_pipeline_005.source0} {router_003.sink} {avalon_streaming};preview_set_connection_tag {agent_pipeline_005.source0/router_003.sink} {qsys_mm.response};add_connection {cmd_mux_003.src} {agent_pipeline_006.sink0} {avalon_streaming};preview_set_connection_tag {cmd_mux_003.src/agent_pipeline_006.sink0} {qsys_mm.command};add_connection {agent_pipeline_006.source0} {ddr_board_ase_0_avmm_pipe_slave_agent.cp} {avalon_streaming};preview_set_connection_tag {agent_pipeline_006.source0/ddr_board_ase_0_avmm_pipe_slave_agent.cp} {qsys_mm.command};add_connection {ddr_board_ase_0_avmm_pipe_slave_agent.rp} {agent_pipeline_007.sink0} {avalon_streaming};preview_set_connection_tag {ddr_board_ase_0_avmm_pipe_slave_agent.rp/agent_pipeline_007.sink0} {qsys_mm.response};add_connection {agent_pipeline_007.source0} {router_004.sink} {avalon_streaming};preview_set_connection_tag {agent_pipeline_007.source0/router_004.sink} {qsys_mm.response};add_connection {kernel_interface_ctrl_burst_adapter.source0} {agent_pipeline_008.sink0} {avalon_streaming};preview_set_connection_tag {kernel_interface_ctrl_burst_adapter.source0/agent_pipeline_008.sink0} {qsys_mm.command};add_connection {agent_pipeline_008.source0} {kernel_interface_ctrl_agent.cp} {avalon_streaming};preview_set_connection_tag {agent_pipeline_008.source0/kernel_interface_ctrl_agent.cp} {qsys_mm.command};add_connection {kernel_interface_ctrl_agent.rp} {agent_pipeline_009.sink0} {avalon_streaming};preview_set_connection_tag {kernel_interface_ctrl_agent.rp/agent_pipeline_009.sink0} {qsys_mm.response};add_connection {agent_pipeline_009.source0} {router_005.sink} {avalon_streaming};preview_set_connection_tag {agent_pipeline_009.source0/router_005.sink} {qsys_mm.response};add_connection {cmd_mux_005.src} {agent_pipeline_010.sink0} {avalon_streaming};preview_set_connection_tag {cmd_mux_005.src/agent_pipeline_010.sink0} {qsys_mm.command};add_connection {agent_pipeline_010.source0} {ddr_board_msgdma_bbb_0_csr_agent.cp} {avalon_streaming};preview_set_connection_tag {agent_pipeline_010.source0/ddr_board_msgdma_bbb_0_csr_agent.cp} {qsys_mm.command};add_connection {ddr_board_msgdma_bbb_0_csr_agent.rp} {agent_pipeline_011.sink0} {avalon_streaming};preview_set_connection_tag {ddr_board_msgdma_bbb_0_csr_agent.rp/agent_pipeline_011.sink0} {qsys_mm.response};add_connection {agent_pipeline_011.source0} {router_006.sink} {avalon_streaming};preview_set_connection_tag {agent_pipeline_011.source0/router_006.sink} {qsys_mm.response};add_connection {cmd_mux_006.src} {agent_pipeline_012.sink0} {avalon_streaming};preview_set_connection_tag {cmd_mux_006.src/agent_pipeline_012.sink0} {qsys_mm.command};add_connection {agent_pipeline_012.source0} {ddr_board_msgdma_bbb_1_csr_agent.cp} {avalon_streaming};preview_set_connection_tag {agent_pipeline_012.source0/ddr_board_msgdma_bbb_1_csr_agent.cp} {qsys_mm.command};add_connection {ddr_board_msgdma_bbb_1_csr_agent.rp} {agent_pipeline_013.sink0} {avalon_streaming};preview_set_connection_tag {ddr_board_msgdma_bbb_1_csr_agent.rp/agent_pipeline_013.sink0} {qsys_mm.response};add_connection {agent_pipeline_013.source0} {router_007.sink} {avalon_streaming};preview_set_connection_tag {agent_pipeline_013.source0/router_007.sink} {qsys_mm.response};add_connection {cmd_mux_007.src} {agent_pipeline_014.sink0} {avalon_streaming};preview_set_connection_tag {cmd_mux_007.src/agent_pipeline_014.sink0} {qsys_mm.command};add_connection {agent_pipeline_014.source0} {ddr_board_null_dfh_afu_id_agent.cp} {avalon_streaming};preview_set_connection_tag {agent_pipeline_014.source0/ddr_board_null_dfh_afu_id_agent.cp} {qsys_mm.command};add_connection {ddr_board_null_dfh_afu_id_agent.rp} {agent_pipeline_015.sink0} {avalon_streaming};preview_set_connection_tag {ddr_board_null_dfh_afu_id_agent.rp/agent_pipeline_015.sink0} {qsys_mm.response};add_connection {agent_pipeline_015.source0} {router_008.sink} {avalon_streaming};preview_set_connection_tag {agent_pipeline_015.source0/router_008.sink} {qsys_mm.response};add_connection {cmd_demux.src0} {mux_pipeline.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src0/mux_pipeline.sink0} {qsys_mm.command};add_connection {mux_pipeline.source0} {cmd_mux.sink0} {avalon_streaming};preview_set_connection_tag {mux_pipeline.source0/cmd_mux.sink0} {qsys_mm.command};add_connection {cmd_demux.src1} {mux_pipeline_001.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src1/mux_pipeline_001.sink0} {qsys_mm.command};add_connection {mux_pipeline_001.source0} {cmd_mux_001.sink0} {avalon_streaming};preview_set_connection_tag {mux_pipeline_001.source0/cmd_mux_001.sink0} {qsys_mm.command};add_connection {cmd_demux.src2} {mux_pipeline_002.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src2/mux_pipeline_002.sink0} {qsys_mm.command};add_connection {mux_pipeline_002.source0} {cmd_mux_002.sink0} {avalon_streaming};preview_set_connection_tag {mux_pipeline_002.source0/cmd_mux_002.sink0} {qsys_mm.command};add_connection {cmd_demux.src3} {mux_pipeline_003.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src3/mux_pipeline_003.sink0} {qsys_mm.command};add_connection {mux_pipeline_003.source0} {cmd_mux_003.sink0} {avalon_streaming};preview_set_connection_tag {mux_pipeline_003.source0/cmd_mux_003.sink0} {qsys_mm.command};add_connection {cmd_demux.src4} {mux_pipeline_004.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src4/mux_pipeline_004.sink0} {qsys_mm.command};add_connection {mux_pipeline_004.source0} {cmd_mux_004.sink0} {avalon_streaming};preview_set_connection_tag {mux_pipeline_004.source0/cmd_mux_004.sink0} {qsys_mm.command};add_connection {cmd_demux.src5} {mux_pipeline_005.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src5/mux_pipeline_005.sink0} {qsys_mm.command};add_connection {mux_pipeline_005.source0} {cmd_mux_005.sink0} {avalon_streaming};preview_set_connection_tag {mux_pipeline_005.source0/cmd_mux_005.sink0} {qsys_mm.command};add_connection {cmd_demux.src6} {mux_pipeline_006.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src6/mux_pipeline_006.sink0} {qsys_mm.command};add_connection {mux_pipeline_006.source0} {cmd_mux_006.sink0} {avalon_streaming};preview_set_connection_tag {mux_pipeline_006.source0/cmd_mux_006.sink0} {qsys_mm.command};add_connection {cmd_demux.src7} {mux_pipeline_007.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src7/mux_pipeline_007.sink0} {qsys_mm.command};add_connection {mux_pipeline_007.source0} {cmd_mux_007.sink0} {avalon_streaming};preview_set_connection_tag {mux_pipeline_007.source0/cmd_mux_007.sink0} {qsys_mm.command};add_connection {rsp_demux.src0} {mux_pipeline_008.sink0} {avalon_streaming};preview_set_connection_tag {rsp_demux.src0/mux_pipeline_008.sink0} {qsys_mm.response};add_connection {mux_pipeline_008.source0} {rsp_mux.sink0} {avalon_streaming};preview_set_connection_tag {mux_pipeline_008.source0/rsp_mux.sink0} {qsys_mm.response};add_connection {rsp_demux_001.src0} {mux_pipeline_009.sink0} {avalon_streaming};preview_set_connection_tag {rsp_demux_001.src0/mux_pipeline_009.sink0} {qsys_mm.response};add_connection {mux_pipeline_009.source0} {rsp_mux.sink1} {avalon_streaming};preview_set_connection_tag {mux_pipeline_009.source0/rsp_mux.sink1} {qsys_mm.response};add_connection {rsp_demux_002.src0} {mux_pipeline_010.sink0} {avalon_streaming};preview_set_connection_tag {rsp_demux_002.src0/mux_pipeline_010.sink0} {qsys_mm.response};add_connection {mux_pipeline_010.source0} {rsp_mux.sink2} {avalon_streaming};preview_set_connection_tag {mux_pipeline_010.source0/rsp_mux.sink2} {qsys_mm.response};add_connection {rsp_demux_003.src0} {mux_pipeline_011.sink0} {avalon_streaming};preview_set_connection_tag {rsp_demux_003.src0/mux_pipeline_011.sink0} {qsys_mm.response};add_connection {mux_pipeline_011.source0} {rsp_mux.sink3} {avalon_streaming};preview_set_connection_tag {mux_pipeline_011.source0/rsp_mux.sink3} {qsys_mm.response};add_connection {rsp_demux_004.src0} {mux_pipeline_012.sink0} {avalon_streaming};preview_set_connection_tag {rsp_demux_004.src0/mux_pipeline_012.sink0} {qsys_mm.response};add_connection {mux_pipeline_012.source0} {rsp_mux.sink4} {avalon_streaming};preview_set_connection_tag {mux_pipeline_012.source0/rsp_mux.sink4} {qsys_mm.response};add_connection {rsp_demux_005.src0} {mux_pipeline_013.sink0} {avalon_streaming};preview_set_connection_tag {rsp_demux_005.src0/mux_pipeline_013.sink0} {qsys_mm.response};add_connection {mux_pipeline_013.source0} {rsp_mux.sink5} {avalon_streaming};preview_set_connection_tag {mux_pipeline_013.source0/rsp_mux.sink5} {qsys_mm.response};add_connection {rsp_demux_006.src0} {mux_pipeline_014.sink0} {avalon_streaming};preview_set_connection_tag {rsp_demux_006.src0/mux_pipeline_014.sink0} {qsys_mm.response};add_connection {mux_pipeline_014.source0} {rsp_mux.sink6} {avalon_streaming};preview_set_connection_tag {mux_pipeline_014.source0/rsp_mux.sink6} {qsys_mm.response};add_connection {rsp_demux_007.src0} {mux_pipeline_015.sink0} {avalon_streaming};preview_set_connection_tag {rsp_demux_007.src0/mux_pipeline_015.sink0} {qsys_mm.response};add_connection {mux_pipeline_015.source0} {rsp_mux.sink7} {avalon_streaming};preview_set_connection_tag {mux_pipeline_015.source0/rsp_mux.sink7} {qsys_mm.response};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {pipe_stage_host_ctrl_m0_translator.reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {board_irq_ctrl_0_IRQ_Mask_Slave_translator.reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {board_irq_ctrl_0_IRQ_Read_Slave_translator.reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {board_afu_id_avmm_slave_0_afu_cfg_slave_translator.reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {ddr_board_ase_0_avmm_pipe_slave_translator.reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {kernel_interface_ctrl_translator.reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {ddr_board_msgdma_bbb_0_csr_translator.reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {ddr_board_msgdma_bbb_1_csr_translator.reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {ddr_board_null_dfh_afu_id_translator.reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {pipe_stage_host_ctrl_m0_agent.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {board_irq_ctrl_0_IRQ_Mask_Slave_agent.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {board_irq_ctrl_0_IRQ_Read_Slave_agent.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {ddr_board_ase_0_avmm_pipe_slave_agent.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {kernel_interface_ctrl_agent.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {kernel_interface_ctrl_agent_rsp_fifo.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {ddr_board_msgdma_bbb_0_csr_agent.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {ddr_board_msgdma_bbb_1_csr_agent.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {ddr_board_null_dfh_afu_id_agent.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {ddr_board_null_dfh_afu_id_agent_rsp_fifo.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {router.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {router_001.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {router_002.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {router_003.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {router_004.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {router_005.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {router_006.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {router_007.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {router_008.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {pipe_stage_host_ctrl_m0_limiter.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {kernel_interface_ctrl_burst_adapter.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {cmd_demux.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {cmd_mux.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {cmd_mux_001.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {cmd_mux_002.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {cmd_mux_003.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {cmd_mux_004.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {cmd_mux_005.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {cmd_mux_006.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {cmd_mux_007.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {rsp_demux.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {rsp_demux_001.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {rsp_demux_002.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {rsp_demux_003.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {rsp_demux_004.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {rsp_demux_005.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {rsp_demux_006.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {rsp_demux_007.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {rsp_mux.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {kernel_interface_ctrl_rsp_width_adapter.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {kernel_interface_ctrl_cmd_width_adapter.clk_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {limiter_pipeline.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {limiter_pipeline_001.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {agent_pipeline.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {agent_pipeline_001.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {agent_pipeline_002.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {agent_pipeline_003.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {agent_pipeline_004.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {agent_pipeline_005.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {agent_pipeline_006.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {agent_pipeline_007.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {agent_pipeline_008.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {agent_pipeline_009.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {agent_pipeline_010.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {agent_pipeline_011.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {agent_pipeline_012.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {agent_pipeline_013.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {agent_pipeline_014.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {agent_pipeline_015.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {mux_pipeline.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {mux_pipeline_001.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {mux_pipeline_002.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {mux_pipeline_003.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {mux_pipeline_004.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {mux_pipeline_005.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {mux_pipeline_006.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {mux_pipeline_007.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {mux_pipeline_008.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {mux_pipeline_009.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {mux_pipeline_010.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {mux_pipeline_011.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {mux_pipeline_012.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {mux_pipeline_013.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {mux_pipeline_014.cr0_reset} {reset};add_connection {pipe_stage_host_ctrl_reset_reset_bridge.out_reset} {mux_pipeline_015.cr0_reset} {reset};add_connection {clk_200_out_clk_clock_bridge.out_clk} {pipe_stage_host_ctrl_m0_translator.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {board_irq_ctrl_0_IRQ_Mask_Slave_translator.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {board_irq_ctrl_0_IRQ_Read_Slave_translator.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {board_afu_id_avmm_slave_0_afu_cfg_slave_translator.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {ddr_board_ase_0_avmm_pipe_slave_translator.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {kernel_interface_ctrl_translator.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {ddr_board_msgdma_bbb_0_csr_translator.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {ddr_board_msgdma_bbb_1_csr_translator.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {ddr_board_null_dfh_afu_id_translator.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {pipe_stage_host_ctrl_m0_agent.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {board_irq_ctrl_0_IRQ_Mask_Slave_agent.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {board_irq_ctrl_0_IRQ_Read_Slave_agent.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {board_afu_id_avmm_slave_0_afu_cfg_slave_agent.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {ddr_board_ase_0_avmm_pipe_slave_agent.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {kernel_interface_ctrl_agent.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {kernel_interface_ctrl_agent_rsp_fifo.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {ddr_board_msgdma_bbb_0_csr_agent.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {ddr_board_msgdma_bbb_1_csr_agent.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {ddr_board_null_dfh_afu_id_agent.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {ddr_board_null_dfh_afu_id_agent_rsp_fifo.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {router.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {router_001.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {router_002.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {router_003.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {router_004.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {router_005.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {router_006.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {router_007.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {router_008.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {pipe_stage_host_ctrl_m0_limiter.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {kernel_interface_ctrl_burst_adapter.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {cmd_demux.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {rsp_mux.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {cmd_mux.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {rsp_demux.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {cmd_mux_001.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {rsp_demux_001.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {cmd_mux_002.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {rsp_demux_002.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {cmd_mux_003.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {rsp_demux_003.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {cmd_mux_004.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {rsp_demux_004.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {cmd_mux_005.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {rsp_demux_005.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {cmd_mux_006.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {rsp_demux_006.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {cmd_mux_007.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {rsp_demux_007.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {kernel_interface_ctrl_rsp_width_adapter.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {kernel_interface_ctrl_cmd_width_adapter.clk} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {limiter_pipeline.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {limiter_pipeline_001.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {agent_pipeline.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {agent_pipeline_001.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {agent_pipeline_002.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {agent_pipeline_003.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {agent_pipeline_004.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {agent_pipeline_005.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {agent_pipeline_006.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {agent_pipeline_007.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {agent_pipeline_008.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {agent_pipeline_009.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {agent_pipeline_010.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {agent_pipeline_011.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {agent_pipeline_012.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {agent_pipeline_013.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {agent_pipeline_014.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {agent_pipeline_015.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {mux_pipeline.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {mux_pipeline_001.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {mux_pipeline_002.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {mux_pipeline_003.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {mux_pipeline_004.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {mux_pipeline_005.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {mux_pipeline_006.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {mux_pipeline_007.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {mux_pipeline_008.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {mux_pipeline_009.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {mux_pipeline_010.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {mux_pipeline_011.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {mux_pipeline_012.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {mux_pipeline_013.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {mux_pipeline_014.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {mux_pipeline_015.cr0} {clock};add_connection {clk_200_out_clk_clock_bridge.out_clk} {pipe_stage_host_ctrl_reset_reset_bridge.clk} {clock};add_interface {pipe_stage_host_ctrl_m0} {avalon} {slave};set_interface_property {pipe_stage_host_ctrl_m0} {EXPORT_OF} {pipe_stage_host_ctrl_m0_translator.avalon_anti_master_0};add_interface {board_irq_ctrl_0_IRQ_Mask_Slave} {avalon} {master};set_interface_property {board_irq_ctrl_0_IRQ_Mask_Slave} {EXPORT_OF} {board_irq_ctrl_0_IRQ_Mask_Slave_translator.avalon_anti_slave_0};add_interface {board_irq_ctrl_0_IRQ_Read_Slave} {avalon} {master};set_interface_property {board_irq_ctrl_0_IRQ_Read_Slave} {EXPORT_OF} {board_irq_ctrl_0_IRQ_Read_Slave_translator.avalon_anti_slave_0};add_interface {board_afu_id_avmm_slave_0_afu_cfg_slave} {avalon} {master};set_interface_property {board_afu_id_avmm_slave_0_afu_cfg_slave} {EXPORT_OF} {board_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_anti_slave_0};add_interface {ddr_board_ase_0_avmm_pipe_slave} {avalon} {master};set_interface_property {ddr_board_ase_0_avmm_pipe_slave} {EXPORT_OF} {ddr_board_ase_0_avmm_pipe_slave_translator.avalon_anti_slave_0};add_interface {kernel_interface_ctrl} {avalon} {master};set_interface_property {kernel_interface_ctrl} {EXPORT_OF} {kernel_interface_ctrl_translator.avalon_anti_slave_0};add_interface {ddr_board_msgdma_bbb_0_csr} {avalon} {master};set_interface_property {ddr_board_msgdma_bbb_0_csr} {EXPORT_OF} {ddr_board_msgdma_bbb_0_csr_translator.avalon_anti_slave_0};add_interface {ddr_board_msgdma_bbb_1_csr} {avalon} {master};set_interface_property {ddr_board_msgdma_bbb_1_csr} {EXPORT_OF} {ddr_board_msgdma_bbb_1_csr_translator.avalon_anti_slave_0};add_interface {ddr_board_null_dfh_afu_id} {avalon} {master};set_interface_property {ddr_board_null_dfh_afu_id} {EXPORT_OF} {ddr_board_null_dfh_afu_id_translator.avalon_anti_slave_0};add_interface {pipe_stage_host_ctrl_reset_reset_bridge_in_reset} {reset} {slave};set_interface_property {pipe_stage_host_ctrl_reset_reset_bridge_in_reset} {EXPORT_OF} {pipe_stage_host_ctrl_reset_reset_bridge.in_reset};add_interface {clk_200_out_clk} {clock} {slave};set_interface_property {clk_200_out_clk} {EXPORT_OF} {clk_200_out_clk_clock_bridge.in_clk};set_module_assignment {interconnect_id.board_afu_id_avmm_slave_0.afu_cfg_slave} {0};set_module_assignment {interconnect_id.board_irq_ctrl_0.IRQ_Mask_Slave} {1};set_module_assignment {interconnect_id.board_irq_ctrl_0.IRQ_Read_Slave} {2};set_module_assignment {interconnect_id.ddr_board.ase_0_avmm_pipe_slave} {3};set_module_assignment {interconnect_id.ddr_board.msgdma_bbb_0_csr} {4};set_module_assignment {interconnect_id.ddr_board.msgdma_bbb_1_csr} {5};set_module_assignment {interconnect_id.ddr_board.null_dfh_afu_id} {6};set_module_assignment {interconnect_id.kernel_interface.ctrl} {7};set_module_assignment {interconnect_id.pipe_stage_host_ctrl.m0} {0};" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_mm_interconnect_191/synth/board_altera_mm_interconnect_191_qqmhvsy.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_mm_interconnect_191/synth/board_altera_mm_interconnect_191_qqmhvsy.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_mm_interconnect/altera_mm_interconnect_hw.tcl" />
  </sourceFiles>
  <childSourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_translator/altera_merlin_master_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_translator/altera_merlin_slave_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_agent/altera_merlin_master_agent_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_agent/altera_merlin_slave_agent_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_traffic_limiter/altera_merlin_traffic_limiter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/iconnect/alt_hiconnect_sc_fifo/alt_hiconnect_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_burst_adapter/altera_merlin_burst_adapter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/avalon_st/altera_avalon_st_pipeline_stage/altera_avalon_st_pipeline_stage_hw.tcl" />
  </childSourceFiles>
  <instantiator instantiator="board" as="mm_interconnect_2" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_mm_interconnect_191_qqmhvsy"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_master_translator_191_g7h47bq"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_slave_translator_191_x56fcki"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_master_agent_191_mpbm6tq"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_slave_agent_191_ncfkfri"</message>
   <message level="Info" culprit="board">"Generating: board_altera_avalon_sc_fifo_191_e5eqkcq"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_router_191_qdcstwy"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_router_191_ymmgbda"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_router_191_p7j7u6q"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_traffic_limiter_191_kcba44q"</message>
   <message level="Info" culprit="my_altera_avalon_sc_fifo_dest_id_fifo">"Generating: my_altera_avalon_sc_fifo_dest_id_fifo"</message>
   <message level="Info" culprit="my_alt_hiconnect_sc_fifo_dest_id_fifo">"Generating: my_alt_hiconnect_sc_fifo_dest_id_fifo"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_traffic_limiter_191_eiui2ey"</message>
   <message level="Info" culprit="board">"Generating: board_altera_avalon_sc_fifo_191_e5eqkcq"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_traffic_limiter_191_obycr2q"</message>
   <message level="Info" culprit="board">"Generating: board_alt_hiconnect_sc_fifo_191_7qtmpqq"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_burst_adapter_191_32tg2fa"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_demultiplexer_191_lgtc25y"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_multiplexer_191_2bsc4nq"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_demultiplexer_191_wkeid3i"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_multiplexer_191_lg6qpai"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_width_adapter_191_vfugsvi"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_width_adapter_191_w5iwv2q"</message>
   <message level="Info" culprit="board">"Generating: altera_avalon_st_pipeline_stage"</message>
  </messages>
 </entity>
 <entity
   kind="altera_irq_mapper"
   version="19.1"
   name="board_altera_irq_mapper_191_vnrcumq">
  <parameter name="NUM_RCVRS" value="1" />
  <parameter name="AUTO_CLK_CLOCK_RATE" value="-1" />
  <parameter name="IRQ_MAP" value="0:0" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="SYNC_RESET" value="0" />
  <parameter name="SENDER_IRQ_WIDTH" value="32" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_irq_mapper_191/synth/board_altera_irq_mapper_191_vnrcumq.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_irq_mapper_191/synth/board_altera_irq_mapper_191_vnrcumq.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_irq_mapper/altera_irq_mapper_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator instantiator="board" as="irq_mapper" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_irq_mapper_191_vnrcumq"</message>
  </messages>
 </entity>
 <entity
   kind="altera_irq_clock_crosser"
   version="19.1"
   name="board_altera_irq_clock_crosser_191_4qcttxy">
  <parameter name="IRQ_WIDTH" value="1" />
  <parameter name="AUTO_RECEIVER_INTERRUPTS_USED" value="-1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_irq_clock_crosser_191/synth/board_altera_irq_clock_crosser_191_4qcttxy.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_irq_clock_crosser_191/synth/board_altera_irq_clock_crosser_191_4qcttxy.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_irq_clock_crosser/altera_irq_clock_crosser_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator instantiator="board" as="irq_synchronizer" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_irq_clock_crosser_191_4qcttxy"</message>
  </messages>
 </entity>
 <entity
   kind="altera_reset_controller"
   version="19.1"
   name="altera_reset_controller">
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_reset_controller_191/synth/altera_reset_controller.v"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_reset_controller_191/synth/altera_reset_synchronizer.v"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_reset_controller_191/synth/altera_reset_controller.sdc"
       attributes="NO_AUTO_INSTANCE_DISCOVERY NO_SDC_PROMOTION" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_reset_controller_191/synth/altera_reset_controller.v"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_reset_controller_191/synth/altera_reset_synchronizer.v"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_reset_controller_191/synth/altera_reset_controller.sdc"
       attributes="NO_AUTO_INSTANCE_DISCOVERY NO_SDC_PROMOTION" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_reset_controller/altera_reset_controller_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator instantiator="board" as="rst_controller" />
  <messages>
   <message level="Info" culprit="board">"Generating: altera_reset_controller"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_master_translator"
   version="19.1"
   name="board_altera_merlin_master_translator_191_g7h47bq">
  <parameter name="WAITREQUEST_ALLOWANCE" value="0" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_master_translator_191/synth/board_altera_merlin_master_translator_191_g7h47bq.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_master_translator_191/synth/board_altera_merlin_master_translator_191_g7h47bq.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_translator/altera_merlin_master_translator_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="board_altera_mm_interconnect_191_plnkcii"
     as="ddr_board_host_wr_translator" />
  <instantiator
     instantiator="board_altera_mm_interconnect_191_qqmhvsy"
     as="pipe_stage_host_ctrl_m0_translator" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_master_translator_191_g7h47bq"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_slave_translator"
   version="19.1"
   name="board_altera_merlin_slave_translator_191_x56fcki">
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_slave_translator_191/synth/board_altera_merlin_slave_translator_191_x56fcki.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_slave_translator_191/synth/board_altera_merlin_slave_translator_191_x56fcki.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_translator/altera_merlin_slave_translator_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="board_altera_mm_interconnect_191_plnkcii"
     as="pipe_stage_dma_host_wr_s0_translator" />
  <instantiator
     instantiator="board_altera_mm_interconnect_191_qqmhvsy"
     as="board_irq_ctrl_0_IRQ_Mask_Slave_translator,board_irq_ctrl_0_IRQ_Read_Slave_translator,board_afu_id_avmm_slave_0_afu_cfg_slave_translator,ddr_board_ase_0_avmm_pipe_slave_translator,kernel_interface_ctrl_translator,ddr_board_msgdma_bbb_0_csr_translator,ddr_board_msgdma_bbb_1_csr_translator,ddr_board_null_dfh_afu_id_translator" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_slave_translator_191_x56fcki"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_master_agent"
   version="19.1"
   name="board_altera_merlin_master_agent_191_mpbm6tq">
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_master_agent_191/synth/board_altera_merlin_master_agent_191_mpbm6tq.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_master_agent_191/synth/board_altera_merlin_master_agent_191_mpbm6tq.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_agent/altera_merlin_master_agent_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="board_altera_mm_interconnect_191_qqmhvsy"
     as="pipe_stage_host_ctrl_m0_agent" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_master_agent_191_mpbm6tq"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_slave_agent"
   version="19.1"
   name="board_altera_merlin_slave_agent_191_ncfkfri">
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_slave_agent_191/synth/board_altera_merlin_slave_agent_191_ncfkfri.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_slave_agent_191/synth/altera_merlin_burst_uncompressor.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_slave_agent_191/synth/board_altera_merlin_slave_agent_191_ncfkfri.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_slave_agent_191/synth/altera_merlin_burst_uncompressor.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_agent/altera_merlin_slave_agent_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="board_altera_mm_interconnect_191_qqmhvsy"
     as="board_irq_ctrl_0_IRQ_Mask_Slave_agent,board_irq_ctrl_0_IRQ_Read_Slave_agent,board_afu_id_avmm_slave_0_afu_cfg_slave_agent,ddr_board_ase_0_avmm_pipe_slave_agent,kernel_interface_ctrl_agent,ddr_board_msgdma_bbb_0_csr_agent,ddr_board_msgdma_bbb_1_csr_agent,ddr_board_null_dfh_afu_id_agent" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_slave_agent_191_ncfkfri"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_router"
   version="19.1"
   name="board_altera_merlin_router_191_qdcstwy">
  <parameter name="ST_CHANNEL_W" value="8" />
  <parameter name="DEFAULT_WR_CHANNEL" value="-1" />
  <parameter name="PKT_TRANS_READ" value="93" />
  <parameter
     name="START_ADDRESS"
     value="0x0,0x100,0x108,0x4000,0x10000,0x20000,0x20100,0x20200" />
  <parameter name="DEFAULT_CHANNEL" value="4" />
  <parameter name="MEMORY_ALIASING_DECODE" value="0" />
  <parameter name="HAS_USER_DEFAULT_SLAVE" value="0" />
  <parameter
     name="SLAVES_INFO"
     value="0:00000100:0x0:0x40:both:1:0:0:1,2:00000010:0x100:0x104:read:1:0:0:1,1:00000001:0x108:0x10c:both:1:0:0:1,7:00010000:0x4000:0x8000:both:1:0:0:1,3:00001000:0x10000:0x12000:both:1:0:0:1,4:00100000:0x20000:0x20080:both:1:0:0:1,5:01000000:0x20100:0x20180:both:1:0:0:1,6:10000000:0x20200:0x20240:both:1:0:0:1" />
  <parameter name="DEFAULT_RD_CHANNEL" value="-1" />
  <parameter name="PKT_ADDR_H" value="89" />
  <parameter name="PKT_DEST_ID_H" value="115" />
  <parameter name="PKT_ADDR_L" value="72" />
  <parameter name="PKT_DEST_ID_L" value="113" />
  <parameter
     name="CHANNEL_ID"
     value="00000100,00000010,00000001,00010000,00001000,00100000,01000000,10000000" />
  <parameter
     name="TYPE_OF_TRANSACTION"
     value="both,read,both,both,both,both,both,both" />
  <parameter name="SECURED_RANGE_PAIRS" value="0,0,0,0,0,0,0,0" />
  <parameter name="SPAN_OFFSET" value="" />
  <parameter name="ST_DATA_W" value="138" />
  <parameter name="SECURED_RANGE_LIST" value="0,0,0,0,0,0,0,0" />
  <parameter name="DECODER_TYPE" value="0" />
  <parameter name="PKT_PROTECTION_H" value="119" />
  <parameter
     name="END_ADDRESS"
     value="0x40,0x104,0x10c,0x8000,0x12000,0x20080,0x20180,0x20240" />
  <parameter name="PKT_PROTECTION_L" value="117" />
  <parameter name="PKT_TRANS_WRITE" value="92" />
  <parameter name="DEFAULT_DESTID" value="7" />
  <parameter name="DESTINATION_ID" value="0,2,1,7,3,4,5,6" />
  <parameter name="NON_SECURED_TAG" value="1,1,1,1,1,1,1,1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_router_191/synth/board_altera_merlin_router_191_qdcstwy.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_router_191/synth/board_altera_merlin_router_191_qdcstwy.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator instantiator="board_altera_mm_interconnect_191_qqmhvsy" as="router" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_router_191_qdcstwy"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_router"
   version="19.1"
   name="board_altera_merlin_router_191_ymmgbda">
  <parameter name="ST_CHANNEL_W" value="8" />
  <parameter name="DEFAULT_WR_CHANNEL" value="-1" />
  <parameter name="PKT_TRANS_READ" value="57" />
  <parameter name="START_ADDRESS" value="0x0" />
  <parameter name="DEFAULT_CHANNEL" value="0" />
  <parameter name="MEMORY_ALIASING_DECODE" value="0" />
  <parameter name="HAS_USER_DEFAULT_SLAVE" value="0" />
  <parameter name="SLAVES_INFO" value="0:1:0x0:0x0:both:1:0:0:1" />
  <parameter name="DEFAULT_RD_CHANNEL" value="-1" />
  <parameter name="PKT_ADDR_H" value="53" />
  <parameter name="PKT_DEST_ID_H" value="79" />
  <parameter name="PKT_ADDR_L" value="36" />
  <parameter name="PKT_DEST_ID_L" value="77" />
  <parameter name="CHANNEL_ID" value="1" />
  <parameter name="TYPE_OF_TRANSACTION" value="both" />
  <parameter name="SECURED_RANGE_PAIRS" value="0" />
  <parameter name="SPAN_OFFSET" value="" />
  <parameter name="ST_DATA_W" value="102" />
  <parameter name="SECURED_RANGE_LIST" value="0" />
  <parameter name="DECODER_TYPE" value="1" />
  <parameter name="PKT_PROTECTION_H" value="83" />
  <parameter name="END_ADDRESS" value="0x0" />
  <parameter name="PKT_PROTECTION_L" value="81" />
  <parameter name="PKT_TRANS_WRITE" value="56" />
  <parameter name="DEFAULT_DESTID" value="0" />
  <parameter name="DESTINATION_ID" value="0" />
  <parameter name="NON_SECURED_TAG" value="1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_router_191/synth/board_altera_merlin_router_191_ymmgbda.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_router_191/synth/board_altera_merlin_router_191_ymmgbda.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="board_altera_mm_interconnect_191_qqmhvsy"
     as="router_001,router_002,router_005" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_router_191_ymmgbda"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_router"
   version="19.1"
   name="board_altera_merlin_router_191_p7j7u6q">
  <parameter name="ST_CHANNEL_W" value="8" />
  <parameter name="DEFAULT_WR_CHANNEL" value="-1" />
  <parameter name="PKT_TRANS_READ" value="93" />
  <parameter name="START_ADDRESS" value="0x0" />
  <parameter name="DEFAULT_CHANNEL" value="0" />
  <parameter name="MEMORY_ALIASING_DECODE" value="0" />
  <parameter name="HAS_USER_DEFAULT_SLAVE" value="0" />
  <parameter name="SLAVES_INFO" value="0:1:0x0:0x0:both:1:0:0:1" />
  <parameter name="DEFAULT_RD_CHANNEL" value="-1" />
  <parameter name="PKT_ADDR_H" value="89" />
  <parameter name="PKT_DEST_ID_H" value="115" />
  <parameter name="PKT_ADDR_L" value="72" />
  <parameter name="PKT_DEST_ID_L" value="113" />
  <parameter name="CHANNEL_ID" value="1" />
  <parameter name="TYPE_OF_TRANSACTION" value="both" />
  <parameter name="SECURED_RANGE_PAIRS" value="0" />
  <parameter name="SPAN_OFFSET" value="" />
  <parameter name="ST_DATA_W" value="138" />
  <parameter name="SECURED_RANGE_LIST" value="0" />
  <parameter name="DECODER_TYPE" value="1" />
  <parameter name="PKT_PROTECTION_H" value="119" />
  <parameter name="END_ADDRESS" value="0x0" />
  <parameter name="PKT_PROTECTION_L" value="117" />
  <parameter name="PKT_TRANS_WRITE" value="92" />
  <parameter name="DEFAULT_DESTID" value="0" />
  <parameter name="DESTINATION_ID" value="0" />
  <parameter name="NON_SECURED_TAG" value="1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_router_191/synth/board_altera_merlin_router_191_p7j7u6q.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_router_191/synth/board_altera_merlin_router_191_p7j7u6q.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="board_altera_mm_interconnect_191_qqmhvsy"
     as="router_003,router_004,router_006,router_007,router_008" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_router_191_p7j7u6q"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_traffic_limiter"
   version="19.1"
   name="board_altera_merlin_traffic_limiter_191_kcba44q">
  <parameter name="SYNC_RESET" value="0" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_traffic_limiter_191/synth/altera_merlin_reorder_memory.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_traffic_limiter_191/synth/altera_avalon_st_pipeline_base.v"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_traffic_limiter_191/synth/board_altera_merlin_traffic_limiter_191_kcba44q.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_traffic_limiter_191/synth/altera_merlin_reorder_memory.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_traffic_limiter_191/synth/altera_avalon_st_pipeline_base.v"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_traffic_limiter_191/synth/board_altera_merlin_traffic_limiter_191_kcba44q.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_traffic_limiter/altera_merlin_traffic_limiter_hw.tcl" />
  </sourceFiles>
  <childSourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/iconnect/alt_hiconnect_sc_fifo/alt_hiconnect_sc_fifo_hw.tcl" />
  </childSourceFiles>
  <instantiator
     instantiator="board_altera_mm_interconnect_191_qqmhvsy"
     as="pipe_stage_host_ctrl_m0_limiter" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_traffic_limiter_191_kcba44q"</message>
   <message level="Info" culprit="my_altera_avalon_sc_fifo_dest_id_fifo">"Generating: my_altera_avalon_sc_fifo_dest_id_fifo"</message>
   <message level="Info" culprit="my_alt_hiconnect_sc_fifo_dest_id_fifo">"Generating: my_alt_hiconnect_sc_fifo_dest_id_fifo"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_traffic_limiter_191_eiui2ey"</message>
   <message level="Info" culprit="board">"Generating: board_altera_avalon_sc_fifo_191_e5eqkcq"</message>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_traffic_limiter_191_obycr2q"</message>
   <message level="Info" culprit="board">"Generating: board_alt_hiconnect_sc_fifo_191_7qtmpqq"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_burst_adapter"
   version="19.1"
   name="board_altera_merlin_burst_adapter_191_32tg2fa">
  <parameter
     name="MERLIN_PACKET_FORMAT"
     value="wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)" />
  <parameter name="PKT_TRANS_COMPRESSED_READ" value="54" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/board_altera_merlin_burst_adapter_191_32tg2fa.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_merlin_burst_adapter_uncmpr.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_merlin_burst_adapter_13_1.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_merlin_burst_adapter_new.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_incr_burst_converter.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_wrap_burst_converter.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_default_burst_converter.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_merlin_address_alignment.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_avalon_st_pipeline_stage.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_avalon_st_pipeline_base.v"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/board_altera_merlin_burst_adapter_191_32tg2fa.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_merlin_burst_adapter_uncmpr.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_merlin_burst_adapter_13_1.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_merlin_burst_adapter_new.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_incr_burst_converter.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_wrap_burst_converter.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_default_burst_converter.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_merlin_address_alignment.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_avalon_st_pipeline_stage.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_burst_adapter_191/synth/altera_avalon_st_pipeline_base.v"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_burst_adapter/altera_merlin_burst_adapter_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="board_altera_mm_interconnect_191_qqmhvsy"
     as="board_irq_ctrl_0_IRQ_Mask_Slave_burst_adapter,board_irq_ctrl_0_IRQ_Read_Slave_burst_adapter,kernel_interface_ctrl_burst_adapter" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_burst_adapter_191_32tg2fa"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_demultiplexer"
   version="19.1"
   name="board_altera_merlin_demultiplexer_191_lgtc25y">
  <parameter name="ST_CHANNEL_W" value="8" />
  <parameter name="AUTO_CLK_CLOCK_RATE" value="200000000" />
  <parameter name="VALID_WIDTH" value="1" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="ST_DATA_W" value="138" />
  <parameter name="NUM_OUTPUTS" value="8" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_demultiplexer_191/synth/board_altera_merlin_demultiplexer_191_lgtc25y.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_demultiplexer_191/synth/board_altera_merlin_demultiplexer_191_lgtc25y.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="board_altera_mm_interconnect_191_qqmhvsy"
     as="cmd_demux" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_demultiplexer_191_lgtc25y"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_multiplexer"
   version="19.1"
   name="board_altera_merlin_multiplexer_191_2bsc4nq">
  <parameter name="ST_CHANNEL_W" value="8" />
  <parameter name="ARBITRATION_SHARES" value="1" />
  <parameter name="NUM_INPUTS" value="1" />
  <parameter name="PIPELINE_ARB" value="1" />
  <parameter name="ARBITRATION_SCHEME" value="round-robin" />
  <parameter name="ST_DATA_W" value="138" />
  <parameter name="USE_EXTERNAL_ARB" value="0" />
  <parameter name="PKT_TRANS_LOCK" value="94" />
  <parameter name="SYNC_RESET" value="0" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_multiplexer_191/synth/board_altera_merlin_multiplexer_191_2bsc4nq.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_multiplexer_191/synth/altera_merlin_arbitrator.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_multiplexer_191/synth/board_altera_merlin_multiplexer_191_2bsc4nq.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_multiplexer_191/synth/altera_merlin_arbitrator.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="board_altera_mm_interconnect_191_qqmhvsy"
     as="cmd_mux,cmd_mux_001,cmd_mux_002,cmd_mux_003,cmd_mux_004,cmd_mux_005,cmd_mux_006,cmd_mux_007" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_multiplexer_191_2bsc4nq"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_demultiplexer"
   version="19.1"
   name="board_altera_merlin_demultiplexer_191_wkeid3i">
  <parameter name="ST_CHANNEL_W" value="8" />
  <parameter name="AUTO_CLK_CLOCK_RATE" value="200000000" />
  <parameter name="VALID_WIDTH" value="1" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="ST_DATA_W" value="138" />
  <parameter name="NUM_OUTPUTS" value="1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_demultiplexer_191/synth/board_altera_merlin_demultiplexer_191_wkeid3i.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_demultiplexer_191/synth/board_altera_merlin_demultiplexer_191_wkeid3i.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="board_altera_mm_interconnect_191_qqmhvsy"
     as="rsp_demux,rsp_demux_001,rsp_demux_002,rsp_demux_003,rsp_demux_004,rsp_demux_005,rsp_demux_006,rsp_demux_007" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_demultiplexer_191_wkeid3i"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_multiplexer"
   version="19.1"
   name="board_altera_merlin_multiplexer_191_lg6qpai">
  <parameter name="ST_CHANNEL_W" value="8" />
  <parameter name="ARBITRATION_SHARES" value="1,1,1,1,1,1,1,1" />
  <parameter name="NUM_INPUTS" value="8" />
  <parameter name="PIPELINE_ARB" value="0" />
  <parameter name="ARBITRATION_SCHEME" value="no-arb" />
  <parameter name="ST_DATA_W" value="138" />
  <parameter name="USE_EXTERNAL_ARB" value="0" />
  <parameter name="PKT_TRANS_LOCK" value="94" />
  <parameter name="SYNC_RESET" value="0" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_multiplexer_191/synth/board_altera_merlin_multiplexer_191_lg6qpai.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_multiplexer_191/synth/altera_merlin_arbitrator.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_multiplexer_191/synth/board_altera_merlin_multiplexer_191_lg6qpai.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_multiplexer_191/synth/altera_merlin_arbitrator.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator instantiator="board_altera_mm_interconnect_191_qqmhvsy" as="rsp_mux" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_multiplexer_191_lg6qpai"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_width_adapter"
   version="19.1"
   name="board_altera_merlin_width_adapter_191_vfugsvi">
  <parameter name="OUT_PKT_ORI_BURST_SIZE_H" value="128" />
  <parameter name="OUT_PKT_ORI_BURST_SIZE_L" value="126" />
  <parameter name="IN_PKT_ORI_BURST_SIZE_H" value="92" />
  <parameter
     name="OUT_MERLIN_PACKET_FORMAT"
     value="wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)" />
  <parameter
     name="IN_MERLIN_PACKET_FORMAT"
     value="wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)" />
  <parameter name="IN_PKT_ORI_BURST_SIZE_L" value="90" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_width_adapter_191/synth/board_altera_merlin_width_adapter_191_vfugsvi.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_width_adapter_191/synth/altera_merlin_address_alignment.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_width_adapter_191/synth/altera_merlin_burst_uncompressor.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_width_adapter_191/synth/board_altera_merlin_width_adapter_191_vfugsvi.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_width_adapter_191/synth/altera_merlin_address_alignment.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_width_adapter_191/synth/altera_merlin_burst_uncompressor.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="board_altera_mm_interconnect_191_qqmhvsy"
     as="board_irq_ctrl_0_IRQ_Mask_Slave_rsp_width_adapter,board_irq_ctrl_0_IRQ_Read_Slave_rsp_width_adapter,kernel_interface_ctrl_rsp_width_adapter" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_width_adapter_191_vfugsvi"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_width_adapter"
   version="19.1"
   name="board_altera_merlin_width_adapter_191_w5iwv2q">
  <parameter name="OUT_PKT_ORI_BURST_SIZE_H" value="92" />
  <parameter name="OUT_PKT_ORI_BURST_SIZE_L" value="90" />
  <parameter name="IN_PKT_ORI_BURST_SIZE_H" value="128" />
  <parameter
     name="OUT_MERLIN_PACKET_FORMAT"
     value="wunique(101) domain(100:99) snoop(98:95) barrier(94:93) ori_burst_size(92:90) response_status(89:88) cache(87:84) protection(83:81) thread_id(80) dest_id(79:77) src_id(76:74) qos(73) begin_burst(72) data_sideband(71) addr_sideband(70) burst_type(69:68) burst_size(67:65) burstwrap(64) byte_cnt(63:60) trans_exclusive(59) trans_lock(58) trans_read(57) trans_write(56) trans_posted(55) trans_compressed_read(54) addr(53:36) byteen(35:32) data(31:0)" />
  <parameter
     name="IN_MERLIN_PACKET_FORMAT"
     value="wunique(137) domain(136:135) snoop(134:131) barrier(130:129) ori_burst_size(128:126) response_status(125:124) cache(123:120) protection(119:117) thread_id(116) dest_id(115:113) src_id(112:110) qos(109) begin_burst(108) data_sideband(107) addr_sideband(106) burst_type(105:104) burst_size(103:101) burstwrap(100) byte_cnt(99:96) trans_exclusive(95) trans_lock(94) trans_read(93) trans_write(92) trans_posted(91) trans_compressed_read(90) addr(89:72) byteen(71:64) data(63:0)" />
  <parameter name="IN_PKT_ORI_BURST_SIZE_L" value="126" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_width_adapter_191/synth/board_altera_merlin_width_adapter_191_w5iwv2q.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_width_adapter_191/synth/altera_merlin_address_alignment.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_width_adapter_191/synth/altera_merlin_burst_uncompressor.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_width_adapter_191/synth/board_altera_merlin_width_adapter_191_w5iwv2q.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_width_adapter_191/synth/altera_merlin_address_alignment.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_width_adapter_191/synth/altera_merlin_burst_uncompressor.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="board_altera_mm_interconnect_191_qqmhvsy"
     as="board_irq_ctrl_0_IRQ_Mask_Slave_cmd_width_adapter,board_irq_ctrl_0_IRQ_Read_Slave_cmd_width_adapter,kernel_interface_ctrl_cmd_width_adapter" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_width_adapter_191_w5iwv2q"</message>
  </messages>
 </entity>
 <entity
   kind="altera_avalon_st_pipeline_stage"
   version="19.1"
   name="altera_avalon_st_pipeline_stage">
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_avalon_st_pipeline_stage_191/synth/altera_avalon_st_pipeline_stage.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_avalon_st_pipeline_stage_191/synth/altera_avalon_st_pipeline_base.v"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_avalon_st_pipeline_stage_191/synth/altera_avalon_st_pipeline_stage.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_avalon_st_pipeline_stage_191/synth/altera_avalon_st_pipeline_base.v"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/avalon_st/altera_avalon_st_pipeline_stage/altera_avalon_st_pipeline_stage_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="board_altera_mm_interconnect_191_qqmhvsy"
     as="limiter_pipeline,limiter_pipeline_001,agent_pipeline,agent_pipeline_001,agent_pipeline_002,agent_pipeline_003,agent_pipeline_004,agent_pipeline_005,agent_pipeline_006,agent_pipeline_007,agent_pipeline_008,agent_pipeline_009,agent_pipeline_010,agent_pipeline_011,agent_pipeline_012,agent_pipeline_013,agent_pipeline_014,agent_pipeline_015,mux_pipeline,mux_pipeline_001,mux_pipeline_002,mux_pipeline_003,mux_pipeline_004,mux_pipeline_005,mux_pipeline_006,mux_pipeline_007,mux_pipeline_008,mux_pipeline_009,mux_pipeline_010,mux_pipeline_011,mux_pipeline_012,mux_pipeline_013,mux_pipeline_014,mux_pipeline_015" />
  <messages>
   <message level="Info" culprit="board">"Generating: altera_avalon_st_pipeline_stage"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_traffic_limiter"
   version="19.1"
   name="board_altera_merlin_traffic_limiter_191_eiui2ey">
  <parameter name="FIFO_DEPTH" value="16" />
  <parameter name="USE_PACKETS" value="0" />
  <parameter name="EMPTY_LATENCY" value="1" />
  <parameter name="EXPLICIT_MAXCHANNEL" value="0" />
  <parameter name="EMPTY_WIDTH" value="1" />
  <parameter name="CHANNEL_WIDTH" value="0" />
  <parameter name="USE_ALMOST_FULL_IF" value="0" />
  <parameter name="ENABLE_EXPLICIT_MAXCHANNEL" value="false" />
  <parameter name="SYMBOLS_PER_BEAT" value="1" />
  <parameter name="BITS_PER_SYMBOL" value="6" />
  <parameter name="ERROR_WIDTH" value="0" />
  <parameter name="USE_MEMORY_BLOCKS" value="0" />
  <parameter name="USE_FILL_LEVEL" value="0" />
  <parameter name="USE_ALMOST_EMPTY_IF" value="0" />
  <parameter name="SYNC_RESET" value="0" />
  <parameter name="USE_STORE_FORWARD" value="0" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_traffic_limiter_191/synth/board_altera_merlin_traffic_limiter_191_eiui2ey.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_traffic_limiter_191/synth/board_altera_merlin_traffic_limiter_191_eiui2ey.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </childGeneratedFiles>
  <sourceFiles/>
  <childSourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
  </childSourceFiles>
  <instantiator
     instantiator="board_altera_merlin_traffic_limiter_191_kcba44q"
     as="my_altera_avalon_sc_fifo_dest_id_fifo" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_traffic_limiter_191_eiui2ey"</message>
   <message level="Info" culprit="board">"Generating: board_altera_avalon_sc_fifo_191_e5eqkcq"</message>
  </messages>
 </entity>
 <entity
   kind="altera_avalon_sc_fifo"
   version="19.1"
   name="board_altera_avalon_sc_fifo_191_e5eqkcq">
  <parameter name="EXPLICIT_MAXCHANNEL" value="0" />
  <parameter name="EMPTY_WIDTH" value="1" />
  <parameter name="SYNC_RESET" value="0" />
  <parameter name="ENABLE_EXPLICIT_MAXCHANNEL" value="false" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_avalon_sc_fifo_191/synth/board_altera_avalon_sc_fifo_191_e5eqkcq.v"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_avalon_sc_fifo_191/synth/board_altera_avalon_sc_fifo_191_e5eqkcq.v"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="board_altera_mm_interconnect_191_qqmhvsy"
     as="board_irq_ctrl_0_IRQ_Mask_Slave_agent_rsp_fifo,board_irq_ctrl_0_IRQ_Read_Slave_agent_rsp_fifo,board_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo,ddr_board_ase_0_avmm_pipe_slave_agent_rsp_fifo,kernel_interface_ctrl_agent_rsp_fifo,ddr_board_msgdma_bbb_0_csr_agent_rsp_fifo,ddr_board_msgdma_bbb_1_csr_agent_rsp_fifo,ddr_board_null_dfh_afu_id_agent_rsp_fifo" />
  <instantiator
     instantiator="board_altera_merlin_traffic_limiter_191_eiui2ey"
     as="my_altera_avalon_sc_fifo_dest_id_fifo" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_avalon_sc_fifo_191_e5eqkcq"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_traffic_limiter"
   version="19.1"
   name="board_altera_merlin_traffic_limiter_191_obycr2q">
  <parameter name="IMPL" value="reg" />
  <parameter name="FIFO_DEPTH" value="16" />
  <parameter name="USE_PACKETS" value="0" />
  <parameter name="EMPTY_LATENCY" value="1" />
  <parameter name="ENABLE_POP" value="false" />
  <parameter name="EXPLICIT_MAXCHANNEL" value="0" />
  <parameter name="ALMOST_FULL_THRESHOLD" value="16" />
  <parameter name="CHANNEL_WIDTH" value="0" />
  <parameter name="ENABLE_EXPLICIT_MAXCHANNEL" value="false" />
  <parameter name="ENABLE_STOP" value="false" />
  <parameter name="SYMBOLS_PER_BEAT" value="1" />
  <parameter name="BITS_PER_SYMBOL" value="6" />
  <parameter name="ERROR_WIDTH" value="0" />
  <parameter name="SHOWAHEAD" value="1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_traffic_limiter_191/synth/board_altera_merlin_traffic_limiter_191_obycr2q.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/altera_merlin_traffic_limiter_191/synth/board_altera_merlin_traffic_limiter_191_obycr2q.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </childGeneratedFiles>
  <sourceFiles/>
  <childSourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/iconnect/alt_hiconnect_sc_fifo/alt_hiconnect_sc_fifo_hw.tcl" />
  </childSourceFiles>
  <instantiator
     instantiator="board_altera_merlin_traffic_limiter_191_kcba44q"
     as="my_alt_hiconnect_sc_fifo_dest_id_fifo" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_altera_merlin_traffic_limiter_191_obycr2q"</message>
   <message level="Info" culprit="board">"Generating: board_alt_hiconnect_sc_fifo_191_7qtmpqq"</message>
  </messages>
 </entity>
 <entity
   kind="alt_hiconnect_sc_fifo"
   version="19.1"
   name="board_alt_hiconnect_sc_fifo_191_7qtmpqq">
  <parameter name="ENABLE_STOP" value="false" />
  <parameter name="ENABLE_POP" value="false" />
  <parameter name="EXPLICIT_MAXCHANNEL" value="0" />
  <parameter name="ENABLE_EXPLICIT_MAXCHANNEL" value="false" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/alt_hiconnect_sc_fifo_191/synth/board_alt_hiconnect_sc_fifo_191_7qtmpqq.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/alt_hiconnect_sc_fifo_191/synth/alt_st_infer_scfifo.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/alt_hiconnect_sc_fifo_191/synth/alt_st_mlab_scfifo.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/alt_hiconnect_sc_fifo_191/synth/alt_st_fifo_empty.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/alt_hiconnect_sc_fifo_191/synth/alt_st_mlab_scfifo_a6.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/alt_hiconnect_sc_fifo_191/synth/alt_st_mlab_scfifo_a7.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/alt_hiconnect_sc_fifo_191/synth/alt_st_reg_scfifo.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/alt_hiconnect_sc_fifo_191/synth/board_alt_hiconnect_sc_fifo_191_7qtmpqq.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/alt_hiconnect_sc_fifo_191/synth/alt_st_infer_scfifo.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/alt_hiconnect_sc_fifo_191/synth/alt_st_mlab_scfifo.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/alt_hiconnect_sc_fifo_191/synth/alt_st_fifo_empty.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/alt_hiconnect_sc_fifo_191/synth/alt_st_mlab_scfifo_a6.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/alt_hiconnect_sc_fifo_191/synth/alt_st_mlab_scfifo_a7.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/v1.2.1/hello_world/bin/hello_world_fpga/build/board/alt_hiconnect_sc_fifo_191/synth/alt_st_reg_scfifo.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/iconnect/alt_hiconnect_sc_fifo/alt_hiconnect_sc_fifo_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="board_altera_merlin_traffic_limiter_191_obycr2q"
     as="my_alt_hiconnect_sc_fifo_dest_id_fifo" />
  <messages>
   <message level="Info" culprit="board">"Generating: board_alt_hiconnect_sc_fifo_191_7qtmpqq"</message>
  </messages>
 </entity>
</deploy>
