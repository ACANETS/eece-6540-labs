// board.v

// Generated using ACDS version 19.2 57

`timescale 1 ps / 1 ps
module board (
		output wire         host_kernel_irq_irq,                  //        host_kernel_irq.irq
		input  wire         clk_200_clk,                          //                clk_200.clk
		input  wire         emif_ddr4a_clk_clk,                   //         emif_ddr4a_clk.clk
		input  wire         emif_ddr4b_clk_clk,                   //         emif_ddr4b_clk.clk
		input  wire         global_reset_reset,                   //           global_reset.reset
		output wire         kernel_clk_clk,                       //             kernel_clk.clk
		output wire         kernel_reset_reset_n,                 //           kernel_reset.reset_n
		input  wire         kernel_clk_in_clk,                    //          kernel_clk_in.clk
		input  wire         kernel_cra_waitrequest,               //             kernel_cra.waitrequest
		input  wire [63:0]  kernel_cra_readdata,                  //                       .readdata
		input  wire         kernel_cra_readdatavalid,             //                       .readdatavalid
		output wire [0:0]   kernel_cra_burstcount,                //                       .burstcount
		output wire [63:0]  kernel_cra_writedata,                 //                       .writedata
		output wire [29:0]  kernel_cra_address,                   //                       .address
		output wire         kernel_cra_write,                     //                       .write
		output wire         kernel_cra_read,                      //                       .read
		output wire [7:0]   kernel_cra_byteenable,                //                       .byteenable
		output wire         kernel_cra_debugaccess,               //                       .debugaccess
		input  wire [0:0]   kernel_irq_irq,                       //             kernel_irq.irq
		input  wire         ccip_avmm_requestor_rd_waitrequest,   // ccip_avmm_requestor_rd.waitrequest
		input  wire [511:0] ccip_avmm_requestor_rd_readdata,      //                       .readdata
		input  wire         ccip_avmm_requestor_rd_readdatavalid, //                       .readdatavalid
		output wire [2:0]   ccip_avmm_requestor_rd_burstcount,    //                       .burstcount
		output wire [511:0] ccip_avmm_requestor_rd_writedata,     //                       .writedata
		output wire [47:0]  ccip_avmm_requestor_rd_address,       //                       .address
		output wire         ccip_avmm_requestor_rd_write,         //                       .write
		output wire         ccip_avmm_requestor_rd_read,          //                       .read
		output wire [63:0]  ccip_avmm_requestor_rd_byteenable,    //                       .byteenable
		output wire         ccip_avmm_requestor_rd_debugaccess,   //                       .debugaccess
		input  wire         ccip_avmm_requestor_wr_waitrequest,   // ccip_avmm_requestor_wr.waitrequest
		input  wire [511:0] ccip_avmm_requestor_wr_readdata,      //                       .readdata
		input  wire         ccip_avmm_requestor_wr_readdatavalid, //                       .readdatavalid
		output wire [2:0]   ccip_avmm_requestor_wr_burstcount,    //                       .burstcount
		output wire [511:0] ccip_avmm_requestor_wr_writedata,     //                       .writedata
		output wire [47:0]  ccip_avmm_requestor_wr_address,       //                       .address
		output wire         ccip_avmm_requestor_wr_write,         //                       .write
		output wire         ccip_avmm_requestor_wr_read,          //                       .read
		output wire [63:0]  ccip_avmm_requestor_wr_byteenable,    //                       .byteenable
		output wire         ccip_avmm_requestor_wr_debugaccess,   //                       .debugaccess
		output wire         ccip_avmm_mmio_waitrequest,           //         ccip_avmm_mmio.waitrequest
		output wire [63:0]  ccip_avmm_mmio_readdata,              //                       .readdata
		output wire         ccip_avmm_mmio_readdatavalid,         //                       .readdatavalid
		input  wire [0:0]   ccip_avmm_mmio_burstcount,            //                       .burstcount
		input  wire [63:0]  ccip_avmm_mmio_writedata,             //                       .writedata
		input  wire [17:0]  ccip_avmm_mmio_address,               //                       .address
		input  wire         ccip_avmm_mmio_write,                 //                       .write
		input  wire         ccip_avmm_mmio_read,                  //                       .read
		input  wire [7:0]   ccip_avmm_mmio_byteenable,            //                       .byteenable
		input  wire         ccip_avmm_mmio_debugaccess,           //                       .debugaccess
		output wire         kernel_ddr4a_waitrequest,             //           kernel_ddr4a.waitrequest
		output wire [511:0] kernel_ddr4a_readdata,                //                       .readdata
		output wire         kernel_ddr4a_readdatavalid,           //                       .readdatavalid
		input  wire [4:0]   kernel_ddr4a_burstcount,              //                       .burstcount
		input  wire [511:0] kernel_ddr4a_writedata,               //                       .writedata
		input  wire [31:0]  kernel_ddr4a_address,                 //                       .address
		input  wire         kernel_ddr4a_write,                   //                       .write
		input  wire         kernel_ddr4a_read,                    //                       .read
		input  wire [63:0]  kernel_ddr4a_byteenable,              //                       .byteenable
		input  wire         kernel_ddr4a_debugaccess,             //                       .debugaccess
		input  wire         emif_ddr4a_waitrequest,               //             emif_ddr4a.waitrequest
		input  wire [511:0] emif_ddr4a_readdata,                  //                       .readdata
		input  wire         emif_ddr4a_readdatavalid,             //                       .readdatavalid
		output wire [6:0]   emif_ddr4a_burstcount,                //                       .burstcount
		output wire [511:0] emif_ddr4a_writedata,                 //                       .writedata
		output wire [31:0]  emif_ddr4a_address,                   //                       .address
		output wire         emif_ddr4a_write,                     //                       .write
		output wire         emif_ddr4a_read,                      //                       .read
		output wire [63:0]  emif_ddr4a_byteenable,                //                       .byteenable
		output wire         emif_ddr4a_debugaccess,               //                       .debugaccess
		output wire         kernel_ddr4b_waitrequest,             //           kernel_ddr4b.waitrequest
		output wire [511:0] kernel_ddr4b_readdata,                //                       .readdata
		output wire         kernel_ddr4b_readdatavalid,           //                       .readdatavalid
		input  wire [4:0]   kernel_ddr4b_burstcount,              //                       .burstcount
		input  wire [511:0] kernel_ddr4b_writedata,               //                       .writedata
		input  wire [31:0]  kernel_ddr4b_address,                 //                       .address
		input  wire         kernel_ddr4b_write,                   //                       .write
		input  wire         kernel_ddr4b_read,                    //                       .read
		input  wire [63:0]  kernel_ddr4b_byteenable,              //                       .byteenable
		input  wire         kernel_ddr4b_debugaccess,             //                       .debugaccess
		input  wire         emif_ddr4b_waitrequest,               //             emif_ddr4b.waitrequest
		input  wire [511:0] emif_ddr4b_readdata,                  //                       .readdata
		input  wire         emif_ddr4b_readdatavalid,             //                       .readdatavalid
		output wire [6:0]   emif_ddr4b_burstcount,                //                       .burstcount
		output wire [511:0] emif_ddr4b_writedata,                 //                       .writedata
		output wire [31:0]  emif_ddr4b_address,                   //                       .address
		output wire         emif_ddr4b_write,                     //                       .write
		output wire         emif_ddr4b_read,                      //                       .read
		output wire [63:0]  emif_ddr4b_byteenable,                //                       .byteenable
		output wire         emif_ddr4b_debugaccess,               //                       .debugaccess
		output wire [32:0]  acl_internal_snoop_data,              //     acl_internal_snoop.data
		output wire         acl_internal_snoop_valid,             //                       .valid
		input  wire         acl_internal_snoop_ready,             //                       .ready
		output wire         msgdma_bbb_0_dma_irq_irq,             //   msgdma_bbb_0_dma_irq.irq
		output wire         msgdma_bbb_1_dma_irq_irq              //   msgdma_bbb_1_dma_irq.irq
	);

	wire          ddr_board_host_rd_waitrequest;                                       // pipe_stage_dma_host_rd:s0_waitrequest -> ddr_board:host_rd_waitrequest
	wire  [511:0] ddr_board_host_rd_readdata;                                          // pipe_stage_dma_host_rd:s0_readdata -> ddr_board:host_rd_readdata
	wire          ddr_board_host_rd_debugaccess;                                       // ddr_board:host_rd_debugaccess -> pipe_stage_dma_host_rd:s0_debugaccess
	wire   [47:0] ddr_board_host_rd_address;                                           // ddr_board:host_rd_address -> pipe_stage_dma_host_rd:s0_address
	wire          ddr_board_host_rd_read;                                              // ddr_board:host_rd_read -> pipe_stage_dma_host_rd:s0_read
	wire   [63:0] ddr_board_host_rd_byteenable;                                        // ddr_board:host_rd_byteenable -> pipe_stage_dma_host_rd:s0_byteenable
	wire          ddr_board_host_rd_readdatavalid;                                     // pipe_stage_dma_host_rd:s0_readdatavalid -> ddr_board:host_rd_readdatavalid
	wire  [511:0] ddr_board_host_rd_writedata;                                         // ddr_board:host_rd_writedata -> pipe_stage_dma_host_rd:s0_writedata
	wire          ddr_board_host_rd_write;                                             // ddr_board:host_rd_write -> pipe_stage_dma_host_rd:s0_write
	wire    [2:0] ddr_board_host_rd_burstcount;                                        // ddr_board:host_rd_burstcount -> pipe_stage_dma_host_rd:s0_burstcount
	wire          clk_200_out_clk_clk;                                                 // clk_200:out_clk -> [board_afu_id_avmm_slave_0:clk, board_irq_ctrl_0:Clk_i, ddr_board:host_clk_clk, global_reset_in:clk, irq_mapper:clk, irq_synchronizer:sender_clk, kernel_interface:clk_clk, mm_interconnect_1:clk_200_out_clk_clk, mm_interconnect_2:clk_200_out_clk_clk, pipe_stage_dma_host_rd:clk, pipe_stage_dma_host_wr:clk, pipe_stage_host_ctrl:clk]
	wire          kernel_clk_in_out_clk_clk;                                           // kernel_clk_in:out_clk -> [ddr_board:kernel_clk_clk, irq_synchronizer:receiver_clk, kernel_clk_export:in_clk, kernel_interface:kernel_clk_clk, rst_controller:clk]
	wire          emif_ddr4a_clk_out_clk_clk;                                          // emif_ddr4a_clk:out_clk -> ddr_board:ddr_clk_a_clk
	wire          emif_ddr4b_clk_out_clk_clk;                                          // emif_ddr4b_clk:out_clk -> ddr_board:ddr_clk_b_clk
	wire    [1:0] kernel_interface_acl_bsp_memorg_host0x018_mode;                      // kernel_interface:acl_bsp_memorg_host0x018_mode -> ddr_board:acl_bsp_memorg_host_mode
	wire          kernel_interface_kernel_reset_reset;                                 // kernel_interface:kernel_reset_reset_n -> [ddr_board:kernel_reset_reset, kernel_clk_export:reset_n]
	wire          global_reset_in_out_reset_reset;                                     // global_reset_in:out_reset -> [board_afu_id_avmm_slave_0:reset, board_irq_ctrl_0:Rstn_i, ddr_board:global_reset_reset, irq_mapper:reset, irq_synchronizer:sender_reset, kernel_interface:reset_reset_n, kernel_interface:sw_reset_in_reset, mm_interconnect_1:pipe_stage_dma_host_wr_reset_reset_bridge_in_reset_reset, mm_interconnect_2:pipe_stage_host_ctrl_reset_reset_bridge_in_reset_reset, pipe_stage_dma_host_rd:reset, pipe_stage_dma_host_wr:reset, pipe_stage_host_ctrl:reset, rst_controller:reset_in0]
	wire          ddr_board_host_wr_waitrequest;                                       // mm_interconnect_1:ddr_board_host_wr_waitrequest -> ddr_board:host_wr_waitrequest
	wire  [511:0] ddr_board_host_wr_readdata;                                          // mm_interconnect_1:ddr_board_host_wr_readdata -> ddr_board:host_wr_readdata
	wire          ddr_board_host_wr_debugaccess;                                       // ddr_board:host_wr_debugaccess -> mm_interconnect_1:ddr_board_host_wr_debugaccess
	wire   [48:0] ddr_board_host_wr_address;                                           // ddr_board:host_wr_address -> mm_interconnect_1:ddr_board_host_wr_address
	wire          ddr_board_host_wr_read;                                              // ddr_board:host_wr_read -> mm_interconnect_1:ddr_board_host_wr_read
	wire   [63:0] ddr_board_host_wr_byteenable;                                        // ddr_board:host_wr_byteenable -> mm_interconnect_1:ddr_board_host_wr_byteenable
	wire          ddr_board_host_wr_readdatavalid;                                     // mm_interconnect_1:ddr_board_host_wr_readdatavalid -> ddr_board:host_wr_readdatavalid
	wire  [511:0] ddr_board_host_wr_writedata;                                         // ddr_board:host_wr_writedata -> mm_interconnect_1:ddr_board_host_wr_writedata
	wire          ddr_board_host_wr_write;                                             // ddr_board:host_wr_write -> mm_interconnect_1:ddr_board_host_wr_write
	wire    [2:0] ddr_board_host_wr_burstcount;                                        // ddr_board:host_wr_burstcount -> mm_interconnect_1:ddr_board_host_wr_burstcount
	wire  [511:0] mm_interconnect_1_pipe_stage_dma_host_wr_s0_readdata;                // pipe_stage_dma_host_wr:s0_readdata -> mm_interconnect_1:pipe_stage_dma_host_wr_s0_readdata
	wire          mm_interconnect_1_pipe_stage_dma_host_wr_s0_waitrequest;             // pipe_stage_dma_host_wr:s0_waitrequest -> mm_interconnect_1:pipe_stage_dma_host_wr_s0_waitrequest
	wire          mm_interconnect_1_pipe_stage_dma_host_wr_s0_debugaccess;             // mm_interconnect_1:pipe_stage_dma_host_wr_s0_debugaccess -> pipe_stage_dma_host_wr:s0_debugaccess
	wire   [47:0] mm_interconnect_1_pipe_stage_dma_host_wr_s0_address;                 // mm_interconnect_1:pipe_stage_dma_host_wr_s0_address -> pipe_stage_dma_host_wr:s0_address
	wire          mm_interconnect_1_pipe_stage_dma_host_wr_s0_read;                    // mm_interconnect_1:pipe_stage_dma_host_wr_s0_read -> pipe_stage_dma_host_wr:s0_read
	wire   [63:0] mm_interconnect_1_pipe_stage_dma_host_wr_s0_byteenable;              // mm_interconnect_1:pipe_stage_dma_host_wr_s0_byteenable -> pipe_stage_dma_host_wr:s0_byteenable
	wire          mm_interconnect_1_pipe_stage_dma_host_wr_s0_readdatavalid;           // pipe_stage_dma_host_wr:s0_readdatavalid -> mm_interconnect_1:pipe_stage_dma_host_wr_s0_readdatavalid
	wire          mm_interconnect_1_pipe_stage_dma_host_wr_s0_write;                   // mm_interconnect_1:pipe_stage_dma_host_wr_s0_write -> pipe_stage_dma_host_wr:s0_write
	wire  [511:0] mm_interconnect_1_pipe_stage_dma_host_wr_s0_writedata;               // mm_interconnect_1:pipe_stage_dma_host_wr_s0_writedata -> pipe_stage_dma_host_wr:s0_writedata
	wire    [2:0] mm_interconnect_1_pipe_stage_dma_host_wr_s0_burstcount;              // mm_interconnect_1:pipe_stage_dma_host_wr_s0_burstcount -> pipe_stage_dma_host_wr:s0_burstcount
	wire          pipe_stage_host_ctrl_m0_waitrequest;                                 // mm_interconnect_2:pipe_stage_host_ctrl_m0_waitrequest -> pipe_stage_host_ctrl:m0_waitrequest
	wire   [63:0] pipe_stage_host_ctrl_m0_readdata;                                    // mm_interconnect_2:pipe_stage_host_ctrl_m0_readdata -> pipe_stage_host_ctrl:m0_readdata
	wire          pipe_stage_host_ctrl_m0_debugaccess;                                 // pipe_stage_host_ctrl:m0_debugaccess -> mm_interconnect_2:pipe_stage_host_ctrl_m0_debugaccess
	wire   [17:0] pipe_stage_host_ctrl_m0_address;                                     // pipe_stage_host_ctrl:m0_address -> mm_interconnect_2:pipe_stage_host_ctrl_m0_address
	wire          pipe_stage_host_ctrl_m0_read;                                        // pipe_stage_host_ctrl:m0_read -> mm_interconnect_2:pipe_stage_host_ctrl_m0_read
	wire    [7:0] pipe_stage_host_ctrl_m0_byteenable;                                  // pipe_stage_host_ctrl:m0_byteenable -> mm_interconnect_2:pipe_stage_host_ctrl_m0_byteenable
	wire          pipe_stage_host_ctrl_m0_readdatavalid;                               // mm_interconnect_2:pipe_stage_host_ctrl_m0_readdatavalid -> pipe_stage_host_ctrl:m0_readdatavalid
	wire   [63:0] pipe_stage_host_ctrl_m0_writedata;                                   // pipe_stage_host_ctrl:m0_writedata -> mm_interconnect_2:pipe_stage_host_ctrl_m0_writedata
	wire          pipe_stage_host_ctrl_m0_write;                                       // pipe_stage_host_ctrl:m0_write -> mm_interconnect_2:pipe_stage_host_ctrl_m0_write
	wire    [0:0] pipe_stage_host_ctrl_m0_burstcount;                                  // pipe_stage_host_ctrl:m0_burstcount -> mm_interconnect_2:pipe_stage_host_ctrl_m0_burstcount
	wire   [31:0] mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_readdata;          // board_irq_ctrl_0:MaskReaddata_o -> mm_interconnect_2:board_irq_ctrl_0_IRQ_Mask_Slave_readdata
	wire          mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_waitrequest;       // board_irq_ctrl_0:MaskWaitrequest_o -> mm_interconnect_2:board_irq_ctrl_0_IRQ_Mask_Slave_waitrequest
	wire          mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_read;              // mm_interconnect_2:board_irq_ctrl_0_IRQ_Mask_Slave_read -> board_irq_ctrl_0:MaskRead_i
	wire    [3:0] mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_byteenable;        // mm_interconnect_2:board_irq_ctrl_0_IRQ_Mask_Slave_byteenable -> board_irq_ctrl_0:MaskByteenable_i
	wire          mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_write;             // mm_interconnect_2:board_irq_ctrl_0_IRQ_Mask_Slave_write -> board_irq_ctrl_0:MaskWrite_i
	wire   [31:0] mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_writedata;         // mm_interconnect_2:board_irq_ctrl_0_IRQ_Mask_Slave_writedata -> board_irq_ctrl_0:MaskWritedata_i
	wire   [31:0] mm_interconnect_2_board_irq_ctrl_0_irq_read_slave_readdata;          // board_irq_ctrl_0:IrqReadData_o -> mm_interconnect_2:board_irq_ctrl_0_IRQ_Read_Slave_readdata
	wire          mm_interconnect_2_board_irq_ctrl_0_irq_read_slave_read;              // mm_interconnect_2:board_irq_ctrl_0_IRQ_Read_Slave_read -> board_irq_ctrl_0:IrqRead_i
	wire   [63:0] mm_interconnect_2_board_afu_id_avmm_slave_0_afu_cfg_slave_readdata;  // board_afu_id_avmm_slave_0:avmm_readdata -> mm_interconnect_2:board_afu_id_avmm_slave_0_afu_cfg_slave_readdata
	wire    [2:0] mm_interconnect_2_board_afu_id_avmm_slave_0_afu_cfg_slave_address;   // mm_interconnect_2:board_afu_id_avmm_slave_0_afu_cfg_slave_address -> board_afu_id_avmm_slave_0:avmm_address
	wire          mm_interconnect_2_board_afu_id_avmm_slave_0_afu_cfg_slave_read;      // mm_interconnect_2:board_afu_id_avmm_slave_0_afu_cfg_slave_read -> board_afu_id_avmm_slave_0:avmm_read
	wire          mm_interconnect_2_board_afu_id_avmm_slave_0_afu_cfg_slave_write;     // mm_interconnect_2:board_afu_id_avmm_slave_0_afu_cfg_slave_write -> board_afu_id_avmm_slave_0:avmm_write
	wire   [63:0] mm_interconnect_2_board_afu_id_avmm_slave_0_afu_cfg_slave_writedata; // mm_interconnect_2:board_afu_id_avmm_slave_0_afu_cfg_slave_writedata -> board_afu_id_avmm_slave_0:avmm_writedata
	wire   [63:0] mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_readdata;          // ddr_board:ase_0_avmm_pipe_slave_readdata -> mm_interconnect_2:ddr_board_ase_0_avmm_pipe_slave_readdata
	wire          mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_waitrequest;       // ddr_board:ase_0_avmm_pipe_slave_waitrequest -> mm_interconnect_2:ddr_board_ase_0_avmm_pipe_slave_waitrequest
	wire          mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_debugaccess;       // mm_interconnect_2:ddr_board_ase_0_avmm_pipe_slave_debugaccess -> ddr_board:ase_0_avmm_pipe_slave_debugaccess
	wire   [12:0] mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_address;           // mm_interconnect_2:ddr_board_ase_0_avmm_pipe_slave_address -> ddr_board:ase_0_avmm_pipe_slave_address
	wire          mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_read;              // mm_interconnect_2:ddr_board_ase_0_avmm_pipe_slave_read -> ddr_board:ase_0_avmm_pipe_slave_read
	wire    [7:0] mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_byteenable;        // mm_interconnect_2:ddr_board_ase_0_avmm_pipe_slave_byteenable -> ddr_board:ase_0_avmm_pipe_slave_byteenable
	wire          mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_readdatavalid;     // ddr_board:ase_0_avmm_pipe_slave_readdatavalid -> mm_interconnect_2:ddr_board_ase_0_avmm_pipe_slave_readdatavalid
	wire          mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_write;             // mm_interconnect_2:ddr_board_ase_0_avmm_pipe_slave_write -> ddr_board:ase_0_avmm_pipe_slave_write
	wire   [63:0] mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_writedata;         // mm_interconnect_2:ddr_board_ase_0_avmm_pipe_slave_writedata -> ddr_board:ase_0_avmm_pipe_slave_writedata
	wire    [0:0] mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_burstcount;        // mm_interconnect_2:ddr_board_ase_0_avmm_pipe_slave_burstcount -> ddr_board:ase_0_avmm_pipe_slave_burstcount
	wire   [31:0] mm_interconnect_2_kernel_interface_ctrl_readdata;                    // kernel_interface:ctrl_readdata -> mm_interconnect_2:kernel_interface_ctrl_readdata
	wire          mm_interconnect_2_kernel_interface_ctrl_waitrequest;                 // kernel_interface:ctrl_waitrequest -> mm_interconnect_2:kernel_interface_ctrl_waitrequest
	wire          mm_interconnect_2_kernel_interface_ctrl_debugaccess;                 // mm_interconnect_2:kernel_interface_ctrl_debugaccess -> kernel_interface:ctrl_debugaccess
	wire   [13:0] mm_interconnect_2_kernel_interface_ctrl_address;                     // mm_interconnect_2:kernel_interface_ctrl_address -> kernel_interface:ctrl_address
	wire          mm_interconnect_2_kernel_interface_ctrl_read;                        // mm_interconnect_2:kernel_interface_ctrl_read -> kernel_interface:ctrl_read
	wire    [3:0] mm_interconnect_2_kernel_interface_ctrl_byteenable;                  // mm_interconnect_2:kernel_interface_ctrl_byteenable -> kernel_interface:ctrl_byteenable
	wire          mm_interconnect_2_kernel_interface_ctrl_readdatavalid;               // kernel_interface:ctrl_readdatavalid -> mm_interconnect_2:kernel_interface_ctrl_readdatavalid
	wire          mm_interconnect_2_kernel_interface_ctrl_write;                       // mm_interconnect_2:kernel_interface_ctrl_write -> kernel_interface:ctrl_write
	wire   [31:0] mm_interconnect_2_kernel_interface_ctrl_writedata;                   // mm_interconnect_2:kernel_interface_ctrl_writedata -> kernel_interface:ctrl_writedata
	wire    [0:0] mm_interconnect_2_kernel_interface_ctrl_burstcount;                  // mm_interconnect_2:kernel_interface_ctrl_burstcount -> kernel_interface:ctrl_burstcount
	wire   [63:0] mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_readdata;               // ddr_board:msgdma_bbb_0_csr_readdata -> mm_interconnect_2:ddr_board_msgdma_bbb_0_csr_readdata
	wire          mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_waitrequest;            // ddr_board:msgdma_bbb_0_csr_waitrequest -> mm_interconnect_2:ddr_board_msgdma_bbb_0_csr_waitrequest
	wire          mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_debugaccess;            // mm_interconnect_2:ddr_board_msgdma_bbb_0_csr_debugaccess -> ddr_board:msgdma_bbb_0_csr_debugaccess
	wire    [6:0] mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_address;                // mm_interconnect_2:ddr_board_msgdma_bbb_0_csr_address -> ddr_board:msgdma_bbb_0_csr_address
	wire          mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_read;                   // mm_interconnect_2:ddr_board_msgdma_bbb_0_csr_read -> ddr_board:msgdma_bbb_0_csr_read
	wire    [7:0] mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_byteenable;             // mm_interconnect_2:ddr_board_msgdma_bbb_0_csr_byteenable -> ddr_board:msgdma_bbb_0_csr_byteenable
	wire          mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_readdatavalid;          // ddr_board:msgdma_bbb_0_csr_readdatavalid -> mm_interconnect_2:ddr_board_msgdma_bbb_0_csr_readdatavalid
	wire          mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_write;                  // mm_interconnect_2:ddr_board_msgdma_bbb_0_csr_write -> ddr_board:msgdma_bbb_0_csr_write
	wire   [63:0] mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_writedata;              // mm_interconnect_2:ddr_board_msgdma_bbb_0_csr_writedata -> ddr_board:msgdma_bbb_0_csr_writedata
	wire    [0:0] mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_burstcount;             // mm_interconnect_2:ddr_board_msgdma_bbb_0_csr_burstcount -> ddr_board:msgdma_bbb_0_csr_burstcount
	wire   [63:0] mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_readdata;               // ddr_board:msgdma_bbb_1_csr_readdata -> mm_interconnect_2:ddr_board_msgdma_bbb_1_csr_readdata
	wire          mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_waitrequest;            // ddr_board:msgdma_bbb_1_csr_waitrequest -> mm_interconnect_2:ddr_board_msgdma_bbb_1_csr_waitrequest
	wire          mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_debugaccess;            // mm_interconnect_2:ddr_board_msgdma_bbb_1_csr_debugaccess -> ddr_board:msgdma_bbb_1_csr_debugaccess
	wire    [6:0] mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_address;                // mm_interconnect_2:ddr_board_msgdma_bbb_1_csr_address -> ddr_board:msgdma_bbb_1_csr_address
	wire          mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_read;                   // mm_interconnect_2:ddr_board_msgdma_bbb_1_csr_read -> ddr_board:msgdma_bbb_1_csr_read
	wire    [7:0] mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_byteenable;             // mm_interconnect_2:ddr_board_msgdma_bbb_1_csr_byteenable -> ddr_board:msgdma_bbb_1_csr_byteenable
	wire          mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_readdatavalid;          // ddr_board:msgdma_bbb_1_csr_readdatavalid -> mm_interconnect_2:ddr_board_msgdma_bbb_1_csr_readdatavalid
	wire          mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_write;                  // mm_interconnect_2:ddr_board_msgdma_bbb_1_csr_write -> ddr_board:msgdma_bbb_1_csr_write
	wire   [63:0] mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_writedata;              // mm_interconnect_2:ddr_board_msgdma_bbb_1_csr_writedata -> ddr_board:msgdma_bbb_1_csr_writedata
	wire    [0:0] mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_burstcount;             // mm_interconnect_2:ddr_board_msgdma_bbb_1_csr_burstcount -> ddr_board:msgdma_bbb_1_csr_burstcount
	wire   [63:0] mm_interconnect_2_ddr_board_null_dfh_afu_id_readdata;                // ddr_board:null_dfh_afu_id_readdata -> mm_interconnect_2:ddr_board_null_dfh_afu_id_readdata
	wire    [2:0] mm_interconnect_2_ddr_board_null_dfh_afu_id_address;                 // mm_interconnect_2:ddr_board_null_dfh_afu_id_address -> ddr_board:null_dfh_afu_id_address
	wire          mm_interconnect_2_ddr_board_null_dfh_afu_id_read;                    // mm_interconnect_2:ddr_board_null_dfh_afu_id_read -> ddr_board:null_dfh_afu_id_read
	wire          mm_interconnect_2_ddr_board_null_dfh_afu_id_write;                   // mm_interconnect_2:ddr_board_null_dfh_afu_id_write -> ddr_board:null_dfh_afu_id_write
	wire   [63:0] mm_interconnect_2_ddr_board_null_dfh_afu_id_writedata;               // mm_interconnect_2:ddr_board_null_dfh_afu_id_writedata -> ddr_board:null_dfh_afu_id_writedata
	wire   [31:0] board_irq_ctrl_0_interrupt_receiver_irq;                             // irq_mapper:sender_irq -> board_irq_ctrl_0:Irq_i
	wire          irq_mapper_receiver0_irq;                                            // irq_synchronizer:sender_irq -> irq_mapper:receiver0_irq
	wire    [0:0] irq_synchronizer_receiver_irq;                                       // kernel_interface:kernel_irq_to_host_irq -> irq_synchronizer:receiver_irq
	wire          rst_controller_reset_out_reset;                                      // rst_controller:reset_out -> irq_synchronizer:receiver_reset

	board_afu_id_avmm_slave_0 board_afu_id_avmm_slave_0 (
		.avmm_readdata  (mm_interconnect_2_board_afu_id_avmm_slave_0_afu_cfg_slave_readdata),  //  output,  width = 64, afu_cfg_slave.readdata
		.avmm_writedata (mm_interconnect_2_board_afu_id_avmm_slave_0_afu_cfg_slave_writedata), //   input,  width = 64,              .writedata
		.avmm_address   (mm_interconnect_2_board_afu_id_avmm_slave_0_afu_cfg_slave_address),   //   input,   width = 3,              .address
		.avmm_write     (mm_interconnect_2_board_afu_id_avmm_slave_0_afu_cfg_slave_write),     //   input,   width = 1,              .write
		.avmm_read      (mm_interconnect_2_board_afu_id_avmm_slave_0_afu_cfg_slave_read),      //   input,   width = 1,              .read
		.clk            (clk_200_out_clk_clk),                                                 //   input,   width = 1,         clock.clk
		.reset          (global_reset_in_out_reset_reset)                                      //   input,   width = 1,         reset.reset
	);

	board_irq_ctrl_0 board_irq_ctrl_0 (
		.Clk_i             (clk_200_out_clk_clk),                                           //   input,   width = 1,              Clock.clk
		.MaskWrite_i       (mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_write),       //   input,   width = 1,     IRQ_Mask_Slave.write
		.MaskWritedata_i   (mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_writedata),   //   input,  width = 32,                   .writedata
		.MaskByteenable_i  (mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_byteenable),  //   input,   width = 4,                   .byteenable
		.MaskRead_i        (mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_read),        //   input,   width = 1,                   .read
		.MaskReaddata_o    (mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_readdata),    //  output,  width = 32,                   .readdata
		.MaskWaitrequest_o (mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_waitrequest), //  output,   width = 1,                   .waitrequest
		.IrqRead_i         (mm_interconnect_2_board_irq_ctrl_0_irq_read_slave_read),        //   input,   width = 1,     IRQ_Read_Slave.read
		.IrqReadData_o     (mm_interconnect_2_board_irq_ctrl_0_irq_read_slave_readdata),    //  output,  width = 32,                   .readdata
		.Rstn_i            (~global_reset_in_out_reset_reset),                              //   input,   width = 1,             Resetn.reset_n
		.Irq_i             (board_irq_ctrl_0_interrupt_receiver_irq),                       //   input,  width = 32, interrupt_receiver.irq
		.Irq_o             (host_kernel_irq_irq)                                            //  output,   width = 1,   interrupt_sender.irq
	);

	board_clk_200 clk_200 (
		.in_clk  (clk_200_clk),         //   input,  width = 1,  in_clk.clk
		.out_clk (clk_200_out_clk_clk)  //  output,  width = 1, out_clk.clk
	);

	board_clock_bridge_0 emif_ddr4a_clk (
		.in_clk  (emif_ddr4a_clk_clk),         //   input,  width = 1,  in_clk.clk
		.out_clk (emif_ddr4a_clk_out_clk_clk)  //  output,  width = 1, out_clk.clk
	);

	board_clock_bridge_1 emif_ddr4b_clk (
		.in_clk  (emif_ddr4b_clk_clk),         //   input,  width = 1,  in_clk.clk
		.out_clk (emif_ddr4b_clk_out_clk_clk)  //  output,  width = 1, out_clk.clk
	);

	board_global_reset_in global_reset_in (
		.clk       (clk_200_out_clk_clk),             //   input,  width = 1,       clk.clk
		.in_reset  (global_reset_reset),              //   input,  width = 1,  in_reset.reset
		.out_reset (global_reset_in_out_reset_reset)  //  output,  width = 1, out_reset.reset
	);

	board_kernel_clk_export kernel_clk_export (
		.clk_out     (kernel_clk_clk),                      //  output,  width = 1,          clk.clk
		.in_clk      (kernel_clk_in_out_clk_clk),           //   input,  width = 1,       clk_in.clk
		.reset_n     (kernel_interface_kernel_reset_reset), //   input,  width = 1, clk_in_reset.reset_n
		.reset_n_out (kernel_reset_reset_n)                 //  output,  width = 1,    clk_reset.reset_n
	);

	board_kernel_clk_in kernel_clk_in (
		.in_clk  (kernel_clk_in_clk),         //   input,  width = 1,  in_clk.clk
		.out_clk (kernel_clk_in_out_clk_clk)  //  output,  width = 1, out_clk.clk
	);

	board_kernel_interface kernel_interface (
		.acl_bsp_memorg_host0x018_mode (kernel_interface_acl_bsp_memorg_host0x018_mode),        //  output,   width = 2, acl_bsp_memorg_host0x018.mode
		.clk_clk                       (clk_200_out_clk_clk),                                   //   input,   width = 1,                      clk.clk
		.ctrl_waitrequest              (mm_interconnect_2_kernel_interface_ctrl_waitrequest),   //  output,   width = 1,                     ctrl.waitrequest
		.ctrl_readdata                 (mm_interconnect_2_kernel_interface_ctrl_readdata),      //  output,  width = 32,                         .readdata
		.ctrl_readdatavalid            (mm_interconnect_2_kernel_interface_ctrl_readdatavalid), //  output,   width = 1,                         .readdatavalid
		.ctrl_burstcount               (mm_interconnect_2_kernel_interface_ctrl_burstcount),    //   input,   width = 1,                         .burstcount
		.ctrl_writedata                (mm_interconnect_2_kernel_interface_ctrl_writedata),     //   input,  width = 32,                         .writedata
		.ctrl_address                  (mm_interconnect_2_kernel_interface_ctrl_address),       //   input,  width = 14,                         .address
		.ctrl_write                    (mm_interconnect_2_kernel_interface_ctrl_write),         //   input,   width = 1,                         .write
		.ctrl_read                     (mm_interconnect_2_kernel_interface_ctrl_read),          //   input,   width = 1,                         .read
		.ctrl_byteenable               (mm_interconnect_2_kernel_interface_ctrl_byteenable),    //   input,   width = 4,                         .byteenable
		.ctrl_debugaccess              (mm_interconnect_2_kernel_interface_ctrl_debugaccess),   //   input,   width = 1,                         .debugaccess
		.kernel_clk_clk                (kernel_clk_in_out_clk_clk),                             //   input,   width = 1,               kernel_clk.clk
		.kernel_cra_waitrequest        (kernel_cra_waitrequest),                                //   input,   width = 1,               kernel_cra.waitrequest
		.kernel_cra_readdata           (kernel_cra_readdata),                                   //   input,  width = 64,                         .readdata
		.kernel_cra_readdatavalid      (kernel_cra_readdatavalid),                              //   input,   width = 1,                         .readdatavalid
		.kernel_cra_burstcount         (kernel_cra_burstcount),                                 //  output,   width = 1,                         .burstcount
		.kernel_cra_writedata          (kernel_cra_writedata),                                  //  output,  width = 64,                         .writedata
		.kernel_cra_address            (kernel_cra_address),                                    //  output,  width = 30,                         .address
		.kernel_cra_write              (kernel_cra_write),                                      //  output,   width = 1,                         .write
		.kernel_cra_read               (kernel_cra_read),                                       //  output,   width = 1,                         .read
		.kernel_cra_byteenable         (kernel_cra_byteenable),                                 //  output,   width = 8,                         .byteenable
		.kernel_cra_debugaccess        (kernel_cra_debugaccess),                                //  output,   width = 1,                         .debugaccess
		.kernel_irq_from_kernel_irq    (kernel_irq_irq),                                        //   input,   width = 1,   kernel_irq_from_kernel.irq
		.kernel_irq_to_host_irq        (irq_synchronizer_receiver_irq),                         //  output,   width = 1,       kernel_irq_to_host.irq
		.kernel_reset_reset_n          (kernel_interface_kernel_reset_reset),                   //  output,   width = 1,             kernel_reset.reset_n
		.reset_reset_n                 (~global_reset_in_out_reset_reset),                      //   input,   width = 1,                    reset.reset_n
		.sw_reset_export_reset_n       (),                                                      //  output,   width = 1,          sw_reset_export.reset_n
		.sw_reset_in_reset             (global_reset_in_out_reset_reset)                        //   input,   width = 1,              sw_reset_in.reset
	);

	pipe_stage_msgdma_csr_0 pipe_stage_dma_host_rd (
		.clk              (clk_200_out_clk_clk),                  //   input,    width = 1,   clk.clk
		.m0_waitrequest   (ccip_avmm_requestor_rd_waitrequest),   //   input,    width = 1,    m0.waitrequest
		.m0_readdata      (ccip_avmm_requestor_rd_readdata),      //   input,  width = 512,      .readdata
		.m0_readdatavalid (ccip_avmm_requestor_rd_readdatavalid), //   input,    width = 1,      .readdatavalid
		.m0_burstcount    (ccip_avmm_requestor_rd_burstcount),    //  output,    width = 3,      .burstcount
		.m0_writedata     (ccip_avmm_requestor_rd_writedata),     //  output,  width = 512,      .writedata
		.m0_address       (ccip_avmm_requestor_rd_address),       //  output,   width = 48,      .address
		.m0_write         (ccip_avmm_requestor_rd_write),         //  output,    width = 1,      .write
		.m0_read          (ccip_avmm_requestor_rd_read),          //  output,    width = 1,      .read
		.m0_byteenable    (ccip_avmm_requestor_rd_byteenable),    //  output,   width = 64,      .byteenable
		.m0_debugaccess   (ccip_avmm_requestor_rd_debugaccess),   //  output,    width = 1,      .debugaccess
		.reset            (global_reset_in_out_reset_reset),      //   input,    width = 1, reset.reset
		.s0_waitrequest   (ddr_board_host_rd_waitrequest),        //  output,    width = 1,    s0.waitrequest
		.s0_readdata      (ddr_board_host_rd_readdata),           //  output,  width = 512,      .readdata
		.s0_readdatavalid (ddr_board_host_rd_readdatavalid),      //  output,    width = 1,      .readdatavalid
		.s0_burstcount    (ddr_board_host_rd_burstcount),         //   input,    width = 3,      .burstcount
		.s0_writedata     (ddr_board_host_rd_writedata),          //   input,  width = 512,      .writedata
		.s0_address       (ddr_board_host_rd_address),            //   input,   width = 48,      .address
		.s0_write         (ddr_board_host_rd_write),              //   input,    width = 1,      .write
		.s0_read          (ddr_board_host_rd_read),               //   input,    width = 1,      .read
		.s0_byteenable    (ddr_board_host_rd_byteenable),         //   input,   width = 64,      .byteenable
		.s0_debugaccess   (ddr_board_host_rd_debugaccess)         //   input,    width = 1,      .debugaccess
	);

	pipe_stage_dma_host_rd_0 pipe_stage_dma_host_wr (
		.clk              (clk_200_out_clk_clk),                                       //   input,    width = 1,   clk.clk
		.m0_waitrequest   (ccip_avmm_requestor_wr_waitrequest),                        //   input,    width = 1,    m0.waitrequest
		.m0_readdata      (ccip_avmm_requestor_wr_readdata),                           //   input,  width = 512,      .readdata
		.m0_readdatavalid (ccip_avmm_requestor_wr_readdatavalid),                      //   input,    width = 1,      .readdatavalid
		.m0_burstcount    (ccip_avmm_requestor_wr_burstcount),                         //  output,    width = 3,      .burstcount
		.m0_writedata     (ccip_avmm_requestor_wr_writedata),                          //  output,  width = 512,      .writedata
		.m0_address       (ccip_avmm_requestor_wr_address),                            //  output,   width = 48,      .address
		.m0_write         (ccip_avmm_requestor_wr_write),                              //  output,    width = 1,      .write
		.m0_read          (ccip_avmm_requestor_wr_read),                               //  output,    width = 1,      .read
		.m0_byteenable    (ccip_avmm_requestor_wr_byteenable),                         //  output,   width = 64,      .byteenable
		.m0_debugaccess   (ccip_avmm_requestor_wr_debugaccess),                        //  output,    width = 1,      .debugaccess
		.reset            (global_reset_in_out_reset_reset),                           //   input,    width = 1, reset.reset
		.s0_waitrequest   (mm_interconnect_1_pipe_stage_dma_host_wr_s0_waitrequest),   //  output,    width = 1,    s0.waitrequest
		.s0_readdata      (mm_interconnect_1_pipe_stage_dma_host_wr_s0_readdata),      //  output,  width = 512,      .readdata
		.s0_readdatavalid (mm_interconnect_1_pipe_stage_dma_host_wr_s0_readdatavalid), //  output,    width = 1,      .readdatavalid
		.s0_burstcount    (mm_interconnect_1_pipe_stage_dma_host_wr_s0_burstcount),    //   input,    width = 3,      .burstcount
		.s0_writedata     (mm_interconnect_1_pipe_stage_dma_host_wr_s0_writedata),     //   input,  width = 512,      .writedata
		.s0_address       (mm_interconnect_1_pipe_stage_dma_host_wr_s0_address),       //   input,   width = 48,      .address
		.s0_write         (mm_interconnect_1_pipe_stage_dma_host_wr_s0_write),         //   input,    width = 1,      .write
		.s0_read          (mm_interconnect_1_pipe_stage_dma_host_wr_s0_read),          //   input,    width = 1,      .read
		.s0_byteenable    (mm_interconnect_1_pipe_stage_dma_host_wr_s0_byteenable),    //   input,   width = 64,      .byteenable
		.s0_debugaccess   (mm_interconnect_1_pipe_stage_dma_host_wr_s0_debugaccess)    //   input,    width = 1,      .debugaccess
	);

	board_pipe_stage_host_ctrl pipe_stage_host_ctrl (
		.clk              (clk_200_out_clk_clk),                   //   input,   width = 1,   clk.clk
		.m0_waitrequest   (pipe_stage_host_ctrl_m0_waitrequest),   //   input,   width = 1,    m0.waitrequest
		.m0_readdata      (pipe_stage_host_ctrl_m0_readdata),      //   input,  width = 64,      .readdata
		.m0_readdatavalid (pipe_stage_host_ctrl_m0_readdatavalid), //   input,   width = 1,      .readdatavalid
		.m0_burstcount    (pipe_stage_host_ctrl_m0_burstcount),    //  output,   width = 1,      .burstcount
		.m0_writedata     (pipe_stage_host_ctrl_m0_writedata),     //  output,  width = 64,      .writedata
		.m0_address       (pipe_stage_host_ctrl_m0_address),       //  output,  width = 18,      .address
		.m0_write         (pipe_stage_host_ctrl_m0_write),         //  output,   width = 1,      .write
		.m0_read          (pipe_stage_host_ctrl_m0_read),          //  output,   width = 1,      .read
		.m0_byteenable    (pipe_stage_host_ctrl_m0_byteenable),    //  output,   width = 8,      .byteenable
		.m0_debugaccess   (pipe_stage_host_ctrl_m0_debugaccess),   //  output,   width = 1,      .debugaccess
		.reset            (global_reset_in_out_reset_reset),       //   input,   width = 1, reset.reset
		.s0_waitrequest   (ccip_avmm_mmio_waitrequest),            //  output,   width = 1,    s0.waitrequest
		.s0_readdata      (ccip_avmm_mmio_readdata),               //  output,  width = 64,      .readdata
		.s0_readdatavalid (ccip_avmm_mmio_readdatavalid),          //  output,   width = 1,      .readdatavalid
		.s0_burstcount    (ccip_avmm_mmio_burstcount),             //   input,   width = 1,      .burstcount
		.s0_writedata     (ccip_avmm_mmio_writedata),              //   input,  width = 64,      .writedata
		.s0_address       (ccip_avmm_mmio_address),                //   input,  width = 18,      .address
		.s0_write         (ccip_avmm_mmio_write),                  //   input,   width = 1,      .write
		.s0_read          (ccip_avmm_mmio_read),                   //   input,   width = 1,      .read
		.s0_byteenable    (ccip_avmm_mmio_byteenable),             //   input,   width = 8,      .byteenable
		.s0_debugaccess   (ccip_avmm_mmio_debugaccess)             //   input,   width = 1,      .debugaccess
	);

	ddr_board ddr_board (
		.kernel_ddr4a_waitrequest            (kernel_ddr4a_waitrequest),                                        //  output,    width = 1,          kernel_ddr4a.waitrequest
		.kernel_ddr4a_readdata               (kernel_ddr4a_readdata),                                           //  output,  width = 512,                      .readdata
		.kernel_ddr4a_readdatavalid          (kernel_ddr4a_readdatavalid),                                      //  output,    width = 1,                      .readdatavalid
		.kernel_ddr4a_burstcount             (kernel_ddr4a_burstcount),                                         //   input,    width = 5,                      .burstcount
		.kernel_ddr4a_writedata              (kernel_ddr4a_writedata),                                          //   input,  width = 512,                      .writedata
		.kernel_ddr4a_address                (kernel_ddr4a_address),                                            //   input,   width = 32,                      .address
		.kernel_ddr4a_write                  (kernel_ddr4a_write),                                              //   input,    width = 1,                      .write
		.kernel_ddr4a_read                   (kernel_ddr4a_read),                                               //   input,    width = 1,                      .read
		.kernel_ddr4a_byteenable             (kernel_ddr4a_byteenable),                                         //   input,   width = 64,                      .byteenable
		.kernel_ddr4a_debugaccess            (kernel_ddr4a_debugaccess),                                        //   input,    width = 1,                      .debugaccess
		.emif_ddr4a_waitrequest              (emif_ddr4a_waitrequest),                                          //   input,    width = 1,            emif_ddr4a.waitrequest
		.emif_ddr4a_readdata                 (emif_ddr4a_readdata),                                             //   input,  width = 512,                      .readdata
		.emif_ddr4a_readdatavalid            (emif_ddr4a_readdatavalid),                                        //   input,    width = 1,                      .readdatavalid
		.emif_ddr4a_burstcount               (emif_ddr4a_burstcount),                                           //  output,    width = 7,                      .burstcount
		.emif_ddr4a_writedata                (emif_ddr4a_writedata),                                            //  output,  width = 512,                      .writedata
		.emif_ddr4a_address                  (emif_ddr4a_address),                                              //  output,   width = 32,                      .address
		.emif_ddr4a_write                    (emif_ddr4a_write),                                                //  output,    width = 1,                      .write
		.emif_ddr4a_read                     (emif_ddr4a_read),                                                 //  output,    width = 1,                      .read
		.emif_ddr4a_byteenable               (emif_ddr4a_byteenable),                                           //  output,   width = 64,                      .byteenable
		.emif_ddr4a_debugaccess              (emif_ddr4a_debugaccess),                                          //  output,    width = 1,                      .debugaccess
		.kernel_ddr4b_waitrequest            (kernel_ddr4b_waitrequest),                                        //  output,    width = 1,          kernel_ddr4b.waitrequest
		.kernel_ddr4b_readdata               (kernel_ddr4b_readdata),                                           //  output,  width = 512,                      .readdata
		.kernel_ddr4b_readdatavalid          (kernel_ddr4b_readdatavalid),                                      //  output,    width = 1,                      .readdatavalid
		.kernel_ddr4b_burstcount             (kernel_ddr4b_burstcount),                                         //   input,    width = 5,                      .burstcount
		.kernel_ddr4b_writedata              (kernel_ddr4b_writedata),                                          //   input,  width = 512,                      .writedata
		.kernel_ddr4b_address                (kernel_ddr4b_address),                                            //   input,   width = 32,                      .address
		.kernel_ddr4b_write                  (kernel_ddr4b_write),                                              //   input,    width = 1,                      .write
		.kernel_ddr4b_read                   (kernel_ddr4b_read),                                               //   input,    width = 1,                      .read
		.kernel_ddr4b_byteenable             (kernel_ddr4b_byteenable),                                         //   input,   width = 64,                      .byteenable
		.kernel_ddr4b_debugaccess            (kernel_ddr4b_debugaccess),                                        //   input,    width = 1,                      .debugaccess
		.emif_ddr4b_waitrequest              (emif_ddr4b_waitrequest),                                          //   input,    width = 1,            emif_ddr4b.waitrequest
		.emif_ddr4b_readdata                 (emif_ddr4b_readdata),                                             //   input,  width = 512,                      .readdata
		.emif_ddr4b_readdatavalid            (emif_ddr4b_readdatavalid),                                        //   input,    width = 1,                      .readdatavalid
		.emif_ddr4b_burstcount               (emif_ddr4b_burstcount),                                           //  output,    width = 7,                      .burstcount
		.emif_ddr4b_writedata                (emif_ddr4b_writedata),                                            //  output,  width = 512,                      .writedata
		.emif_ddr4b_address                  (emif_ddr4b_address),                                              //  output,   width = 32,                      .address
		.emif_ddr4b_write                    (emif_ddr4b_write),                                                //  output,    width = 1,                      .write
		.emif_ddr4b_read                     (emif_ddr4b_read),                                                 //  output,    width = 1,                      .read
		.emif_ddr4b_byteenable               (emif_ddr4b_byteenable),                                           //  output,   width = 64,                      .byteenable
		.emif_ddr4b_debugaccess              (emif_ddr4b_debugaccess),                                          //  output,    width = 1,                      .debugaccess
		.acl_bsp_memorg_host_mode            (kernel_interface_acl_bsp_memorg_host0x018_mode),                  //   input,    width = 2,   acl_bsp_memorg_host.mode
		.acl_bsp_snoop_data                  (acl_internal_snoop_data),                                         //  output,   width = 33,         acl_bsp_snoop.data
		.acl_bsp_snoop_valid                 (acl_internal_snoop_valid),                                        //  output,    width = 1,                      .valid
		.acl_bsp_snoop_ready                 (acl_internal_snoop_ready),                                        //   input,    width = 1,                      .ready
		.ddr_clk_a_clk                       (emif_ddr4a_clk_out_clk_clk),                                      //   input,    width = 1,             ddr_clk_a.clk
		.ddr_clk_b_clk                       (emif_ddr4b_clk_out_clk_clk),                                      //   input,    width = 1,             ddr_clk_b.clk
		.host_rd_waitrequest                 (ddr_board_host_rd_waitrequest),                                   //   input,    width = 1,               host_rd.waitrequest
		.host_rd_readdata                    (ddr_board_host_rd_readdata),                                      //   input,  width = 512,                      .readdata
		.host_rd_readdatavalid               (ddr_board_host_rd_readdatavalid),                                 //   input,    width = 1,                      .readdatavalid
		.host_rd_burstcount                  (ddr_board_host_rd_burstcount),                                    //  output,    width = 3,                      .burstcount
		.host_rd_writedata                   (ddr_board_host_rd_writedata),                                     //  output,  width = 512,                      .writedata
		.host_rd_address                     (ddr_board_host_rd_address),                                       //  output,   width = 48,                      .address
		.host_rd_write                       (ddr_board_host_rd_write),                                         //  output,    width = 1,                      .write
		.host_rd_read                        (ddr_board_host_rd_read),                                          //  output,    width = 1,                      .read
		.host_rd_byteenable                  (ddr_board_host_rd_byteenable),                                    //  output,   width = 64,                      .byteenable
		.host_rd_debugaccess                 (ddr_board_host_rd_debugaccess),                                   //  output,    width = 1,                      .debugaccess
		.host_wr_waitrequest                 (ddr_board_host_wr_waitrequest),                                   //   input,    width = 1,               host_wr.waitrequest
		.host_wr_readdata                    (ddr_board_host_wr_readdata),                                      //   input,  width = 512,                      .readdata
		.host_wr_readdatavalid               (ddr_board_host_wr_readdatavalid),                                 //   input,    width = 1,                      .readdatavalid
		.host_wr_burstcount                  (ddr_board_host_wr_burstcount),                                    //  output,    width = 3,                      .burstcount
		.host_wr_writedata                   (ddr_board_host_wr_writedata),                                     //  output,  width = 512,                      .writedata
		.host_wr_address                     (ddr_board_host_wr_address),                                       //  output,   width = 49,                      .address
		.host_wr_write                       (ddr_board_host_wr_write),                                         //  output,    width = 1,                      .write
		.host_wr_read                        (ddr_board_host_wr_read),                                          //  output,    width = 1,                      .read
		.host_wr_byteenable                  (ddr_board_host_wr_byteenable),                                    //  output,   width = 64,                      .byteenable
		.host_wr_debugaccess                 (ddr_board_host_wr_debugaccess),                                   //  output,    width = 1,                      .debugaccess
		.global_reset_reset                  (global_reset_in_out_reset_reset),                                 //   input,    width = 1,          global_reset.reset
		.host_clk_clk                        (clk_200_out_clk_clk),                                             //   input,    width = 1,              host_clk.clk
		.kernel_clk_clk                      (kernel_clk_in_out_clk_clk),                                       //   input,    width = 1,            kernel_clk.clk
		.kernel_reset_reset                  (~kernel_interface_kernel_reset_reset),                            //   input,    width = 1,          kernel_reset.reset
		.null_dfh_afu_id_readdata            (mm_interconnect_2_ddr_board_null_dfh_afu_id_readdata),            //  output,   width = 64,       null_dfh_afu_id.readdata
		.null_dfh_afu_id_writedata           (mm_interconnect_2_ddr_board_null_dfh_afu_id_writedata),           //   input,   width = 64,                      .writedata
		.null_dfh_afu_id_address             (mm_interconnect_2_ddr_board_null_dfh_afu_id_address),             //   input,    width = 3,                      .address
		.null_dfh_afu_id_write               (mm_interconnect_2_ddr_board_null_dfh_afu_id_write),               //   input,    width = 1,                      .write
		.null_dfh_afu_id_read                (mm_interconnect_2_ddr_board_null_dfh_afu_id_read),                //   input,    width = 1,                      .read
		.ase_0_avmm_pipe_slave_waitrequest   (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_waitrequest),   //  output,    width = 1, ase_0_avmm_pipe_slave.waitrequest
		.ase_0_avmm_pipe_slave_readdata      (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_readdata),      //  output,   width = 64,                      .readdata
		.ase_0_avmm_pipe_slave_readdatavalid (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_readdatavalid), //  output,    width = 1,                      .readdatavalid
		.ase_0_avmm_pipe_slave_burstcount    (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_burstcount),    //   input,    width = 1,                      .burstcount
		.ase_0_avmm_pipe_slave_writedata     (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_writedata),     //   input,   width = 64,                      .writedata
		.ase_0_avmm_pipe_slave_address       (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_address),       //   input,   width = 13,                      .address
		.ase_0_avmm_pipe_slave_write         (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_write),         //   input,    width = 1,                      .write
		.ase_0_avmm_pipe_slave_read          (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_read),          //   input,    width = 1,                      .read
		.ase_0_avmm_pipe_slave_byteenable    (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_byteenable),    //   input,    width = 8,                      .byteenable
		.ase_0_avmm_pipe_slave_debugaccess   (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_debugaccess),   //   input,    width = 1,                      .debugaccess
		.msgdma_bbb_0_csr_waitrequest        (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_waitrequest),        //  output,    width = 1,      msgdma_bbb_0_csr.waitrequest
		.msgdma_bbb_0_csr_readdata           (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_readdata),           //  output,   width = 64,                      .readdata
		.msgdma_bbb_0_csr_readdatavalid      (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_readdatavalid),      //  output,    width = 1,                      .readdatavalid
		.msgdma_bbb_0_csr_burstcount         (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_burstcount),         //   input,    width = 1,                      .burstcount
		.msgdma_bbb_0_csr_writedata          (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_writedata),          //   input,   width = 64,                      .writedata
		.msgdma_bbb_0_csr_address            (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_address),            //   input,    width = 7,                      .address
		.msgdma_bbb_0_csr_write              (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_write),              //   input,    width = 1,                      .write
		.msgdma_bbb_0_csr_read               (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_read),               //   input,    width = 1,                      .read
		.msgdma_bbb_0_csr_byteenable         (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_byteenable),         //   input,    width = 8,                      .byteenable
		.msgdma_bbb_0_csr_debugaccess        (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_debugaccess),        //   input,    width = 1,                      .debugaccess
		.msgdma_bbb_0_dma_irq_irq            (msgdma_bbb_0_dma_irq_irq),                                        //  output,    width = 1,  msgdma_bbb_0_dma_irq.irq
		.msgdma_bbb_1_csr_waitrequest        (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_waitrequest),        //  output,    width = 1,      msgdma_bbb_1_csr.waitrequest
		.msgdma_bbb_1_csr_readdata           (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_readdata),           //  output,   width = 64,                      .readdata
		.msgdma_bbb_1_csr_readdatavalid      (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_readdatavalid),      //  output,    width = 1,                      .readdatavalid
		.msgdma_bbb_1_csr_burstcount         (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_burstcount),         //   input,    width = 1,                      .burstcount
		.msgdma_bbb_1_csr_writedata          (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_writedata),          //   input,   width = 64,                      .writedata
		.msgdma_bbb_1_csr_address            (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_address),            //   input,    width = 7,                      .address
		.msgdma_bbb_1_csr_write              (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_write),              //   input,    width = 1,                      .write
		.msgdma_bbb_1_csr_read               (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_read),               //   input,    width = 1,                      .read
		.msgdma_bbb_1_csr_byteenable         (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_byteenable),         //   input,    width = 8,                      .byteenable
		.msgdma_bbb_1_csr_debugaccess        (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_debugaccess),        //   input,    width = 1,                      .debugaccess
		.msgdma_bbb_1_dma_irq_irq            (msgdma_bbb_1_dma_irq_irq)                                         //  output,    width = 1,  msgdma_bbb_1_dma_irq.irq
	);

	board_altera_mm_interconnect_191_plnkcii mm_interconnect_1 (
		.ddr_board_host_wr_address                                (ddr_board_host_wr_address),                                 //   input,   width = 49,                                  ddr_board_host_wr.address
		.ddr_board_host_wr_waitrequest                            (ddr_board_host_wr_waitrequest),                             //  output,    width = 1,                                                   .waitrequest
		.ddr_board_host_wr_burstcount                             (ddr_board_host_wr_burstcount),                              //   input,    width = 3,                                                   .burstcount
		.ddr_board_host_wr_byteenable                             (ddr_board_host_wr_byteenable),                              //   input,   width = 64,                                                   .byteenable
		.ddr_board_host_wr_read                                   (ddr_board_host_wr_read),                                    //   input,    width = 1,                                                   .read
		.ddr_board_host_wr_readdata                               (ddr_board_host_wr_readdata),                                //  output,  width = 512,                                                   .readdata
		.ddr_board_host_wr_readdatavalid                          (ddr_board_host_wr_readdatavalid),                           //  output,    width = 1,                                                   .readdatavalid
		.ddr_board_host_wr_write                                  (ddr_board_host_wr_write),                                   //   input,    width = 1,                                                   .write
		.ddr_board_host_wr_writedata                              (ddr_board_host_wr_writedata),                               //   input,  width = 512,                                                   .writedata
		.ddr_board_host_wr_debugaccess                            (ddr_board_host_wr_debugaccess),                             //   input,    width = 1,                                                   .debugaccess
		.pipe_stage_dma_host_wr_s0_address                        (mm_interconnect_1_pipe_stage_dma_host_wr_s0_address),       //  output,   width = 48,                          pipe_stage_dma_host_wr_s0.address
		.pipe_stage_dma_host_wr_s0_write                          (mm_interconnect_1_pipe_stage_dma_host_wr_s0_write),         //  output,    width = 1,                                                   .write
		.pipe_stage_dma_host_wr_s0_read                           (mm_interconnect_1_pipe_stage_dma_host_wr_s0_read),          //  output,    width = 1,                                                   .read
		.pipe_stage_dma_host_wr_s0_readdata                       (mm_interconnect_1_pipe_stage_dma_host_wr_s0_readdata),      //   input,  width = 512,                                                   .readdata
		.pipe_stage_dma_host_wr_s0_writedata                      (mm_interconnect_1_pipe_stage_dma_host_wr_s0_writedata),     //  output,  width = 512,                                                   .writedata
		.pipe_stage_dma_host_wr_s0_burstcount                     (mm_interconnect_1_pipe_stage_dma_host_wr_s0_burstcount),    //  output,    width = 3,                                                   .burstcount
		.pipe_stage_dma_host_wr_s0_byteenable                     (mm_interconnect_1_pipe_stage_dma_host_wr_s0_byteenable),    //  output,   width = 64,                                                   .byteenable
		.pipe_stage_dma_host_wr_s0_readdatavalid                  (mm_interconnect_1_pipe_stage_dma_host_wr_s0_readdatavalid), //   input,    width = 1,                                                   .readdatavalid
		.pipe_stage_dma_host_wr_s0_waitrequest                    (mm_interconnect_1_pipe_stage_dma_host_wr_s0_waitrequest),   //   input,    width = 1,                                                   .waitrequest
		.pipe_stage_dma_host_wr_s0_debugaccess                    (mm_interconnect_1_pipe_stage_dma_host_wr_s0_debugaccess),   //  output,    width = 1,                                                   .debugaccess
		.pipe_stage_dma_host_wr_reset_reset_bridge_in_reset_reset (global_reset_in_out_reset_reset),                           //   input,    width = 1, pipe_stage_dma_host_wr_reset_reset_bridge_in_reset.reset
		.clk_200_out_clk_clk                                      (clk_200_out_clk_clk)                                        //   input,    width = 1,                                    clk_200_out_clk.clk
	);

	board_altera_mm_interconnect_191_qqmhvsy mm_interconnect_2 (
		.pipe_stage_host_ctrl_m0_address                        (pipe_stage_host_ctrl_m0_address),                                     //   input,  width = 18,                          pipe_stage_host_ctrl_m0.address
		.pipe_stage_host_ctrl_m0_waitrequest                    (pipe_stage_host_ctrl_m0_waitrequest),                                 //  output,   width = 1,                                                 .waitrequest
		.pipe_stage_host_ctrl_m0_burstcount                     (pipe_stage_host_ctrl_m0_burstcount),                                  //   input,   width = 1,                                                 .burstcount
		.pipe_stage_host_ctrl_m0_byteenable                     (pipe_stage_host_ctrl_m0_byteenable),                                  //   input,   width = 8,                                                 .byteenable
		.pipe_stage_host_ctrl_m0_read                           (pipe_stage_host_ctrl_m0_read),                                        //   input,   width = 1,                                                 .read
		.pipe_stage_host_ctrl_m0_readdata                       (pipe_stage_host_ctrl_m0_readdata),                                    //  output,  width = 64,                                                 .readdata
		.pipe_stage_host_ctrl_m0_readdatavalid                  (pipe_stage_host_ctrl_m0_readdatavalid),                               //  output,   width = 1,                                                 .readdatavalid
		.pipe_stage_host_ctrl_m0_write                          (pipe_stage_host_ctrl_m0_write),                                       //   input,   width = 1,                                                 .write
		.pipe_stage_host_ctrl_m0_writedata                      (pipe_stage_host_ctrl_m0_writedata),                                   //   input,  width = 64,                                                 .writedata
		.pipe_stage_host_ctrl_m0_debugaccess                    (pipe_stage_host_ctrl_m0_debugaccess),                                 //   input,   width = 1,                                                 .debugaccess
		.board_irq_ctrl_0_IRQ_Mask_Slave_write                  (mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_write),             //  output,   width = 1,                  board_irq_ctrl_0_IRQ_Mask_Slave.write
		.board_irq_ctrl_0_IRQ_Mask_Slave_read                   (mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_read),              //  output,   width = 1,                                                 .read
		.board_irq_ctrl_0_IRQ_Mask_Slave_readdata               (mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_readdata),          //   input,  width = 32,                                                 .readdata
		.board_irq_ctrl_0_IRQ_Mask_Slave_writedata              (mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_writedata),         //  output,  width = 32,                                                 .writedata
		.board_irq_ctrl_0_IRQ_Mask_Slave_byteenable             (mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_byteenable),        //  output,   width = 4,                                                 .byteenable
		.board_irq_ctrl_0_IRQ_Mask_Slave_waitrequest            (mm_interconnect_2_board_irq_ctrl_0_irq_mask_slave_waitrequest),       //   input,   width = 1,                                                 .waitrequest
		.board_irq_ctrl_0_IRQ_Read_Slave_read                   (mm_interconnect_2_board_irq_ctrl_0_irq_read_slave_read),              //  output,   width = 1,                  board_irq_ctrl_0_IRQ_Read_Slave.read
		.board_irq_ctrl_0_IRQ_Read_Slave_readdata               (mm_interconnect_2_board_irq_ctrl_0_irq_read_slave_readdata),          //   input,  width = 32,                                                 .readdata
		.board_afu_id_avmm_slave_0_afu_cfg_slave_address        (mm_interconnect_2_board_afu_id_avmm_slave_0_afu_cfg_slave_address),   //  output,   width = 3,          board_afu_id_avmm_slave_0_afu_cfg_slave.address
		.board_afu_id_avmm_slave_0_afu_cfg_slave_write          (mm_interconnect_2_board_afu_id_avmm_slave_0_afu_cfg_slave_write),     //  output,   width = 1,                                                 .write
		.board_afu_id_avmm_slave_0_afu_cfg_slave_read           (mm_interconnect_2_board_afu_id_avmm_slave_0_afu_cfg_slave_read),      //  output,   width = 1,                                                 .read
		.board_afu_id_avmm_slave_0_afu_cfg_slave_readdata       (mm_interconnect_2_board_afu_id_avmm_slave_0_afu_cfg_slave_readdata),  //   input,  width = 64,                                                 .readdata
		.board_afu_id_avmm_slave_0_afu_cfg_slave_writedata      (mm_interconnect_2_board_afu_id_avmm_slave_0_afu_cfg_slave_writedata), //  output,  width = 64,                                                 .writedata
		.ddr_board_ase_0_avmm_pipe_slave_address                (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_address),           //  output,  width = 13,                  ddr_board_ase_0_avmm_pipe_slave.address
		.ddr_board_ase_0_avmm_pipe_slave_write                  (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_write),             //  output,   width = 1,                                                 .write
		.ddr_board_ase_0_avmm_pipe_slave_read                   (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_read),              //  output,   width = 1,                                                 .read
		.ddr_board_ase_0_avmm_pipe_slave_readdata               (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_readdata),          //   input,  width = 64,                                                 .readdata
		.ddr_board_ase_0_avmm_pipe_slave_writedata              (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_writedata),         //  output,  width = 64,                                                 .writedata
		.ddr_board_ase_0_avmm_pipe_slave_burstcount             (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_burstcount),        //  output,   width = 1,                                                 .burstcount
		.ddr_board_ase_0_avmm_pipe_slave_byteenable             (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_byteenable),        //  output,   width = 8,                                                 .byteenable
		.ddr_board_ase_0_avmm_pipe_slave_readdatavalid          (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_readdatavalid),     //   input,   width = 1,                                                 .readdatavalid
		.ddr_board_ase_0_avmm_pipe_slave_waitrequest            (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_waitrequest),       //   input,   width = 1,                                                 .waitrequest
		.ddr_board_ase_0_avmm_pipe_slave_debugaccess            (mm_interconnect_2_ddr_board_ase_0_avmm_pipe_slave_debugaccess),       //  output,   width = 1,                                                 .debugaccess
		.kernel_interface_ctrl_address                          (mm_interconnect_2_kernel_interface_ctrl_address),                     //  output,  width = 14,                            kernel_interface_ctrl.address
		.kernel_interface_ctrl_write                            (mm_interconnect_2_kernel_interface_ctrl_write),                       //  output,   width = 1,                                                 .write
		.kernel_interface_ctrl_read                             (mm_interconnect_2_kernel_interface_ctrl_read),                        //  output,   width = 1,                                                 .read
		.kernel_interface_ctrl_readdata                         (mm_interconnect_2_kernel_interface_ctrl_readdata),                    //   input,  width = 32,                                                 .readdata
		.kernel_interface_ctrl_writedata                        (mm_interconnect_2_kernel_interface_ctrl_writedata),                   //  output,  width = 32,                                                 .writedata
		.kernel_interface_ctrl_burstcount                       (mm_interconnect_2_kernel_interface_ctrl_burstcount),                  //  output,   width = 1,                                                 .burstcount
		.kernel_interface_ctrl_byteenable                       (mm_interconnect_2_kernel_interface_ctrl_byteenable),                  //  output,   width = 4,                                                 .byteenable
		.kernel_interface_ctrl_readdatavalid                    (mm_interconnect_2_kernel_interface_ctrl_readdatavalid),               //   input,   width = 1,                                                 .readdatavalid
		.kernel_interface_ctrl_waitrequest                      (mm_interconnect_2_kernel_interface_ctrl_waitrequest),                 //   input,   width = 1,                                                 .waitrequest
		.kernel_interface_ctrl_debugaccess                      (mm_interconnect_2_kernel_interface_ctrl_debugaccess),                 //  output,   width = 1,                                                 .debugaccess
		.ddr_board_msgdma_bbb_0_csr_address                     (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_address),                //  output,   width = 7,                       ddr_board_msgdma_bbb_0_csr.address
		.ddr_board_msgdma_bbb_0_csr_write                       (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_write),                  //  output,   width = 1,                                                 .write
		.ddr_board_msgdma_bbb_0_csr_read                        (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_read),                   //  output,   width = 1,                                                 .read
		.ddr_board_msgdma_bbb_0_csr_readdata                    (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_readdata),               //   input,  width = 64,                                                 .readdata
		.ddr_board_msgdma_bbb_0_csr_writedata                   (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_writedata),              //  output,  width = 64,                                                 .writedata
		.ddr_board_msgdma_bbb_0_csr_burstcount                  (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_burstcount),             //  output,   width = 1,                                                 .burstcount
		.ddr_board_msgdma_bbb_0_csr_byteenable                  (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_byteenable),             //  output,   width = 8,                                                 .byteenable
		.ddr_board_msgdma_bbb_0_csr_readdatavalid               (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_readdatavalid),          //   input,   width = 1,                                                 .readdatavalid
		.ddr_board_msgdma_bbb_0_csr_waitrequest                 (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_waitrequest),            //   input,   width = 1,                                                 .waitrequest
		.ddr_board_msgdma_bbb_0_csr_debugaccess                 (mm_interconnect_2_ddr_board_msgdma_bbb_0_csr_debugaccess),            //  output,   width = 1,                                                 .debugaccess
		.ddr_board_msgdma_bbb_1_csr_address                     (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_address),                //  output,   width = 7,                       ddr_board_msgdma_bbb_1_csr.address
		.ddr_board_msgdma_bbb_1_csr_write                       (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_write),                  //  output,   width = 1,                                                 .write
		.ddr_board_msgdma_bbb_1_csr_read                        (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_read),                   //  output,   width = 1,                                                 .read
		.ddr_board_msgdma_bbb_1_csr_readdata                    (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_readdata),               //   input,  width = 64,                                                 .readdata
		.ddr_board_msgdma_bbb_1_csr_writedata                   (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_writedata),              //  output,  width = 64,                                                 .writedata
		.ddr_board_msgdma_bbb_1_csr_burstcount                  (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_burstcount),             //  output,   width = 1,                                                 .burstcount
		.ddr_board_msgdma_bbb_1_csr_byteenable                  (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_byteenable),             //  output,   width = 8,                                                 .byteenable
		.ddr_board_msgdma_bbb_1_csr_readdatavalid               (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_readdatavalid),          //   input,   width = 1,                                                 .readdatavalid
		.ddr_board_msgdma_bbb_1_csr_waitrequest                 (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_waitrequest),            //   input,   width = 1,                                                 .waitrequest
		.ddr_board_msgdma_bbb_1_csr_debugaccess                 (mm_interconnect_2_ddr_board_msgdma_bbb_1_csr_debugaccess),            //  output,   width = 1,                                                 .debugaccess
		.ddr_board_null_dfh_afu_id_address                      (mm_interconnect_2_ddr_board_null_dfh_afu_id_address),                 //  output,   width = 3,                        ddr_board_null_dfh_afu_id.address
		.ddr_board_null_dfh_afu_id_write                        (mm_interconnect_2_ddr_board_null_dfh_afu_id_write),                   //  output,   width = 1,                                                 .write
		.ddr_board_null_dfh_afu_id_read                         (mm_interconnect_2_ddr_board_null_dfh_afu_id_read),                    //  output,   width = 1,                                                 .read
		.ddr_board_null_dfh_afu_id_readdata                     (mm_interconnect_2_ddr_board_null_dfh_afu_id_readdata),                //   input,  width = 64,                                                 .readdata
		.ddr_board_null_dfh_afu_id_writedata                    (mm_interconnect_2_ddr_board_null_dfh_afu_id_writedata),               //  output,  width = 64,                                                 .writedata
		.pipe_stage_host_ctrl_reset_reset_bridge_in_reset_reset (global_reset_in_out_reset_reset),                                     //   input,   width = 1, pipe_stage_host_ctrl_reset_reset_bridge_in_reset.reset
		.clk_200_out_clk_clk                                    (clk_200_out_clk_clk)                                                  //   input,   width = 1,                                  clk_200_out_clk.clk
	);

	board_altera_irq_mapper_191_vnrcumq irq_mapper (
		.clk           (clk_200_out_clk_clk),                     //   input,   width = 1,       clk.clk
		.reset         (global_reset_in_out_reset_reset),         //   input,   width = 1, clk_reset.reset
		.receiver0_irq (irq_mapper_receiver0_irq),                //   input,   width = 1, receiver0.irq
		.sender_irq    (board_irq_ctrl_0_interrupt_receiver_irq)  //  output,  width = 32,    sender.irq
	);

	board_altera_irq_clock_crosser_191_4qcttxy #(
		.IRQ_WIDTH (1)
	) irq_synchronizer (
		.receiver_clk   (kernel_clk_in_out_clk_clk),       //   input,  width = 1,       receiver_clk.clk
		.sender_clk     (clk_200_out_clk_clk),             //   input,  width = 1,         sender_clk.clk
		.receiver_reset (rst_controller_reset_out_reset),  //   input,  width = 1, receiver_clk_reset.reset
		.sender_reset   (global_reset_in_out_reset_reset), //   input,  width = 1,   sender_clk_reset.reset
		.receiver_irq   (irq_synchronizer_receiver_irq),   //   input,  width = 1,           receiver.irq
		.sender_irq     (irq_mapper_receiver0_irq)         //  output,  width = 1,             sender.irq
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (global_reset_in_out_reset_reset), //   input,  width = 1, reset_in0.reset
		.clk            (kernel_clk_in_out_clk_clk),       //   input,  width = 1,       clk.clk
		.reset_out      (rst_controller_reset_out_reset),  //  output,  width = 1, reset_out.reset
		.reset_req      (),                                // (terminated),                       
		.reset_req_in0  (1'b0),                            // (terminated),                       
		.reset_in1      (1'b0),                            // (terminated),                       
		.reset_req_in1  (1'b0),                            // (terminated),                       
		.reset_in2      (1'b0),                            // (terminated),                       
		.reset_req_in2  (1'b0),                            // (terminated),                       
		.reset_in3      (1'b0),                            // (terminated),                       
		.reset_req_in3  (1'b0),                            // (terminated),                       
		.reset_in4      (1'b0),                            // (terminated),                       
		.reset_req_in4  (1'b0),                            // (terminated),                       
		.reset_in5      (1'b0),                            // (terminated),                       
		.reset_req_in5  (1'b0),                            // (terminated),                       
		.reset_in6      (1'b0),                            // (terminated),                       
		.reset_req_in6  (1'b0),                            // (terminated),                       
		.reset_in7      (1'b0),                            // (terminated),                       
		.reset_req_in7  (1'b0),                            // (terminated),                       
		.reset_in8      (1'b0),                            // (terminated),                       
		.reset_req_in8  (1'b0),                            // (terminated),                       
		.reset_in9      (1'b0),                            // (terminated),                       
		.reset_req_in9  (1'b0),                            // (terminated),                       
		.reset_in10     (1'b0),                            // (terminated),                       
		.reset_req_in10 (1'b0),                            // (terminated),                       
		.reset_in11     (1'b0),                            // (terminated),                       
		.reset_req_in11 (1'b0),                            // (terminated),                       
		.reset_in12     (1'b0),                            // (terminated),                       
		.reset_req_in12 (1'b0),                            // (terminated),                       
		.reset_in13     (1'b0),                            // (terminated),                       
		.reset_req_in13 (1'b0),                            // (terminated),                       
		.reset_in14     (1'b0),                            // (terminated),                       
		.reset_req_in14 (1'b0),                            // (terminated),                       
		.reset_in15     (1'b0),                            // (terminated),                       
		.reset_req_in15 (1'b0)                             // (terminated),                       
	);

endmodule
