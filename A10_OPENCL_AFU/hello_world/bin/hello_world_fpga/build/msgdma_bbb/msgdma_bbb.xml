<?xml version="1.0" encoding="UTF-8"?>
<deploy
 date="2023.06.04.07:39:00"
 outputDirectory="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/">
 <perimeter>
  <parameter
     name="AUTO_GENERATION_ID"
     type="Integer"
     defaultValue="0"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_UNIQUE_ID"
     type="String"
     defaultValue=""
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_DEVICE_FAMILY"
     type="String"
     defaultValue="Arria 10"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_DEVICE"
     type="String"
     defaultValue="10AX115N2F40E2LG"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_DEVICE_SPEEDGRADE"
     type="String"
     defaultValue="2"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_CLK_CLOCK_RATE"
     type="Long"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_CLK_CLOCK_DOMAIN"
     type="Integer"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_CLK_RESET_DOMAIN"
     type="Integer"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_HOST_RD_ADDRESS_MAP"
     type="AddressMap"
     defaultValue=""
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_HOST_RD_ADDRESS_WIDTH"
     type="AddressWidthType"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_HOST_WR_ADDRESS_MAP"
     type="AddressMap"
     defaultValue=""
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_HOST_WR_ADDRESS_WIDTH"
     type="AddressWidthType"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_MEM_ADDRESS_MAP"
     type="AddressMap"
     defaultValue=""
     onHdl="0"
     affectsHdl="1" />
  <parameter
     name="AUTO_MEM_ADDRESS_WIDTH"
     type="AddressWidthType"
     defaultValue="-1"
     onHdl="0"
     affectsHdl="1" />
  <interface name="clk" kind="clock" start="0">
   <property name="clockRate" value="200000000" />
   <property name="externallyDriven" value="false" />
   <property name="ptfSchematicName" value="" />
   <port name="clk_clk" direction="input" role="clk" width="1" />
  </interface>
  <interface name="reset" kind="reset" start="0">
   <property name="associatedClock" value="clk" />
   <property name="synchronousEdges" value="BOTH" />
   <port name="reset_reset_n" direction="input" role="reset_n" width="1" />
  </interface>
  <interface name="csr" kind="avalon" start="0">
   <property name="addressAlignment" value="DYNAMIC" />
   <property name="addressGroup" value="0" />
   <property name="addressSpan" value="128" />
   <property name="addressUnits" value="SYMBOLS" />
   <property name="alwaysBurstMaxBurst" value="false" />
   <property name="associatedClock" value="clk" />
   <property name="associatedReset" value="reset" />
   <property name="bitsPerSymbol" value="8" />
   <property name="bridgedAddressOffset" value="0" />
   <property name="bridgesToMaster" value="" />
   <property name="burstOnBurstBoundariesOnly" value="false" />
   <property name="burstcountUnits" value="WORDS" />
   <property name="constantBurstBehavior" value="false" />
   <property name="explicitAddressSpan" value="0" />
   <property name="holdTime" value="0" />
   <property name="interleaveBursts" value="false" />
   <property name="isBigEndian" value="false" />
   <property name="isFlash" value="false" />
   <property name="isMemoryDevice" value="false" />
   <property name="isNonVolatileStorage" value="false" />
   <property name="linewrapBursts" value="false" />
   <property name="maximumPendingReadTransactions" value="1" />
   <property name="maximumPendingWriteTransactions" value="0" />
   <property name="minimumReadLatency" value="1" />
   <property name="minimumResponseLatency" value="1" />
   <property name="minimumUninterruptedRunLength" value="1" />
   <property name="prSafe" value="false" />
   <property name="printableDevice" value="false" />
   <property name="readLatency" value="0" />
   <property name="readWaitStates" value="0" />
   <property name="readWaitTime" value="0" />
   <property name="registerIncomingSignals" value="false" />
   <property name="registerOutgoingSignals" value="false" />
   <property name="setupTime" value="0" />
   <property name="timingUnits" value="Cycles" />
   <property name="transparentBridge" value="false" />
   <property name="waitrequestAllowance" value="0" />
   <property name="wellBehavedWaitrequest" value="false" />
   <property name="writeLatency" value="0" />
   <property name="writeWaitStates" value="0" />
   <property name="writeWaitTime" value="0" />
   <port
       name="csr_waitrequest"
       direction="output"
       role="waitrequest"
       width="1" />
   <port name="csr_readdata" direction="output" role="readdata" width="64" />
   <port
       name="csr_readdatavalid"
       direction="output"
       role="readdatavalid"
       width="1" />
   <port name="csr_burstcount" direction="input" role="burstcount" width="1" />
   <port name="csr_writedata" direction="input" role="writedata" width="64" />
   <port name="csr_address" direction="input" role="address" width="7" />
   <port name="csr_write" direction="input" role="write" width="1" />
   <port name="csr_read" direction="input" role="read" width="1" />
   <port name="csr_byteenable" direction="input" role="byteenable" width="8" />
   <port name="csr_debugaccess" direction="input" role="debugaccess" width="1" />
  </interface>
  <interface name="dma_irq" kind="interrupt" start="0">
   <property name="associatedAddressablePoint" value="msgdma_bbb.csr" />
   <property name="associatedClock" value="clk" />
   <property name="associatedReset" value="reset" />
   <property name="bridgedReceiverOffset" value="0" />
   <property name="bridgesToReceiver" value="" />
   <property name="irqScheme" value="NONE" />
   <port name="dma_irq_irq" direction="output" role="irq" width="1" />
  </interface>
  <interface name="host_rd" kind="avalon" start="1">
   <property name="adaptsTo" value="" />
   <property name="addressGroup" value="0" />
   <property name="addressUnits" value="SYMBOLS" />
   <property name="alwaysBurstMaxBurst" value="false" />
   <property name="associatedClock" value="clk" />
   <property name="associatedReset" value="reset" />
   <property name="bitsPerSymbol" value="8" />
   <property name="burstOnBurstBoundariesOnly" value="false" />
   <property name="burstcountUnits" value="WORDS" />
   <property name="constantBurstBehavior" value="false" />
   <property name="dBSBigEndian" value="false" />
   <property name="doStreamReads" value="false" />
   <property name="doStreamWrites" value="false" />
   <property name="holdTime" value="0" />
   <property name="interleaveBursts" value="false" />
   <property name="isAsynchronous" value="false" />
   <property name="isBigEndian" value="false" />
   <property name="isReadable" value="false" />
   <property name="isWriteable" value="false" />
   <property name="linewrapBursts" value="false" />
   <property name="maxAddressWidth" value="32" />
   <property name="maximumPendingReadTransactions" value="0" />
   <property name="maximumPendingWriteTransactions" value="0" />
   <property name="minimumReadLatency" value="1" />
   <property name="minimumResponseLatency" value="1" />
   <property name="prSafe" value="false" />
   <property name="readLatency" value="0" />
   <property name="readWaitTime" value="1" />
   <property name="registerIncomingSignals" value="false" />
   <property name="registerOutgoingSignals" value="false" />
   <property name="setupTime" value="0" />
   <property name="timingUnits" value="Cycles" />
   <property name="waitrequestAllowance" value="0" />
   <property name="writeWaitTime" value="0" />
   <port
       name="host_rd_waitrequest"
       direction="input"
       role="waitrequest"
       width="1" />
   <port name="host_rd_readdata" direction="input" role="readdata" width="512" />
   <port
       name="host_rd_readdatavalid"
       direction="input"
       role="readdatavalid"
       width="1" />
   <port
       name="host_rd_burstcount"
       direction="output"
       role="burstcount"
       width="3" />
   <port
       name="host_rd_writedata"
       direction="output"
       role="writedata"
       width="512" />
   <port name="host_rd_address" direction="output" role="address" width="48" />
   <port name="host_rd_write" direction="output" role="write" width="1" />
   <port name="host_rd_read" direction="output" role="read" width="1" />
   <port
       name="host_rd_byteenable"
       direction="output"
       role="byteenable"
       width="64" />
   <port
       name="host_rd_debugaccess"
       direction="output"
       role="debugaccess"
       width="1" />
  </interface>
  <interface name="host_wr" kind="avalon" start="1">
   <property name="adaptsTo" value="" />
   <property name="addressGroup" value="0" />
   <property name="addressUnits" value="SYMBOLS" />
   <property name="alwaysBurstMaxBurst" value="false" />
   <property name="associatedClock" value="clk" />
   <property name="associatedReset" value="reset" />
   <property name="bitsPerSymbol" value="8" />
   <property name="burstOnBurstBoundariesOnly" value="false" />
   <property name="burstcountUnits" value="WORDS" />
   <property name="constantBurstBehavior" value="false" />
   <property name="dBSBigEndian" value="false" />
   <property name="doStreamReads" value="false" />
   <property name="doStreamWrites" value="false" />
   <property name="holdTime" value="0" />
   <property name="interleaveBursts" value="false" />
   <property name="isAsynchronous" value="false" />
   <property name="isBigEndian" value="false" />
   <property name="isReadable" value="false" />
   <property name="isWriteable" value="false" />
   <property name="linewrapBursts" value="false" />
   <property name="maxAddressWidth" value="32" />
   <property name="maximumPendingReadTransactions" value="0" />
   <property name="maximumPendingWriteTransactions" value="0" />
   <property name="minimumReadLatency" value="1" />
   <property name="minimumResponseLatency" value="1" />
   <property name="prSafe" value="false" />
   <property name="readLatency" value="0" />
   <property name="readWaitTime" value="1" />
   <property name="registerIncomingSignals" value="false" />
   <property name="registerOutgoingSignals" value="false" />
   <property name="setupTime" value="0" />
   <property name="timingUnits" value="Cycles" />
   <property name="waitrequestAllowance" value="0" />
   <property name="writeWaitTime" value="0" />
   <port
       name="host_wr_waitrequest"
       direction="input"
       role="waitrequest"
       width="1" />
   <port name="host_wr_readdata" direction="input" role="readdata" width="512" />
   <port
       name="host_wr_readdatavalid"
       direction="input"
       role="readdatavalid"
       width="1" />
   <port
       name="host_wr_burstcount"
       direction="output"
       role="burstcount"
       width="3" />
   <port
       name="host_wr_writedata"
       direction="output"
       role="writedata"
       width="512" />
   <port name="host_wr_address" direction="output" role="address" width="49" />
   <port name="host_wr_write" direction="output" role="write" width="1" />
   <port name="host_wr_read" direction="output" role="read" width="1" />
   <port
       name="host_wr_byteenable"
       direction="output"
       role="byteenable"
       width="64" />
   <port
       name="host_wr_debugaccess"
       direction="output"
       role="debugaccess"
       width="1" />
  </interface>
  <interface name="mem" kind="avalon" start="1">
   <property name="adaptsTo" value="" />
   <property name="addressGroup" value="0" />
   <property name="addressUnits" value="SYMBOLS" />
   <property name="alwaysBurstMaxBurst" value="false" />
   <property name="associatedClock" value="clk" />
   <property name="associatedReset" value="reset" />
   <property name="bitsPerSymbol" value="8" />
   <property name="burstOnBurstBoundariesOnly" value="false" />
   <property name="burstcountUnits" value="WORDS" />
   <property name="constantBurstBehavior" value="false" />
   <property name="dBSBigEndian" value="false" />
   <property name="doStreamReads" value="false" />
   <property name="doStreamWrites" value="false" />
   <property name="holdTime" value="0" />
   <property name="interleaveBursts" value="false" />
   <property name="isAsynchronous" value="false" />
   <property name="isBigEndian" value="false" />
   <property name="isReadable" value="false" />
   <property name="isWriteable" value="false" />
   <property name="linewrapBursts" value="false" />
   <property name="maxAddressWidth" value="32" />
   <property name="maximumPendingReadTransactions" value="0" />
   <property name="maximumPendingWriteTransactions" value="0" />
   <property name="minimumReadLatency" value="1" />
   <property name="minimumResponseLatency" value="1" />
   <property name="prSafe" value="false" />
   <property name="readLatency" value="0" />
   <property name="readWaitTime" value="1" />
   <property name="registerIncomingSignals" value="false" />
   <property name="registerOutgoingSignals" value="false" />
   <property name="setupTime" value="0" />
   <property name="timingUnits" value="Cycles" />
   <property name="waitrequestAllowance" value="0" />
   <property name="writeWaitTime" value="0" />
   <port name="mem_waitrequest" direction="input" role="waitrequest" width="1" />
   <port name="mem_readdata" direction="input" role="readdata" width="512" />
   <port
       name="mem_readdatavalid"
       direction="input"
       role="readdatavalid"
       width="1" />
   <port name="mem_burstcount" direction="output" role="burstcount" width="3" />
   <port name="mem_writedata" direction="output" role="writedata" width="512" />
   <port name="mem_address" direction="output" role="address" width="48" />
   <port name="mem_write" direction="output" role="write" width="1" />
   <port name="mem_read" direction="output" role="read" width="1" />
   <port name="mem_byteenable" direction="output" role="byteenable" width="64" />
   <port
       name="mem_debugaccess"
       direction="output"
       role="debugaccess"
       width="1" />
  </interface>
 </perimeter>
 <entity kind="msgdma_bbb" version="1.0" name="msgdma_bbb">
  <parameter name="AUTO_CLK_CLOCK_RATE" value="-1" />
  <parameter name="AUTO_MEM_ADDRESS_WIDTH" value="-1" />
  <parameter name="AUTO_GENERATION_ID" value="0" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="AUTO_HOST_RD_ADDRESS_MAP" value="" />
  <parameter name="AUTO_UNIQUE_ID" value="" />
  <parameter name="AUTO_DEVICE_SPEEDGRADE" value="2" />
  <parameter name="AUTO_HOST_WR_ADDRESS_MAP" value="" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_HOST_WR_ADDRESS_WIDTH" value="-1" />
  <parameter name="AUTO_MEM_ADDRESS_MAP" value="" />
  <parameter name="AUTO_CLK_RESET_DOMAIN" value="-1" />
  <parameter name="AUTO_CLK_CLOCK_DOMAIN" value="-1" />
  <parameter name="AUTO_HOST_RD_ADDRESS_WIDTH" value="-1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/synth/msgdma_bbb.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/synth/msgdma_bbb.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb.qsys" />
  </sourceFiles>
  <childSourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_mm_interconnect/altera_mm_interconnect_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_translator/altera_merlin_master_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_translator/altera_merlin_slave_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_mm_interconnect/altera_mm_interconnect_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_translator/altera_merlin_master_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_translator/altera_merlin_slave_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_mm_interconnect/altera_mm_interconnect_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_translator/altera_merlin_master_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_translator/altera_merlin_slave_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_agent/altera_merlin_master_agent_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_agent/altera_merlin_slave_agent_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_traffic_limiter/altera_merlin_traffic_limiter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/iconnect/alt_hiconnect_sc_fifo/alt_hiconnect_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_burst_adapter/altera_merlin_burst_adapter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_mm_interconnect/altera_mm_interconnect_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_translator/altera_merlin_master_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_translator/altera_merlin_slave_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_agent/altera_merlin_master_agent_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_agent/altera_merlin_slave_agent_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_traffic_limiter/altera_merlin_traffic_limiter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/iconnect/alt_hiconnect_sc_fifo/alt_hiconnect_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
  </childSourceFiles>
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_clk"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_csr"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: dma_core_dma_read_master"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: dma_core_dma_write_master"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_magic_number_rom_0"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: dma_core_modular_sgdma_dispatcher_0"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_afu_id_avmm_slave_0"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: dma_core_pipe_stage_dma_read"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: dma_core_pipe_stage_dma_write"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_pipe_stage_m"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_mm_bridge_1"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_mm_bridge_0"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_mm_interconnect_191_jmxhaza"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_master_translator_191_g7h47bq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_slave_translator_191_x56fcki"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_mm_interconnect_191_32dta6a"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_master_translator_191_g7h47bq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_slave_translator_191_x56fcki"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_mm_interconnect_191_shqzigy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_master_translator_191_g7h47bq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_slave_translator_191_x56fcki"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_master_agent_191_mpbm6tq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_slave_agent_191_ncfkfri"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_avalon_sc_fifo_191_e5eqkcq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_7nsl54q"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_bjgub5i"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_k5ic25a"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_qypc7ni"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_kcba44q"</message>
   <message level="Info" culprit="my_altera_avalon_sc_fifo_dest_id_fifo">"Generating: my_altera_avalon_sc_fifo_dest_id_fifo"</message>
   <message level="Info" culprit="my_alt_hiconnect_sc_fifo_dest_id_fifo">"Generating: my_alt_hiconnect_sc_fifo_dest_id_fifo"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_bbthvuy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_avalon_sc_fifo_191_e5eqkcq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_oslblqy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_alt_hiconnect_sc_fifo_191_7qtmpqq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_burst_adapter_191_swp6qdq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_ukvrogq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_37uvtri"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_vtbwn6q"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_3dzcbwq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_width_adapter_191_xe36m3y"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_width_adapter_191_tiejfvy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_width_adapter_191_zq7vway"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_width_adapter_191_rngqqti"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_master_translator_191_g7h47bq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_slave_translator_191_x56fcki"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_master_agent_191_mpbm6tq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_slave_agent_191_ncfkfri"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_avalon_sc_fifo_191_e5eqkcq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_acw7igi"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_c35n5ai"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_ryksocy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_ai6ulwa"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_7mgzb3i"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_kcba44q"</message>
   <message level="Info" culprit="my_altera_avalon_sc_fifo_dest_id_fifo">"Generating: my_altera_avalon_sc_fifo_dest_id_fifo"</message>
   <message level="Info" culprit="my_alt_hiconnect_sc_fifo_dest_id_fifo">"Generating: my_alt_hiconnect_sc_fifo_dest_id_fifo"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_bbthvuy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_avalon_sc_fifo_191_e5eqkcq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_oslblqy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_alt_hiconnect_sc_fifo_191_7qtmpqq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_5js56xy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_b4filfy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_br63msi"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_fkmy6zy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_osdbpdq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_kazjgxy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_jurlxwy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_2n4vlwy"</message>
  </messages>
 </entity>
 <entity kind="altera_generic_component" version="1.0" name="msgdma_bbb_clk">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="inputClockFrequency" value="0" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk_out&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedDirectClock&lt;/key&gt;
                        &lt;value&gt;clk_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;200000000&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRateKnown&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;clk_in&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;in_clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;qsys.ui.export_name&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;200000000&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;clk_in_reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset_n&lt;/name&gt;
                    &lt;role&gt;reset_n&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;qsys.ui.export_name&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk_in&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;BOTH&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;clk_reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset_n_out&lt;/name&gt;
                    &lt;role&gt;reset_n&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedDirectReset&lt;/key&gt;
                        &lt;value&gt;clk_in_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedResetSinks&lt;/key&gt;
                        &lt;value&gt;clk_in_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;BOTH&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk_out&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedDirectClock&lt;/key&gt;
                            &lt;value&gt;clk_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;200000000&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRateKnown&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;clk_in&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;in_clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;qsys.ui.export_name&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;200000000&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;clk_in_reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset_n&lt;/name&gt;
                        &lt;role&gt;reset_n&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;qsys.ui.export_name&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk_in&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;BOTH&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;clk_reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset_n_out&lt;/name&gt;
                        &lt;role&gt;reset_n&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedDirectReset&lt;/key&gt;
                            &lt;value&gt;clk_in_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedResetSinks&lt;/key&gt;
                            &lt;value&gt;clk_in_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;BOTH&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;clock_source&lt;/className&gt;
        &lt;displayName&gt;Clock Source&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;0&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;inputClockFrequency&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Long&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;clk_in&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;CLOCK_RATE&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;clk&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;clk&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;200000000&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;clk_in&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;clk_in&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;CLOCK_RATE&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;msgdma_bbb_clk&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;QUARTUS_SYNTH&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_clk&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VERILOG&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_clk&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VHDL&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_clk&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/msgdma_bbb/msgdma_bbb_clk.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="msgdma_bbb" as="clk" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_clk"</message>
  </messages>
 </entity>
 <entity kind="altera_generic_component" version="1.0" name="msgdma_bbb_csr">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="SYSINFO_ADDR_WIDTH" value="7" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;m0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;7&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;8&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;adaptsTo&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dBSBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamReads&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamWrites&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isAsynchronous&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isReadable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isWriteable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxAddressWidth&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;s0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;7&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;8&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;128&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;value&gt;csr.m0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;m0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;7&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;8&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;adaptsTo&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dBSBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamReads&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamWrites&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isAsynchronous&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isReadable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isWriteable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxAddressWidth&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;s0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;7&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;8&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;128&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                            &lt;value&gt;csr.m0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_avalon_mm_bridge&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Avalon-MM Pipeline Bridge Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;10&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;SYSINFO_ADDR_WIDTH&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Integer&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;m0&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;ADDRESS_WIDTH&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;m0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;m0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;7&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;s0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;s0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;msgdma_bbb_csr&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;QUARTUS_SYNTH&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_csr&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VERILOG&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_csr&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VHDL&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_csr&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/msgdma_bbb/msgdma_bbb_csr.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="msgdma_bbb" as="csr" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_csr"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="dma_core_dma_read_master">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_ADDRESS_WIDTH" value="50" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;Clock&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;Clock_reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;Clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;BOTH&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;Command_Sink&lt;/name&gt;
            &lt;type&gt;avalon_streaming&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;snk_command_data&lt;/name&gt;
                    &lt;role&gt;data&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;256&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;snk_command_valid&lt;/name&gt;
                    &lt;role&gt;valid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;snk_command_ready&lt;/name&gt;
                    &lt;role&gt;ready&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;Clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;Clock_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;beatsPerCycle&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;256&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;errorDescriptor&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxChannel&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;packetDescription&lt;/key&gt;
                        &lt;value&gt;&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;Data_Read_Master&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;master_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;50&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;master_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;master_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;master_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;master_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;master_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;master_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;adaptsTo&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;Clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;Clock_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dBSBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamReads&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamWrites&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isAsynchronous&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isReadable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isWriteable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxAddressWidth&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;Data_Source&lt;/name&gt;
            &lt;type&gt;avalon_streaming&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;src_data&lt;/name&gt;
                    &lt;role&gt;data&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;src_valid&lt;/name&gt;
                    &lt;role&gt;valid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;src_ready&lt;/name&gt;
                    &lt;role&gt;ready&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;Clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;Clock_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;beatsPerCycle&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;errorDescriptor&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxChannel&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;packetDescription&lt;/key&gt;
                        &lt;value&gt;&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                        &lt;value&gt;64&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;Response_Source&lt;/name&gt;
            &lt;type&gt;avalon_streaming&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;src_response_data&lt;/name&gt;
                    &lt;role&gt;data&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;256&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;src_response_valid&lt;/name&gt;
                    &lt;role&gt;valid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;src_response_ready&lt;/name&gt;
                    &lt;role&gt;ready&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;Clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;Clock_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;beatsPerCycle&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;256&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;errorDescriptor&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxChannel&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;packetDescription&lt;/key&gt;
                        &lt;value&gt;&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;Clock&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;Clock_reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;Clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;BOTH&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;Command_Sink&lt;/name&gt;
                &lt;type&gt;avalon_streaming&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;snk_command_data&lt;/name&gt;
                        &lt;role&gt;data&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;256&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;snk_command_valid&lt;/name&gt;
                        &lt;role&gt;valid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;snk_command_ready&lt;/name&gt;
                        &lt;role&gt;ready&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;Clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;Clock_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;beatsPerCycle&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;256&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;errorDescriptor&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxChannel&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;packetDescription&lt;/key&gt;
                            &lt;value&gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;Data_Read_Master&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;master_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;50&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;master_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;master_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;master_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;master_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;master_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;master_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;adaptsTo&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;Clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;Clock_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dBSBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamReads&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamWrites&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isAsynchronous&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isReadable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isWriteable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxAddressWidth&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;Data_Source&lt;/name&gt;
                &lt;type&gt;avalon_streaming&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;src_data&lt;/name&gt;
                        &lt;role&gt;data&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;src_valid&lt;/name&gt;
                        &lt;role&gt;valid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;src_ready&lt;/name&gt;
                        &lt;role&gt;ready&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;Clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;Clock_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;beatsPerCycle&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;errorDescriptor&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxChannel&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;packetDescription&lt;/key&gt;
                            &lt;value&gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                            &lt;value&gt;64&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;Response_Source&lt;/name&gt;
                &lt;type&gt;avalon_streaming&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;src_response_data&lt;/name&gt;
                        &lt;role&gt;data&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;256&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;src_response_valid&lt;/name&gt;
                        &lt;role&gt;valid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;src_response_ready&lt;/name&gt;
                        &lt;role&gt;ready&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;Clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;Clock_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;beatsPerCycle&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;256&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;errorDescriptor&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxChannel&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;packetDescription&lt;/key&gt;
                            &lt;value&gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;dma_read_master&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Read Master Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;32&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;AUTO_ADDRESS_WIDTH&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Integer&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;Data_Read_Master&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;ADDRESS_WIDTH&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;Data_Read_Master&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;Data_Read_Master&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;50&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;dma_core_dma_read_master&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;QUARTUS_SYNTH&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;dma_core_dma_read_master&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VERILOG&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;dma_core_dma_read_master&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VHDL&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;dma_core_dma_read_master&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/msgdma_bbb/dma_core_dma_read_master.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="msgdma_bbb" as="dma_read_master" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: dma_core_dma_read_master"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="dma_core_dma_write_master">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_ADDRESS_WIDTH" value="50" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;Clock&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;Clock_reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;Clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;BOTH&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;Command_Sink&lt;/name&gt;
            &lt;type&gt;avalon_streaming&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;snk_command_data&lt;/name&gt;
                    &lt;role&gt;data&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;256&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;snk_command_valid&lt;/name&gt;
                    &lt;role&gt;valid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;snk_command_ready&lt;/name&gt;
                    &lt;role&gt;ready&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;Clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;Clock_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;beatsPerCycle&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;256&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;errorDescriptor&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxChannel&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;packetDescription&lt;/key&gt;
                        &lt;value&gt;&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;Data_Sink&lt;/name&gt;
            &lt;type&gt;avalon_streaming&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;snk_data&lt;/name&gt;
                    &lt;role&gt;data&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;snk_valid&lt;/name&gt;
                    &lt;role&gt;valid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;snk_ready&lt;/name&gt;
                    &lt;role&gt;ready&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;Clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;Clock_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;beatsPerCycle&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;errorDescriptor&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxChannel&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;packetDescription&lt;/key&gt;
                        &lt;value&gt;&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                        &lt;value&gt;64&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;Data_Write_Master&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;master_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;50&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;master_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;master_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;master_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;master_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;master_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;adaptsTo&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;Clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;Clock_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dBSBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamReads&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamWrites&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isAsynchronous&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isReadable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isWriteable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxAddressWidth&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;Response_Source&lt;/name&gt;
            &lt;type&gt;avalon_streaming&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;src_response_data&lt;/name&gt;
                    &lt;role&gt;data&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;256&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;src_response_valid&lt;/name&gt;
                    &lt;role&gt;valid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;src_response_ready&lt;/name&gt;
                    &lt;role&gt;ready&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;Clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;Clock_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;beatsPerCycle&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;256&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;errorDescriptor&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxChannel&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;packetDescription&lt;/key&gt;
                        &lt;value&gt;&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;Clock&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;Clock_reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;Clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;BOTH&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;Command_Sink&lt;/name&gt;
                &lt;type&gt;avalon_streaming&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;snk_command_data&lt;/name&gt;
                        &lt;role&gt;data&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;256&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;snk_command_valid&lt;/name&gt;
                        &lt;role&gt;valid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;snk_command_ready&lt;/name&gt;
                        &lt;role&gt;ready&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;Clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;Clock_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;beatsPerCycle&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;256&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;errorDescriptor&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxChannel&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;packetDescription&lt;/key&gt;
                            &lt;value&gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;Data_Sink&lt;/name&gt;
                &lt;type&gt;avalon_streaming&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;snk_data&lt;/name&gt;
                        &lt;role&gt;data&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;snk_valid&lt;/name&gt;
                        &lt;role&gt;valid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;snk_ready&lt;/name&gt;
                        &lt;role&gt;ready&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;Clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;Clock_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;beatsPerCycle&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;errorDescriptor&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxChannel&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;packetDescription&lt;/key&gt;
                            &lt;value&gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                            &lt;value&gt;64&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;Data_Write_Master&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;master_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;50&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;master_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;master_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;master_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;master_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;master_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;adaptsTo&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;Clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;Clock_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dBSBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamReads&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamWrites&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isAsynchronous&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isReadable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isWriteable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxAddressWidth&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;Response_Source&lt;/name&gt;
                &lt;type&gt;avalon_streaming&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;src_response_data&lt;/name&gt;
                        &lt;role&gt;data&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;256&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;src_response_valid&lt;/name&gt;
                        &lt;role&gt;valid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;src_response_ready&lt;/name&gt;
                        &lt;role&gt;ready&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;Clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;Clock_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;beatsPerCycle&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;256&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;errorDescriptor&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxChannel&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;packetDescription&lt;/key&gt;
                            &lt;value&gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;dma_write_master&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Write Master Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;32&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;AUTO_ADDRESS_WIDTH&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Integer&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;Data_Write_Master&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;ADDRESS_WIDTH&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;Data_Write_Master&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;Data_Write_Master&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;50&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;dma_core_dma_write_master&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;QUARTUS_SYNTH&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;dma_core_dma_write_master&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VERILOG&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;dma_core_dma_write_master&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VHDL&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;dma_core_dma_write_master&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/msgdma_bbb/dma_core_dma_write_master.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="msgdma_bbb" as="dma_write_master" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: dma_core_dma_write_master"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="msgdma_bbb_magic_number_rom_0">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;BOTH&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;slave&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;2&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;burst&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;256&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;BOTH&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;slave&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;2&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;burst&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;256&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;magic_number_rom&lt;/className&gt;
        &lt;version&gt;1.0&lt;/version&gt;
        &lt;displayName&gt;Magic Number Rom&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors/&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;slave&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;slave&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name=&apos;slave&apos; start=&apos;0x0&apos; end=&apos;0x100&apos; datawidth=&apos;512&apos; /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                            &lt;value&gt;512&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;msgdma_bbb_magic_number_rom_0&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;msgdma_bbb_magic_number_rom_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_magic_number_rom_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;msgdma_bbb_magic_number_rom_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_magic_number_rom_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;msgdma_bbb_magic_number_rom_0&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_magic_number_rom_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter
     name="logicalView"
     value="ip/msgdma_bbb/msgdma_bbb_magic_number_rom_0.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="msgdma_bbb" as="magic_number_rom" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_magic_number_rom_0"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="dma_core_modular_sgdma_dispatcher_0">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;CSR&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;csr_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;csr_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;csr_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;4&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;csr_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;csr_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;csr_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;clock_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;Descriptor_Slave&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;descriptor_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;descriptor_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;descriptor_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;256&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;descriptor_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;32&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;clock_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;Read_Command_Source&lt;/name&gt;
            &lt;type&gt;avalon_streaming&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;src_read_master_data&lt;/name&gt;
                    &lt;role&gt;data&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;256&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;src_read_master_valid&lt;/name&gt;
                    &lt;role&gt;valid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;src_read_master_ready&lt;/name&gt;
                    &lt;role&gt;ready&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;clock_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;beatsPerCycle&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;256&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;errorDescriptor&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxChannel&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;packetDescription&lt;/key&gt;
                        &lt;value&gt;&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;Read_Response_Sink&lt;/name&gt;
            &lt;type&gt;avalon_streaming&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;snk_read_master_data&lt;/name&gt;
                    &lt;role&gt;data&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;256&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;snk_read_master_valid&lt;/name&gt;
                    &lt;role&gt;valid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;snk_read_master_ready&lt;/name&gt;
                    &lt;role&gt;ready&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;clock_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;beatsPerCycle&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;256&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;errorDescriptor&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxChannel&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;packetDescription&lt;/key&gt;
                        &lt;value&gt;&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;Write_Command_Source&lt;/name&gt;
            &lt;type&gt;avalon_streaming&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;src_write_master_data&lt;/name&gt;
                    &lt;role&gt;data&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;256&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;src_write_master_valid&lt;/name&gt;
                    &lt;role&gt;valid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;src_write_master_ready&lt;/name&gt;
                    &lt;role&gt;ready&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;clock_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;beatsPerCycle&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;256&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;errorDescriptor&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxChannel&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;packetDescription&lt;/key&gt;
                        &lt;value&gt;&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;Write_Response_Sink&lt;/name&gt;
            &lt;type&gt;avalon_streaming&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;snk_write_master_data&lt;/name&gt;
                    &lt;role&gt;data&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;256&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;snk_write_master_valid&lt;/name&gt;
                    &lt;role&gt;valid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;snk_write_master_ready&lt;/name&gt;
                    &lt;role&gt;ready&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;clock_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;beatsPerCycle&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;256&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;errorDescriptor&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                        &lt;value&gt;true&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxChannel&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;packetDescription&lt;/key&gt;
                        &lt;value&gt;&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readyLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;clock&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;clock_reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;BOTH&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;csr_irq&lt;/name&gt;
            &lt;type&gt;interrupt&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;csr_irq&lt;/name&gt;
                    &lt;role&gt;irq&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedAddressablePoint&lt;/key&gt;
                        &lt;value&gt;modular_sgdma_dispatcher_0.CSR&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;clock_reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedReceiverOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToReceiver&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;irqScheme&lt;/key&gt;
                        &lt;value&gt;NONE&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;CSR&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;csr_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;csr_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;csr_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;4&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;csr_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;csr_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;csr_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;clock_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;Descriptor_Slave&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;descriptor_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;descriptor_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;descriptor_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;256&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;descriptor_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;32&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;clock_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;Read_Command_Source&lt;/name&gt;
                &lt;type&gt;avalon_streaming&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;src_read_master_data&lt;/name&gt;
                        &lt;role&gt;data&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;256&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;src_read_master_valid&lt;/name&gt;
                        &lt;role&gt;valid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;src_read_master_ready&lt;/name&gt;
                        &lt;role&gt;ready&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;clock_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;beatsPerCycle&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;256&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;errorDescriptor&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxChannel&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;packetDescription&lt;/key&gt;
                            &lt;value&gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;Read_Response_Sink&lt;/name&gt;
                &lt;type&gt;avalon_streaming&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;snk_read_master_data&lt;/name&gt;
                        &lt;role&gt;data&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;256&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;snk_read_master_valid&lt;/name&gt;
                        &lt;role&gt;valid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;snk_read_master_ready&lt;/name&gt;
                        &lt;role&gt;ready&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;clock_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;beatsPerCycle&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;256&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;errorDescriptor&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxChannel&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;packetDescription&lt;/key&gt;
                            &lt;value&gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;Write_Command_Source&lt;/name&gt;
                &lt;type&gt;avalon_streaming&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;src_write_master_data&lt;/name&gt;
                        &lt;role&gt;data&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;256&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;src_write_master_valid&lt;/name&gt;
                        &lt;role&gt;valid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;src_write_master_ready&lt;/name&gt;
                        &lt;role&gt;ready&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;clock_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;beatsPerCycle&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;256&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;errorDescriptor&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxChannel&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;packetDescription&lt;/key&gt;
                            &lt;value&gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;Write_Response_Sink&lt;/name&gt;
                &lt;type&gt;avalon_streaming&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;snk_write_master_data&lt;/name&gt;
                        &lt;role&gt;data&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;256&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;snk_write_master_valid&lt;/name&gt;
                        &lt;role&gt;valid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;snk_write_master_ready&lt;/name&gt;
                        &lt;role&gt;ready&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;clock_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;beatsPerCycle&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dataBitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;256&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;emptyWithinPacket&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;errorDescriptor&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;firstSymbolInHighOrderBits&lt;/key&gt;
                            &lt;value&gt;true&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;highOrderSymbolAtMSB&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxChannel&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;packetDescription&lt;/key&gt;
                            &lt;value&gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readyLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;symbolsPerBeat&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;clock&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;clock_reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;BOTH&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;csr_irq&lt;/name&gt;
                &lt;type&gt;interrupt&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;csr_irq&lt;/name&gt;
                        &lt;role&gt;irq&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedAddressablePoint&lt;/key&gt;
                            &lt;value&gt;modular_sgdma_dispatcher_0.CSR&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;clock_reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedReceiverOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToReceiver&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;irqScheme&lt;/key&gt;
                            &lt;value&gt;NONE&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;modular_sgdma_dispatcher&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Modular SGDMA Dispatcher Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors/&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;CSR&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;CSR&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name=&apos;CSR&apos; start=&apos;0x0&apos; end=&apos;0x20&apos; datawidth=&apos;32&apos; /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;5&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;Descriptor_Slave&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;Descriptor_Slave&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name=&apos;Descriptor_Slave&apos; start=&apos;0x0&apos; end=&apos;0x20&apos; datawidth=&apos;256&apos; /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;5&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                            &lt;value&gt;256&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;dma_core_modular_sgdma_dispatcher_0&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;QUARTUS_SYNTH&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;dma_core_modular_sgdma_dispatcher_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VERILOG&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;dma_core_modular_sgdma_dispatcher_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VHDL&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;dma_core_modular_sgdma_dispatcher_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter
     name="logicalView"
     value="ip/msgdma_bbb/dma_core_modular_sgdma_dispatcher_0.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.BURST_ENABLE&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.BURST_WRAPPING_SUPPORT&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.DATA_FIFO_DEPTH&lt;/key&gt;
            &lt;value&gt;32&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.DATA_WIDTH&lt;/key&gt;
            &lt;value&gt;32&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.DESCRIPTOR_FIFO_DEPTH&lt;/key&gt;
            &lt;value&gt;128&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.ENHANCED_FEATURES&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.MAX_BURST_COUNT&lt;/key&gt;
            &lt;value&gt;2&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.MAX_BYTE&lt;/key&gt;
            &lt;value&gt;1024&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.MAX_STRIDE&lt;/key&gt;
            &lt;value&gt;1&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.PROGRAMMABLE_BURST_ENABLE&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.RESPONSE_FIFO_DEPTH&lt;/key&gt;
            &lt;value&gt;256&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.RESPONSE_PORT&lt;/key&gt;
            &lt;value&gt;2&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.STRIDE_ENABLE&lt;/key&gt;
            &lt;value&gt;0&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;embeddedsw.CMacro.TRANSFER_TYPE&lt;/key&gt;
            &lt;value&gt;Aligned Accesses&lt;/value&gt;
        &lt;/entry&gt;
    &lt;/assignmentValueMap&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="msgdma_bbb" as="modular_sgdma_dispatcher_0" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: dma_core_modular_sgdma_dispatcher_0"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="msgdma_bbb_afu_id_avmm_slave_0">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;afu_cfg_slave&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;avmm_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avmm_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avmm_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avmm_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;avmm_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;64&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;clock&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clock&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;BOTH&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;afu_cfg_slave&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;avmm_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avmm_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avmm_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avmm_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;avmm_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;64&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;clock&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clock&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;BOTH&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;afu_id_avmm_slave&lt;/className&gt;
        &lt;version&gt;1.0&lt;/version&gt;
        &lt;displayName&gt;afu_id_avmm_slave&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors/&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;afu_cfg_slave&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;afu_cfg_slave&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                            &lt;value&gt;&amp;lt;address-map&amp;gt;&amp;lt;slave name=&apos;afu_cfg_slave&apos; start=&apos;0x0&apos; end=&apos;0x40&apos; datawidth=&apos;64&apos; /&amp;gt;&amp;lt;/address-map&amp;gt;&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;6&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                            &lt;value&gt;64&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;msgdma_bbb_afu_id_avmm_slave_0&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;QUARTUS_SYNTH&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_afu_id_avmm_slave_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VERILOG&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_afu_id_avmm_slave_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VHDL&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_afu_id_avmm_slave_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter
     name="logicalView"
     value="ip/msgdma_bbb/msgdma_bbb_afu_id_avmm_slave_0.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="msgdma_bbb" as="msgdma_bbb_afu_id_avmm_slave_0" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_afu_id_avmm_slave_0"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="dma_core_pipe_stage_dma_read">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="SYSINFO_ADDR_WIDTH" value="50" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;m0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;50&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;adaptsTo&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dBSBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamReads&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamWrites&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isAsynchronous&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isReadable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isWriteable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxAddressWidth&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;s0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;50&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;1125899906842624&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;value&gt;pipe_stage_dma_read.m0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;64&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;m0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;50&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;adaptsTo&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dBSBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamReads&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamWrites&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isAsynchronous&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isReadable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isWriteable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxAddressWidth&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;s0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;50&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;1125899906842624&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                            &lt;value&gt;pipe_stage_dma_read.m0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;64&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_avalon_mm_bridge&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Avalon-MM Pipeline Bridge Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;10&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;SYSINFO_ADDR_WIDTH&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Integer&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;m0&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;ADDRESS_WIDTH&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;m0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;m0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;50&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;s0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;s0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;dma_core_pipe_stage_dma_read&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;QUARTUS_SYNTH&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;dma_core_pipe_stage_dma_read&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VERILOG&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;dma_core_pipe_stage_dma_read&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VHDL&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;dma_core_pipe_stage_dma_read&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter
     name="logicalView"
     value="ip/msgdma_bbb/dma_core_pipe_stage_dma_read.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="msgdma_bbb" as="pipe_stage_dma_read" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: dma_core_pipe_stage_dma_read"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="dma_core_pipe_stage_dma_write">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="SYSINFO_ADDR_WIDTH" value="50" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;m0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;50&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;adaptsTo&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dBSBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamReads&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamWrites&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isAsynchronous&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isReadable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isWriteable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxAddressWidth&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;s0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;50&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;1125899906842624&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;value&gt;pipe_stage_dma_write.m0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;64&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;m0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;50&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;adaptsTo&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dBSBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamReads&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamWrites&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isAsynchronous&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isReadable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isWriteable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxAddressWidth&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;s0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;50&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;1125899906842624&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                            &lt;value&gt;pipe_stage_dma_write.m0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;64&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_avalon_mm_bridge&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Avalon-MM Pipeline Bridge Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;10&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;SYSINFO_ADDR_WIDTH&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Integer&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;m0&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;ADDRESS_WIDTH&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;m0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;m0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;50&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;s0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;s0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;dma_core_pipe_stage_dma_write&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;QUARTUS_SYNTH&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;dma_core_pipe_stage_dma_write&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VERILOG&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;dma_core_pipe_stage_dma_write&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VHDL&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;dma_core_pipe_stage_dma_write&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter
     name="logicalView"
     value="ip/msgdma_bbb/dma_core_pipe_stage_dma_write.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="msgdma_bbb" as="pipe_stage_dma_write" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: dma_core_pipe_stage_dma_write"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="msgdma_bbb_pipe_stage_m">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="SYSINFO_ADDR_WIDTH" value="10" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;m0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;48&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;adaptsTo&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dBSBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamReads&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamWrites&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isAsynchronous&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isReadable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isWriteable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxAddressWidth&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;s0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;48&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;281474976710656&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;value&gt;pipe_stage_host_rd.m0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;64&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;m0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;48&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;adaptsTo&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dBSBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamReads&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamWrites&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isAsynchronous&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isReadable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isWriteable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxAddressWidth&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;s0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;48&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;281474976710656&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                            &lt;value&gt;pipe_stage_host_rd.m0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;64&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_avalon_mm_bridge&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Avalon-MM Pipeline Bridge Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;10&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;SYSINFO_ADDR_WIDTH&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Integer&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;m0&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;ADDRESS_WIDTH&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;m0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;m0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;10&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;s0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;s0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;msgdma_bbb_pipe_stage_m&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;QUARTUS_SYNTH&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_pipe_stage_m&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VERILOG&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_pipe_stage_m&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VHDL&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_pipe_stage_m&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/msgdma_bbb/msgdma_bbb_pipe_stage_m.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="msgdma_bbb" as="pipe_stage_host_rd" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_pipe_stage_m"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="msgdma_bbb_mm_bridge_1">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="SYSINFO_ADDR_WIDTH" value="10" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;m0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;49&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;adaptsTo&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dBSBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamReads&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamWrites&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isAsynchronous&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isReadable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isWriteable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxAddressWidth&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;s0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;49&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;562949953421312&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;value&gt;pipe_stage_host_wr.m0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;64&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;m0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;49&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;adaptsTo&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dBSBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamReads&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamWrites&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isAsynchronous&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isReadable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isWriteable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxAddressWidth&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;s0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;49&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;562949953421312&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                            &lt;value&gt;pipe_stage_host_wr.m0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;64&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_avalon_mm_bridge&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Avalon-MM Pipeline Bridge Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;10&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;SYSINFO_ADDR_WIDTH&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Integer&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;m0&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;ADDRESS_WIDTH&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;m0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;m0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;10&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;s0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;s0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;msgdma_bbb_mm_bridge_1&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;QUARTUS_SYNTH&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_mm_bridge_1&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VERILOG&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_mm_bridge_1&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VHDL&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_mm_bridge_1&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/msgdma_bbb/msgdma_bbb_mm_bridge_1.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="msgdma_bbb" as="pipe_stage_host_wr" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_mm_bridge_1"</message>
  </messages>
 </entity>
 <entity
   kind="altera_generic_component"
   version="1.0"
   name="msgdma_bbb_mm_bridge_0">
  <parameter name="hlsFile" value="" />
  <parameter name="svInterfaceDefinition" value="" />
  <parameter name="SYSINFO_ADDR_WIDTH" value="10" />
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter
     name="defaultBoundary"
     value="&lt;boundaryDefinition&gt;
    &lt;interfaces&gt;
        &lt;interface&gt;
            &lt;name&gt;clk&lt;/name&gt;
            &lt;type&gt;clock&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;clk&lt;/name&gt;
                    &lt;role&gt;clk&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;clockRate&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;externallyDriven&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;ptfSchematicName&lt;/key&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;m0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;true&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;48&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;m0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;adaptsTo&lt;/key&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;dBSBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamReads&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;doStreamWrites&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isAsynchronous&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isReadable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isWriteable&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maxAddressWidth&lt;/key&gt;
                        &lt;value&gt;32&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;reset&lt;/name&gt;
            &lt;type&gt;reset&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;reset&lt;/name&gt;
                    &lt;role&gt;reset&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap/&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;synchronousEdges&lt;/key&gt;
                        &lt;value&gt;DEASSERT&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
        &lt;interface&gt;
            &lt;name&gt;s0&lt;/name&gt;
            &lt;type&gt;avalon&lt;/type&gt;
            &lt;isStart&gt;false&lt;/isStart&gt;
            &lt;ports&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_waitrequest&lt;/name&gt;
                    &lt;role&gt;waitrequest&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdata&lt;/name&gt;
                    &lt;role&gt;readdata&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                    &lt;role&gt;readdatavalid&lt;/role&gt;
                    &lt;direction&gt;Output&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_burstcount&lt;/name&gt;
                    &lt;role&gt;burstcount&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;3&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_writedata&lt;/name&gt;
                    &lt;role&gt;writedata&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;512&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_address&lt;/name&gt;
                    &lt;role&gt;address&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;48&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_write&lt;/name&gt;
                    &lt;role&gt;write&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_read&lt;/name&gt;
                    &lt;role&gt;read&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_byteenable&lt;/name&gt;
                    &lt;role&gt;byteenable&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;64&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                &lt;/port&gt;
                &lt;port&gt;
                    &lt;name&gt;s0_debugaccess&lt;/name&gt;
                    &lt;role&gt;debugaccess&lt;/role&gt;
                    &lt;direction&gt;Input&lt;/direction&gt;
                    &lt;width&gt;1&lt;/width&gt;
                    &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                    &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                &lt;/port&gt;
            &lt;/ports&gt;
            &lt;assignments&gt;
                &lt;assignmentValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/assignmentValueMap&gt;
            &lt;/assignments&gt;
            &lt;parameters&gt;
                &lt;parameterValueMap&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressAlignment&lt;/key&gt;
                        &lt;value&gt;DYNAMIC&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressGroup&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressSpan&lt;/key&gt;
                        &lt;value&gt;281474976710656&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;addressUnits&lt;/key&gt;
                        &lt;value&gt;SYMBOLS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedClock&lt;/key&gt;
                        &lt;value&gt;clk&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;associatedReset&lt;/key&gt;
                        &lt;value&gt;reset&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                        &lt;value&gt;8&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;bridgesToMaster&lt;/key&gt;
                        &lt;value&gt;pipe_stage_mem.m0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;burstcountUnits&lt;/key&gt;
                        &lt;value&gt;WORDS&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;holdTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;interleaveBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isBigEndian&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isFlash&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isMemoryDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;linewrapBursts&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                        &lt;value&gt;64&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumReadLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                        &lt;value&gt;1&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;prSafe&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;printableDevice&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;readWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;setupTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;timingUnits&lt;/key&gt;
                        &lt;value&gt;Cycles&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;transparentBridge&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                        &lt;value&gt;false&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeLatency&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitStates&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                    &lt;entry&gt;
                        &lt;key&gt;writeWaitTime&lt;/key&gt;
                        &lt;value&gt;0&lt;/value&gt;
                    &lt;/entry&gt;
                &lt;/parameterValueMap&gt;
            &lt;/parameters&gt;
        &lt;/interface&gt;
    &lt;/interfaces&gt;
&lt;/boundaryDefinition&gt;" />
  <parameter
     name="componentDefinition"
     value="&lt;componentDefinition&gt;
    &lt;boundary&gt;
        &lt;interfaces&gt;
            &lt;interface&gt;
                &lt;name&gt;clk&lt;/name&gt;
                &lt;type&gt;clock&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;clk&lt;/name&gt;
                        &lt;role&gt;clk&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;clockRate&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;externallyDriven&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ptfSchematicName&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;m0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;true&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;48&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;m0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;adaptsTo&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;dBSBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamReads&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;doStreamWrites&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isAsynchronous&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isReadable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isWriteable&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maxAddressWidth&lt;/key&gt;
                            &lt;value&gt;32&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;reset&lt;/name&gt;
                &lt;type&gt;reset&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;reset&lt;/name&gt;
                        &lt;role&gt;reset&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap/&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;synchronousEdges&lt;/key&gt;
                            &lt;value&gt;DEASSERT&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
            &lt;interface&gt;
                &lt;name&gt;s0&lt;/name&gt;
                &lt;type&gt;avalon&lt;/type&gt;
                &lt;isStart&gt;false&lt;/isStart&gt;
                &lt;ports&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_waitrequest&lt;/name&gt;
                        &lt;role&gt;waitrequest&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdata&lt;/name&gt;
                        &lt;role&gt;readdata&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_readdatavalid&lt;/name&gt;
                        &lt;role&gt;readdatavalid&lt;/role&gt;
                        &lt;direction&gt;Output&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_burstcount&lt;/name&gt;
                        &lt;role&gt;burstcount&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;3&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_writedata&lt;/name&gt;
                        &lt;role&gt;writedata&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;512&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_address&lt;/name&gt;
                        &lt;role&gt;address&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;48&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_write&lt;/name&gt;
                        &lt;role&gt;write&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_read&lt;/name&gt;
                        &lt;role&gt;read&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_byteenable&lt;/name&gt;
                        &lt;role&gt;byteenable&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;64&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC_VECTOR&lt;/vhdlType&gt;
                    &lt;/port&gt;
                    &lt;port&gt;
                        &lt;name&gt;s0_debugaccess&lt;/name&gt;
                        &lt;role&gt;debugaccess&lt;/role&gt;
                        &lt;direction&gt;Input&lt;/direction&gt;
                        &lt;width&gt;1&lt;/width&gt;
                        &lt;lowerBound&gt;0&lt;/lowerBound&gt;
                        &lt;vhdlType&gt;STD_LOGIC&lt;/vhdlType&gt;
                    &lt;/port&gt;
                &lt;/ports&gt;
                &lt;assignments&gt;
                    &lt;assignmentValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isFlash&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;embeddedsw.configuration.isPrintableDevice&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/assignmentValueMap&gt;
                &lt;/assignments&gt;
                &lt;parameters&gt;
                    &lt;parameterValueMap&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressAlignment&lt;/key&gt;
                            &lt;value&gt;DYNAMIC&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressGroup&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressSpan&lt;/key&gt;
                            &lt;value&gt;281474976710656&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;addressUnits&lt;/key&gt;
                            &lt;value&gt;SYMBOLS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;alwaysBurstMaxBurst&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedClock&lt;/key&gt;
                            &lt;value&gt;clk&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;associatedReset&lt;/key&gt;
                            &lt;value&gt;reset&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bitsPerSymbol&lt;/key&gt;
                            &lt;value&gt;8&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgedAddressOffset&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;bridgesToMaster&lt;/key&gt;
                            &lt;value&gt;pipe_stage_mem.m0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstOnBurstBoundariesOnly&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;burstcountUnits&lt;/key&gt;
                            &lt;value&gt;WORDS&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;constantBurstBehavior&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;explicitAddressSpan&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;holdTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;interleaveBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isBigEndian&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isFlash&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isMemoryDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;isNonVolatileStorage&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;linewrapBursts&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingReadTransactions&lt;/key&gt;
                            &lt;value&gt;64&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;maximumPendingWriteTransactions&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumReadLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumResponseLatency&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;minimumUninterruptedRunLength&lt;/key&gt;
                            &lt;value&gt;1&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;prSafe&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;printableDevice&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;readWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerIncomingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;registerOutgoingSignals&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;setupTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;timingUnits&lt;/key&gt;
                            &lt;value&gt;Cycles&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;transparentBridge&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;waitrequestAllowance&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;wellBehavedWaitrequest&lt;/key&gt;
                            &lt;value&gt;false&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeLatency&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitStates&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;writeWaitTime&lt;/key&gt;
                            &lt;value&gt;0&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/parameterValueMap&gt;
                &lt;/parameters&gt;
            &lt;/interface&gt;
        &lt;/interfaces&gt;
    &lt;/boundary&gt;
    &lt;originalModuleInfo&gt;
        &lt;className&gt;altera_avalon_mm_bridge&lt;/className&gt;
        &lt;version&gt;19.1&lt;/version&gt;
        &lt;displayName&gt;Avalon-MM Pipeline Bridge Intel FPGA IP&lt;/displayName&gt;
    &lt;/originalModuleInfo&gt;
    &lt;systemInfoParameterDescriptors&gt;
        &lt;descriptors&gt;
            &lt;descriptor&gt;
                &lt;parameterDefaultValue&gt;10&lt;/parameterDefaultValue&gt;
                &lt;parameterName&gt;SYSINFO_ADDR_WIDTH&lt;/parameterName&gt;
                &lt;parameterType&gt;java.lang.Integer&lt;/parameterType&gt;
                &lt;systemInfoArgs&gt;m0&lt;/systemInfoArgs&gt;
                &lt;systemInfotype&gt;ADDRESS_WIDTH&lt;/systemInfotype&gt;
            &lt;/descriptor&gt;
        &lt;/descriptors&gt;
    &lt;/systemInfoParameterDescriptors&gt;
    &lt;systemInfos&gt;
        &lt;connPtSystemInfos&gt;
            &lt;entry&gt;
                &lt;key&gt;m0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;m0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos/&gt;
                    &lt;consumedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                            &lt;value&gt;10&lt;/value&gt;
                        &lt;/entry&gt;
                    &lt;/consumedSystemInfos&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;s0&lt;/key&gt;
                &lt;value&gt;
                    &lt;connectionPointName&gt;s0&lt;/connectionPointName&gt;
                    &lt;suppliedSystemInfos&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_MAP&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;ADDRESS_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                        &lt;entry&gt;
                            &lt;key&gt;MAX_SLAVE_DATA_WIDTH&lt;/key&gt;
                        &lt;/entry&gt;
                    &lt;/suppliedSystemInfos&gt;
                    &lt;consumedSystemInfos/&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/connPtSystemInfos&gt;
    &lt;/systemInfos&gt;
&lt;/componentDefinition&gt;" />
  <parameter
     name="generationInfoDefinition"
     value="&lt;generationInfoDefinition&gt;
    &lt;hdlLibraryName&gt;msgdma_bbb_mm_bridge_0&lt;/hdlLibraryName&gt;
    &lt;fileSets&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;QUARTUS_SYNTH&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_mm_bridge_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;QUARTUS_SYNTH&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VERILOG&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_mm_bridge_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VERILOG&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
        &lt;fileSet&gt;
            &lt;fileSetName&gt;SIM_VHDL&lt;/fileSetName&gt;
            &lt;fileSetFixedName&gt;msgdma_bbb_mm_bridge_0&lt;/fileSetFixedName&gt;
            &lt;fileSetKind&gt;SIM_VHDL&lt;/fileSetKind&gt;
            &lt;fileSetFiles/&gt;
        &lt;/fileSet&gt;
    &lt;/fileSets&gt;
&lt;/generationInfoDefinition&gt;" />
  <parameter name="logicalView" value="ip/msgdma_bbb/msgdma_bbb_mm_bridge_0.ip" />
  <parameter
     name="moduleAssignmentDefinition"
     value="&lt;assignmentDefinition&gt;
    &lt;assignmentValueMap/&gt;
&lt;/assignmentDefinition&gt;" />
  <generatedFiles/>
  <childGeneratedFiles/>
  <sourceFiles/>
  <childSourceFiles/>
  <instantiator instantiator="msgdma_bbb" as="pipe_stage_mem" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_mm_bridge_0"</message>
  </messages>
 </entity>
 <entity
   kind="altera_mm_interconnect"
   version="19.1"
   name="msgdma_bbb_altera_mm_interconnect_191_jmxhaza">
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="AUTO_DEVICE_SPEEDGRADE" value="" />
  <parameter
     name="COMPOSE_CONTENTS"
     value="add_instance {dma_read_master_Data_Read_Master_translator} {altera_merlin_master_translator};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_ADDRESS_W} {50};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_DATA_W} {512};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_BURSTCOUNT_W} {3};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_BYTEENABLE_W} {64};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {UAV_ADDRESS_W} {50};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {UAV_BURSTCOUNT_W} {9};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_READLATENCY} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_READDATA} {1};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_WRITEDATA} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_READ} {1};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_WRITE} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_ADDRESS} {1};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_DEBUGACCESS} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_CLKEN} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_LOCK} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_SYMBOLS_PER_WORD} {64};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_CONSTANT_BURST_BEHAVIOR} {1};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {1};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {64};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {SYNC_RESET} {0};set_instance_parameter_value {dma_read_master_Data_Read_Master_translator} {WAITREQUEST_ALLOWANCE} {0};add_instance {pipe_stage_dma_read_s0_translator} {altera_merlin_slave_translator};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_ADDRESS_W} {50};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_DATA_W} {512};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {UAV_DATA_W} {512};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_BURSTCOUNT_W} {3};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_BYTEENABLE_W} {64};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {UAV_BYTEENABLE_W} {64};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {UAV_ADDRESS_W} {50};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {UAV_BURSTCOUNT_W} {9};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_READLATENCY} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_READ_WAIT} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_READDATA} {1};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_READ} {1};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_WRITE} {1};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_ADDRESS} {1};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_LOCK} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_DEBUGACCESS} {1};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_SYMBOLS_PER_WORD} {64};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {64};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {pipe_stage_dma_read_s0_translator} {SYNC_RESET} {0};add_instance {pipe_stage_dma_read_reset_reset_bridge} {altera_reset_bridge};set_instance_parameter_value {pipe_stage_dma_read_reset_reset_bridge} {ACTIVE_LOW_RESET} {0};set_instance_parameter_value {pipe_stage_dma_read_reset_reset_bridge} {SYNCHRONOUS_EDGES} {deassert};set_instance_parameter_value {pipe_stage_dma_read_reset_reset_bridge} {NUM_RESET_OUTPUTS} {1};set_instance_parameter_value {pipe_stage_dma_read_reset_reset_bridge} {USE_RESET_REQUEST} {0};set_instance_parameter_value {pipe_stage_dma_read_reset_reset_bridge} {SYNC_RESET} {0};add_instance {clk_clk_clock_bridge} {altera_clock_bridge};set_instance_parameter_value {clk_clk_clock_bridge} {EXPLICIT_CLOCK_RATE} {200000000};set_instance_parameter_value {clk_clk_clock_bridge} {NUM_CLOCK_OUTPUTS} {1};add_connection {dma_read_master_Data_Read_Master_translator.avalon_universal_master_0} {pipe_stage_dma_read_s0_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {dma_read_master_Data_Read_Master_translator.avalon_universal_master_0/pipe_stage_dma_read_s0_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {dma_read_master_Data_Read_Master_translator.avalon_universal_master_0/pipe_stage_dma_read_s0_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {dma_read_master_Data_Read_Master_translator.avalon_universal_master_0/pipe_stage_dma_read_s0_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {dma_read_master_Data_Read_Master_translator.avalon_universal_master_0/pipe_stage_dma_read_s0_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {dma_read_master_Data_Read_Master_translator.avalon_universal_master_0/pipe_stage_dma_read_s0_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {0};set_connection_parameter_value {dma_read_master_Data_Read_Master_translator.avalon_universal_master_0/pipe_stage_dma_read_s0_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {dma_read_master_Data_Read_Master_translator.avalon_universal_master_0/pipe_stage_dma_read_s0_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {dma_read_master_Data_Read_Master_translator.avalon_universal_master_0/pipe_stage_dma_read_s0_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {dma_read_master_Data_Read_Master_translator.avalon_universal_master_0/pipe_stage_dma_read_s0_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {dma_read_master_Data_Read_Master_translator.avalon_universal_master_0/pipe_stage_dma_read_s0_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {dma_read_master_Data_Read_Master_translator.avalon_universal_master_0/pipe_stage_dma_read_s0_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {dma_read_master_Data_Read_Master_translator.avalon_universal_master_0/pipe_stage_dma_read_s0_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {dma_read_master_Data_Read_Master_translator.avalon_universal_master_0/pipe_stage_dma_read_s0_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {dma_read_master_Data_Read_Master_translator.avalon_universal_master_0/pipe_stage_dma_read_s0_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {pipe_stage_dma_read_reset_reset_bridge.out_reset} {dma_read_master_Data_Read_Master_translator.reset} {reset};add_connection {pipe_stage_dma_read_reset_reset_bridge.out_reset} {pipe_stage_dma_read_s0_translator.reset} {reset};add_connection {clk_clk_clock_bridge.out_clk} {dma_read_master_Data_Read_Master_translator.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_dma_read_s0_translator.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_dma_read_reset_reset_bridge.clk} {clock};add_interface {dma_read_master_Data_Read_Master} {avalon} {slave};set_interface_property {dma_read_master_Data_Read_Master} {EXPORT_OF} {dma_read_master_Data_Read_Master_translator.avalon_anti_master_0};add_interface {pipe_stage_dma_read_s0} {avalon} {master};set_interface_property {pipe_stage_dma_read_s0} {EXPORT_OF} {pipe_stage_dma_read_s0_translator.avalon_anti_slave_0};add_interface {pipe_stage_dma_read_reset_reset_bridge_in_reset} {reset} {slave};set_interface_property {pipe_stage_dma_read_reset_reset_bridge_in_reset} {EXPORT_OF} {pipe_stage_dma_read_reset_reset_bridge.in_reset};add_interface {clk_clk} {clock} {slave};set_interface_property {clk_clk} {EXPORT_OF} {clk_clk_clock_bridge.in_clk};set_module_assignment {interconnect_id.dma_read_master.Data_Read_Master} {0};set_module_assignment {interconnect_id.pipe_stage_dma_read.s0} {0};" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_mm_interconnect_191/synth/msgdma_bbb_altera_mm_interconnect_191_jmxhaza.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_mm_interconnect_191/synth/msgdma_bbb_altera_mm_interconnect_191_jmxhaza.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_mm_interconnect/altera_mm_interconnect_hw.tcl" />
  </sourceFiles>
  <childSourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_translator/altera_merlin_master_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_translator/altera_merlin_slave_translator_hw.tcl" />
  </childSourceFiles>
  <instantiator instantiator="msgdma_bbb" as="mm_interconnect_0" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_mm_interconnect_191_jmxhaza"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_master_translator_191_g7h47bq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_slave_translator_191_x56fcki"</message>
  </messages>
 </entity>
 <entity
   kind="altera_mm_interconnect"
   version="19.1"
   name="msgdma_bbb_altera_mm_interconnect_191_32dta6a">
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="AUTO_DEVICE_SPEEDGRADE" value="" />
  <parameter
     name="COMPOSE_CONTENTS"
     value="add_instance {dma_write_master_Data_Write_Master_translator} {altera_merlin_master_translator};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_ADDRESS_W} {50};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_DATA_W} {512};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_BURSTCOUNT_W} {3};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_BYTEENABLE_W} {64};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {UAV_ADDRESS_W} {50};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {UAV_BURSTCOUNT_W} {9};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_READLATENCY} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_READDATA} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_READ} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_WRITE} {1};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_ADDRESS} {1};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_DEBUGACCESS} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_CLKEN} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_READDATAVALID} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_LOCK} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_SYMBOLS_PER_WORD} {64};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_CONSTANT_BURST_BEHAVIOR} {1};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {1};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {64};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {SYNC_RESET} {0};set_instance_parameter_value {dma_write_master_Data_Write_Master_translator} {WAITREQUEST_ALLOWANCE} {0};add_instance {pipe_stage_dma_write_s0_translator} {altera_merlin_slave_translator};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_ADDRESS_W} {50};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_DATA_W} {512};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {UAV_DATA_W} {512};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_BURSTCOUNT_W} {3};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_BYTEENABLE_W} {64};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {UAV_BYTEENABLE_W} {64};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {UAV_ADDRESS_W} {50};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {UAV_BURSTCOUNT_W} {9};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_READLATENCY} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_READ_WAIT} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_READDATA} {1};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_READ} {1};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_WRITE} {1};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_ADDRESS} {1};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_LOCK} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_DEBUGACCESS} {1};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_SYMBOLS_PER_WORD} {64};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {64};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {pipe_stage_dma_write_s0_translator} {SYNC_RESET} {0};add_instance {pipe_stage_dma_write_reset_reset_bridge} {altera_reset_bridge};set_instance_parameter_value {pipe_stage_dma_write_reset_reset_bridge} {ACTIVE_LOW_RESET} {0};set_instance_parameter_value {pipe_stage_dma_write_reset_reset_bridge} {SYNCHRONOUS_EDGES} {deassert};set_instance_parameter_value {pipe_stage_dma_write_reset_reset_bridge} {NUM_RESET_OUTPUTS} {1};set_instance_parameter_value {pipe_stage_dma_write_reset_reset_bridge} {USE_RESET_REQUEST} {0};set_instance_parameter_value {pipe_stage_dma_write_reset_reset_bridge} {SYNC_RESET} {0};add_instance {clk_clk_clock_bridge} {altera_clock_bridge};set_instance_parameter_value {clk_clk_clock_bridge} {EXPLICIT_CLOCK_RATE} {200000000};set_instance_parameter_value {clk_clk_clock_bridge} {NUM_CLOCK_OUTPUTS} {1};add_connection {dma_write_master_Data_Write_Master_translator.avalon_universal_master_0} {pipe_stage_dma_write_s0_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {dma_write_master_Data_Write_Master_translator.avalon_universal_master_0/pipe_stage_dma_write_s0_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {dma_write_master_Data_Write_Master_translator.avalon_universal_master_0/pipe_stage_dma_write_s0_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {dma_write_master_Data_Write_Master_translator.avalon_universal_master_0/pipe_stage_dma_write_s0_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {dma_write_master_Data_Write_Master_translator.avalon_universal_master_0/pipe_stage_dma_write_s0_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {dma_write_master_Data_Write_Master_translator.avalon_universal_master_0/pipe_stage_dma_write_s0_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {0};set_connection_parameter_value {dma_write_master_Data_Write_Master_translator.avalon_universal_master_0/pipe_stage_dma_write_s0_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {dma_write_master_Data_Write_Master_translator.avalon_universal_master_0/pipe_stage_dma_write_s0_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {dma_write_master_Data_Write_Master_translator.avalon_universal_master_0/pipe_stage_dma_write_s0_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {dma_write_master_Data_Write_Master_translator.avalon_universal_master_0/pipe_stage_dma_write_s0_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {dma_write_master_Data_Write_Master_translator.avalon_universal_master_0/pipe_stage_dma_write_s0_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {dma_write_master_Data_Write_Master_translator.avalon_universal_master_0/pipe_stage_dma_write_s0_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {dma_write_master_Data_Write_Master_translator.avalon_universal_master_0/pipe_stage_dma_write_s0_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {dma_write_master_Data_Write_Master_translator.avalon_universal_master_0/pipe_stage_dma_write_s0_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {dma_write_master_Data_Write_Master_translator.avalon_universal_master_0/pipe_stage_dma_write_s0_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {dma_write_master_Data_Write_Master_translator.reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {pipe_stage_dma_write_s0_translator.reset} {reset};add_connection {clk_clk_clock_bridge.out_clk} {dma_write_master_Data_Write_Master_translator.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_dma_write_s0_translator.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_dma_write_reset_reset_bridge.clk} {clock};add_interface {dma_write_master_Data_Write_Master} {avalon} {slave};set_interface_property {dma_write_master_Data_Write_Master} {EXPORT_OF} {dma_write_master_Data_Write_Master_translator.avalon_anti_master_0};add_interface {pipe_stage_dma_write_s0} {avalon} {master};set_interface_property {pipe_stage_dma_write_s0} {EXPORT_OF} {pipe_stage_dma_write_s0_translator.avalon_anti_slave_0};add_interface {pipe_stage_dma_write_reset_reset_bridge_in_reset} {reset} {slave};set_interface_property {pipe_stage_dma_write_reset_reset_bridge_in_reset} {EXPORT_OF} {pipe_stage_dma_write_reset_reset_bridge.in_reset};add_interface {clk_clk} {clock} {slave};set_interface_property {clk_clk} {EXPORT_OF} {clk_clk_clock_bridge.in_clk};set_module_assignment {interconnect_id.dma_write_master.Data_Write_Master} {0};set_module_assignment {interconnect_id.pipe_stage_dma_write.s0} {0};" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_mm_interconnect_191/synth/msgdma_bbb_altera_mm_interconnect_191_32dta6a.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_mm_interconnect_191/synth/msgdma_bbb_altera_mm_interconnect_191_32dta6a.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_mm_interconnect/altera_mm_interconnect_hw.tcl" />
  </sourceFiles>
  <childSourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_translator/altera_merlin_master_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_translator/altera_merlin_slave_translator_hw.tcl" />
  </childSourceFiles>
  <instantiator instantiator="msgdma_bbb" as="mm_interconnect_1" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_mm_interconnect_191_32dta6a"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_master_translator_191_g7h47bq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_slave_translator_191_x56fcki"</message>
  </messages>
 </entity>
 <entity
   kind="altera_mm_interconnect"
   version="19.1"
   name="msgdma_bbb_altera_mm_interconnect_191_shqzigy">
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="AUTO_DEVICE_SPEEDGRADE" value="" />
  <parameter
     name="COMPOSE_CONTENTS"
     value="add_instance {csr_m0_translator} {altera_merlin_master_translator};set_instance_parameter_value {csr_m0_translator} {AV_ADDRESS_W} {7};set_instance_parameter_value {csr_m0_translator} {AV_DATA_W} {64};set_instance_parameter_value {csr_m0_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {csr_m0_translator} {AV_BYTEENABLE_W} {8};set_instance_parameter_value {csr_m0_translator} {UAV_ADDRESS_W} {7};set_instance_parameter_value {csr_m0_translator} {UAV_BURSTCOUNT_W} {4};set_instance_parameter_value {csr_m0_translator} {AV_READLATENCY} {0};set_instance_parameter_value {csr_m0_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {csr_m0_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {csr_m0_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {csr_m0_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {csr_m0_translator} {USE_READDATA} {1};set_instance_parameter_value {csr_m0_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {csr_m0_translator} {USE_READ} {1};set_instance_parameter_value {csr_m0_translator} {USE_WRITE} {1};set_instance_parameter_value {csr_m0_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {csr_m0_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {csr_m0_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {csr_m0_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {csr_m0_translator} {USE_ADDRESS} {1};set_instance_parameter_value {csr_m0_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {csr_m0_translator} {USE_DEBUGACCESS} {1};set_instance_parameter_value {csr_m0_translator} {USE_CLKEN} {0};set_instance_parameter_value {csr_m0_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {csr_m0_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {csr_m0_translator} {USE_LOCK} {0};set_instance_parameter_value {csr_m0_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {csr_m0_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {csr_m0_translator} {AV_SYMBOLS_PER_WORD} {8};set_instance_parameter_value {csr_m0_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {csr_m0_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {csr_m0_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {csr_m0_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {csr_m0_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {csr_m0_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {64};set_instance_parameter_value {csr_m0_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {csr_m0_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {csr_m0_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {csr_m0_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {csr_m0_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {csr_m0_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {csr_m0_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {csr_m0_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {csr_m0_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {csr_m0_translator} {SYNC_RESET} {0};set_instance_parameter_value {csr_m0_translator} {WAITREQUEST_ALLOWANCE} {0};add_instance {modular_sgdma_dispatcher_0_CSR_translator} {altera_merlin_slave_translator};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_ADDRESS_W} {3};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_DATA_W} {32};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {UAV_DATA_W} {32};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_BYTEENABLE_W} {4};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {UAV_BYTEENABLE_W} {4};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {UAV_ADDRESS_W} {7};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {UAV_BURSTCOUNT_W} {3};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_READLATENCY} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_READDATA} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_READ} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_WRITE} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_ADDRESS} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_BURSTCOUNT} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_READDATAVALID} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_WAITREQUEST} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_LOCK} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_DEBUGACCESS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_SYMBOLS_PER_WORD} {4};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_ADDRESS_SYMBOLS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_translator} {SYNC_RESET} {0};add_instance {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {altera_merlin_slave_translator};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_ADDRESS_W} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_DATA_W} {256};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {UAV_DATA_W} {256};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_BYTEENABLE_W} {32};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {UAV_BYTEENABLE_W} {32};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {UAV_ADDRESS_W} {7};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {UAV_BURSTCOUNT_W} {6};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_READLATENCY} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_READDATA} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_READ} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_WRITE} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_ADDRESS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_BURSTCOUNT} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_READDATAVALID} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_LOCK} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_DEBUGACCESS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_SYMBOLS_PER_WORD} {32};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_ADDRESS_SYMBOLS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_translator} {SYNC_RESET} {0};add_instance {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {altera_merlin_slave_translator};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_ADDRESS_W} {3};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_DATA_W} {64};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {UAV_DATA_W} {64};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_BURSTCOUNT_W} {1};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_BYTEENABLE_W} {8};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {UAV_BYTEENABLE_W} {8};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {UAV_ADDRESS_W} {7};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {UAV_BURSTCOUNT_W} {4};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_READLATENCY} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_READDATA} {1};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_READ} {1};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_WRITE} {1};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_BYTEENABLE} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_ADDRESS} {1};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_BURSTCOUNT} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_READDATAVALID} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_WAITREQUEST} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_LOCK} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_DEBUGACCESS} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_SYMBOLS_PER_WORD} {8};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_ADDRESS_SYMBOLS} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {1};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator} {SYNC_RESET} {0};add_instance {csr_m0_agent} {altera_merlin_master_agent};set_instance_parameter_value {csr_m0_agent} {PKT_WUNIQUE} {126};set_instance_parameter_value {csr_m0_agent} {PKT_DOMAIN_H} {125};set_instance_parameter_value {csr_m0_agent} {PKT_DOMAIN_L} {124};set_instance_parameter_value {csr_m0_agent} {PKT_SNOOP_H} {123};set_instance_parameter_value {csr_m0_agent} {PKT_SNOOP_L} {120};set_instance_parameter_value {csr_m0_agent} {PKT_BARRIER_H} {119};set_instance_parameter_value {csr_m0_agent} {PKT_BARRIER_L} {118};set_instance_parameter_value {csr_m0_agent} {PKT_ORI_BURST_SIZE_H} {117};set_instance_parameter_value {csr_m0_agent} {PKT_ORI_BURST_SIZE_L} {115};set_instance_parameter_value {csr_m0_agent} {PKT_RESPONSE_STATUS_H} {114};set_instance_parameter_value {csr_m0_agent} {PKT_RESPONSE_STATUS_L} {113};set_instance_parameter_value {csr_m0_agent} {PKT_QOS_H} {100};set_instance_parameter_value {csr_m0_agent} {PKT_QOS_L} {100};set_instance_parameter_value {csr_m0_agent} {PKT_DATA_SIDEBAND_H} {98};set_instance_parameter_value {csr_m0_agent} {PKT_DATA_SIDEBAND_L} {98};set_instance_parameter_value {csr_m0_agent} {PKT_ADDR_SIDEBAND_H} {97};set_instance_parameter_value {csr_m0_agent} {PKT_ADDR_SIDEBAND_L} {97};set_instance_parameter_value {csr_m0_agent} {PKT_BURST_TYPE_H} {96};set_instance_parameter_value {csr_m0_agent} {PKT_BURST_TYPE_L} {95};set_instance_parameter_value {csr_m0_agent} {PKT_CACHE_H} {112};set_instance_parameter_value {csr_m0_agent} {PKT_CACHE_L} {109};set_instance_parameter_value {csr_m0_agent} {PKT_THREAD_ID_H} {105};set_instance_parameter_value {csr_m0_agent} {PKT_THREAD_ID_L} {105};set_instance_parameter_value {csr_m0_agent} {PKT_BURST_SIZE_H} {94};set_instance_parameter_value {csr_m0_agent} {PKT_BURST_SIZE_L} {92};set_instance_parameter_value {csr_m0_agent} {PKT_TRANS_EXCLUSIVE} {84};set_instance_parameter_value {csr_m0_agent} {PKT_TRANS_LOCK} {83};set_instance_parameter_value {csr_m0_agent} {PKT_BEGIN_BURST} {99};set_instance_parameter_value {csr_m0_agent} {PKT_PROTECTION_H} {108};set_instance_parameter_value {csr_m0_agent} {PKT_PROTECTION_L} {106};set_instance_parameter_value {csr_m0_agent} {PKT_BURSTWRAP_H} {91};set_instance_parameter_value {csr_m0_agent} {PKT_BURSTWRAP_L} {91};set_instance_parameter_value {csr_m0_agent} {PKT_BYTE_CNT_H} {90};set_instance_parameter_value {csr_m0_agent} {PKT_BYTE_CNT_L} {85};set_instance_parameter_value {csr_m0_agent} {PKT_ADDR_H} {78};set_instance_parameter_value {csr_m0_agent} {PKT_ADDR_L} {72};set_instance_parameter_value {csr_m0_agent} {PKT_TRANS_COMPRESSED_READ} {79};set_instance_parameter_value {csr_m0_agent} {PKT_TRANS_POSTED} {80};set_instance_parameter_value {csr_m0_agent} {PKT_TRANS_WRITE} {81};set_instance_parameter_value {csr_m0_agent} {PKT_TRANS_READ} {82};set_instance_parameter_value {csr_m0_agent} {PKT_DATA_H} {63};set_instance_parameter_value {csr_m0_agent} {PKT_DATA_L} {0};set_instance_parameter_value {csr_m0_agent} {PKT_BYTEEN_H} {71};set_instance_parameter_value {csr_m0_agent} {PKT_BYTEEN_L} {64};set_instance_parameter_value {csr_m0_agent} {PKT_SRC_ID_H} {102};set_instance_parameter_value {csr_m0_agent} {PKT_SRC_ID_L} {101};set_instance_parameter_value {csr_m0_agent} {PKT_DEST_ID_H} {104};set_instance_parameter_value {csr_m0_agent} {PKT_DEST_ID_L} {103};set_instance_parameter_value {csr_m0_agent} {ST_DATA_W} {127};set_instance_parameter_value {csr_m0_agent} {ST_CHANNEL_W} {3};set_instance_parameter_value {csr_m0_agent} {AV_BURSTCOUNT_W} {4};set_instance_parameter_value {csr_m0_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {csr_m0_agent} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {csr_m0_agent} {MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {csr_m0_agent} {ADDR_MAP} {&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;address_map&gt;
 &lt;slave
   id=&quot;0&quot;
   name=&quot;modular_sgdma_dispatcher_0_CSR_translator.avalon_universal_slave_0&quot;
   start=&quot;0x0000000000000040&quot;
   end=&quot;0x00000000000000060&quot;
   responds=&quot;1&quot;
   user_default=&quot;0&quot; /&gt;
 &lt;slave
   id=&quot;1&quot;
   name=&quot;modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_universal_slave_0&quot;
   start=&quot;0x0000000000000060&quot;
   end=&quot;0x00000000000000080&quot;
   responds=&quot;0&quot;
   user_default=&quot;0&quot; /&gt;
 &lt;slave
   id=&quot;2&quot;
   name=&quot;msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0&quot;
   start=&quot;0x0000000000000000&quot;
   end=&quot;0x00000000000000040&quot;
   responds=&quot;1&quot;
   user_default=&quot;0&quot; /&gt;
&lt;/address_map&gt;
};set_instance_parameter_value {csr_m0_agent} {SUPPRESS_0_BYTEEN_RSP} {1};set_instance_parameter_value {csr_m0_agent} {ID} {0};set_instance_parameter_value {csr_m0_agent} {BURSTWRAP_VALUE} {1};set_instance_parameter_value {csr_m0_agent} {CACHE_VALUE} {0};set_instance_parameter_value {csr_m0_agent} {SECURE_ACCESS_BIT} {1};set_instance_parameter_value {csr_m0_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {csr_m0_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {csr_m0_agent} {DOMAIN_VALUE} {3};set_instance_parameter_value {csr_m0_agent} {BARRIER_VALUE} {0};set_instance_parameter_value {csr_m0_agent} {SNOOP_VALUE} {0};set_instance_parameter_value {csr_m0_agent} {WUNIQUE_VALUE} {0};set_instance_parameter_value {csr_m0_agent} {SYNC_RESET} {0};add_instance {modular_sgdma_dispatcher_0_CSR_agent} {altera_merlin_slave_agent};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_ORI_BURST_SIZE_H} {81};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_ORI_BURST_SIZE_L} {79};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_RESPONSE_STATUS_H} {78};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_RESPONSE_STATUS_L} {77};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_BURST_SIZE_H} {58};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_BURST_SIZE_L} {56};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_TRANS_LOCK} {47};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_BEGIN_BURST} {63};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_PROTECTION_H} {72};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_PROTECTION_L} {70};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_BURSTWRAP_H} {55};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_BURSTWRAP_L} {55};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_BYTE_CNT_H} {54};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_BYTE_CNT_L} {49};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_ADDR_H} {42};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_ADDR_L} {36};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_TRANS_COMPRESSED_READ} {43};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_TRANS_POSTED} {44};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_TRANS_WRITE} {45};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_TRANS_READ} {46};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_DATA_H} {31};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_DATA_L} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_BYTEEN_H} {35};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_BYTEEN_L} {32};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_SRC_ID_H} {66};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_SRC_ID_L} {65};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_DEST_ID_H} {68};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_DEST_ID_L} {67};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {ST_CHANNEL_W} {3};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {ST_DATA_W} {91};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {AVS_BURSTCOUNT_W} {3};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {MERLIN_PACKET_FORMAT} {wunique(90) domain(89:88) snoop(87:84) barrier(83:82) ori_burst_size(81:79) response_status(78:77) cache(76:73) protection(72:70) thread_id(69) dest_id(68:67) src_id(66:65) qos(64) begin_burst(63) data_sideband(62) addr_sideband(61) burst_type(60:59) burst_size(58:56) burstwrap(55) byte_cnt(54:49) trans_exclusive(48) trans_lock(47) trans_read(46) trans_write(45) trans_posted(44) trans_compressed_read(43) addr(42:36) byteen(35:32) data(31:0)};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {SUPPRESS_0_BYTEEN_CMD} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {MAX_BYTE_CNT} {4};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {MAX_BURSTWRAP} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {ID} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {ECC_ENABLE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent} {SYNC_RESET} {0};add_instance {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo} {BITS_PER_SYMBOL} {92};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo} {SYNC_RESET} {0};add_instance {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {altera_merlin_slave_agent};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_ORI_BURST_SIZE_H} {333};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_ORI_BURST_SIZE_L} {331};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_RESPONSE_STATUS_H} {330};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_RESPONSE_STATUS_L} {329};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_BURST_SIZE_H} {310};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_BURST_SIZE_L} {308};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_TRANS_LOCK} {299};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_BEGIN_BURST} {315};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_PROTECTION_H} {324};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_PROTECTION_L} {322};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_BURSTWRAP_H} {307};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_BURSTWRAP_L} {307};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_BYTE_CNT_H} {306};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_BYTE_CNT_L} {301};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_ADDR_H} {294};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_ADDR_L} {288};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_TRANS_COMPRESSED_READ} {295};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_TRANS_POSTED} {296};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_TRANS_WRITE} {297};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_TRANS_READ} {298};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_DATA_H} {255};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_DATA_L} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_BYTEEN_H} {287};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_BYTEEN_L} {256};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_SRC_ID_H} {318};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_SRC_ID_L} {317};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_DEST_ID_H} {320};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_DEST_ID_L} {319};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {ST_CHANNEL_W} {3};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {ST_DATA_W} {343};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {AVS_BURSTCOUNT_W} {6};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {MERLIN_PACKET_FORMAT} {wunique(342) domain(341:340) snoop(339:336) barrier(335:334) ori_burst_size(333:331) response_status(330:329) cache(328:325) protection(324:322) thread_id(321) dest_id(320:319) src_id(318:317) qos(316) begin_burst(315) data_sideband(314) addr_sideband(313) burst_type(312:311) burst_size(310:308) burstwrap(307) byte_cnt(306:301) trans_exclusive(300) trans_lock(299) trans_read(298) trans_write(297) trans_posted(296) trans_compressed_read(295) addr(294:288) byteen(287:256) data(255:0)};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {SUPPRESS_0_BYTEEN_CMD} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {MAX_BYTE_CNT} {32};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {MAX_BURSTWRAP} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {ID} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {ECC_ENABLE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent} {SYNC_RESET} {0};add_instance {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo} {BITS_PER_SYMBOL} {344};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo} {SYNC_RESET} {0};add_instance {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {altera_merlin_slave_agent};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_ORI_BURST_SIZE_H} {117};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_ORI_BURST_SIZE_L} {115};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_RESPONSE_STATUS_H} {114};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_RESPONSE_STATUS_L} {113};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BURST_SIZE_H} {94};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BURST_SIZE_L} {92};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_TRANS_LOCK} {83};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BEGIN_BURST} {99};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_PROTECTION_H} {108};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_PROTECTION_L} {106};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BURSTWRAP_H} {91};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BURSTWRAP_L} {91};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BYTE_CNT_H} {90};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BYTE_CNT_L} {85};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_ADDR_H} {78};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_ADDR_L} {72};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_TRANS_COMPRESSED_READ} {79};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_TRANS_POSTED} {80};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_TRANS_WRITE} {81};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_TRANS_READ} {82};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_DATA_H} {63};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_DATA_L} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BYTEEN_H} {71};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_BYTEEN_L} {64};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_SRC_ID_H} {102};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_SRC_ID_L} {101};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_DEST_ID_H} {104};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_DEST_ID_L} {103};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {ST_CHANNEL_W} {3};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {ST_DATA_W} {127};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {AVS_BURSTCOUNT_W} {4};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {SUPPRESS_0_BYTEEN_CMD} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {MAX_BYTE_CNT} {8};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {MAX_BURSTWRAP} {1};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {ID} {2};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {ECC_ENABLE} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent} {SYNC_RESET} {0};add_instance {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {BITS_PER_SYMBOL} {128};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};set_instance_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo} {SYNC_RESET} {0};add_instance {router} {altera_merlin_router};set_instance_parameter_value {router} {DESTINATION_ID} {2 0 1 };set_instance_parameter_value {router} {CHANNEL_ID} {100 001 010 };set_instance_parameter_value {router} {TYPE_OF_TRANSACTION} {both both write };set_instance_parameter_value {router} {START_ADDRESS} {0x0 0x40 0x60 };set_instance_parameter_value {router} {END_ADDRESS} {0x40 0x60 0x80 };set_instance_parameter_value {router} {NON_SECURED_TAG} {1 1 1 };set_instance_parameter_value {router} {SECURED_RANGE_PAIRS} {0 0 0 };set_instance_parameter_value {router} {SECURED_RANGE_LIST} {0 0 0 };set_instance_parameter_value {router} {SPAN_OFFSET} {};set_instance_parameter_value {router} {PKT_ADDR_H} {78};set_instance_parameter_value {router} {PKT_ADDR_L} {72};set_instance_parameter_value {router} {PKT_PROTECTION_H} {108};set_instance_parameter_value {router} {PKT_PROTECTION_L} {106};set_instance_parameter_value {router} {PKT_DEST_ID_H} {104};set_instance_parameter_value {router} {PKT_DEST_ID_L} {103};set_instance_parameter_value {router} {PKT_TRANS_WRITE} {81};set_instance_parameter_value {router} {PKT_TRANS_READ} {82};set_instance_parameter_value {router} {ST_DATA_W} {127};set_instance_parameter_value {router} {ST_CHANNEL_W} {3};set_instance_parameter_value {router} {DECODER_TYPE} {0};set_instance_parameter_value {router} {DEFAULT_CHANNEL} {2};set_instance_parameter_value {router} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router} {DEFAULT_DESTID} {2};set_instance_parameter_value {router} {MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {router} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router} {SYNC_RESET} {0};add_instance {router_001} {altera_merlin_router};set_instance_parameter_value {router_001} {DESTINATION_ID} {0 };set_instance_parameter_value {router_001} {CHANNEL_ID} {1 };set_instance_parameter_value {router_001} {TYPE_OF_TRANSACTION} {both };set_instance_parameter_value {router_001} {START_ADDRESS} {0x0 };set_instance_parameter_value {router_001} {END_ADDRESS} {0x0 };set_instance_parameter_value {router_001} {NON_SECURED_TAG} {1 };set_instance_parameter_value {router_001} {SECURED_RANGE_PAIRS} {0 };set_instance_parameter_value {router_001} {SECURED_RANGE_LIST} {0 };set_instance_parameter_value {router_001} {SPAN_OFFSET} {};set_instance_parameter_value {router_001} {PKT_ADDR_H} {42};set_instance_parameter_value {router_001} {PKT_ADDR_L} {36};set_instance_parameter_value {router_001} {PKT_PROTECTION_H} {72};set_instance_parameter_value {router_001} {PKT_PROTECTION_L} {70};set_instance_parameter_value {router_001} {PKT_DEST_ID_H} {68};set_instance_parameter_value {router_001} {PKT_DEST_ID_L} {67};set_instance_parameter_value {router_001} {PKT_TRANS_WRITE} {45};set_instance_parameter_value {router_001} {PKT_TRANS_READ} {46};set_instance_parameter_value {router_001} {ST_DATA_W} {91};set_instance_parameter_value {router_001} {ST_CHANNEL_W} {3};set_instance_parameter_value {router_001} {DECODER_TYPE} {1};set_instance_parameter_value {router_001} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_001} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_001} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_001} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_001} {MERLIN_PACKET_FORMAT} {wunique(90) domain(89:88) snoop(87:84) barrier(83:82) ori_burst_size(81:79) response_status(78:77) cache(76:73) protection(72:70) thread_id(69) dest_id(68:67) src_id(66:65) qos(64) begin_burst(63) data_sideband(62) addr_sideband(61) burst_type(60:59) burst_size(58:56) burstwrap(55) byte_cnt(54:49) trans_exclusive(48) trans_lock(47) trans_read(46) trans_write(45) trans_posted(44) trans_compressed_read(43) addr(42:36) byteen(35:32) data(31:0)};set_instance_parameter_value {router_001} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router_001} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router_001} {SYNC_RESET} {0};add_instance {router_002} {altera_merlin_router};set_instance_parameter_value {router_002} {DESTINATION_ID} {0 };set_instance_parameter_value {router_002} {CHANNEL_ID} {1 };set_instance_parameter_value {router_002} {TYPE_OF_TRANSACTION} {both };set_instance_parameter_value {router_002} {START_ADDRESS} {0x0 };set_instance_parameter_value {router_002} {END_ADDRESS} {0x0 };set_instance_parameter_value {router_002} {NON_SECURED_TAG} {1 };set_instance_parameter_value {router_002} {SECURED_RANGE_PAIRS} {0 };set_instance_parameter_value {router_002} {SECURED_RANGE_LIST} {0 };set_instance_parameter_value {router_002} {SPAN_OFFSET} {};set_instance_parameter_value {router_002} {PKT_ADDR_H} {294};set_instance_parameter_value {router_002} {PKT_ADDR_L} {288};set_instance_parameter_value {router_002} {PKT_PROTECTION_H} {324};set_instance_parameter_value {router_002} {PKT_PROTECTION_L} {322};set_instance_parameter_value {router_002} {PKT_DEST_ID_H} {320};set_instance_parameter_value {router_002} {PKT_DEST_ID_L} {319};set_instance_parameter_value {router_002} {PKT_TRANS_WRITE} {297};set_instance_parameter_value {router_002} {PKT_TRANS_READ} {298};set_instance_parameter_value {router_002} {ST_DATA_W} {343};set_instance_parameter_value {router_002} {ST_CHANNEL_W} {3};set_instance_parameter_value {router_002} {DECODER_TYPE} {1};set_instance_parameter_value {router_002} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_002} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_002} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_002} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_002} {MERLIN_PACKET_FORMAT} {wunique(342) domain(341:340) snoop(339:336) barrier(335:334) ori_burst_size(333:331) response_status(330:329) cache(328:325) protection(324:322) thread_id(321) dest_id(320:319) src_id(318:317) qos(316) begin_burst(315) data_sideband(314) addr_sideband(313) burst_type(312:311) burst_size(310:308) burstwrap(307) byte_cnt(306:301) trans_exclusive(300) trans_lock(299) trans_read(298) trans_write(297) trans_posted(296) trans_compressed_read(295) addr(294:288) byteen(287:256) data(255:0)};set_instance_parameter_value {router_002} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router_002} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router_002} {SYNC_RESET} {0};add_instance {router_003} {altera_merlin_router};set_instance_parameter_value {router_003} {DESTINATION_ID} {0 };set_instance_parameter_value {router_003} {CHANNEL_ID} {1 };set_instance_parameter_value {router_003} {TYPE_OF_TRANSACTION} {both };set_instance_parameter_value {router_003} {START_ADDRESS} {0x0 };set_instance_parameter_value {router_003} {END_ADDRESS} {0x0 };set_instance_parameter_value {router_003} {NON_SECURED_TAG} {1 };set_instance_parameter_value {router_003} {SECURED_RANGE_PAIRS} {0 };set_instance_parameter_value {router_003} {SECURED_RANGE_LIST} {0 };set_instance_parameter_value {router_003} {SPAN_OFFSET} {};set_instance_parameter_value {router_003} {PKT_ADDR_H} {78};set_instance_parameter_value {router_003} {PKT_ADDR_L} {72};set_instance_parameter_value {router_003} {PKT_PROTECTION_H} {108};set_instance_parameter_value {router_003} {PKT_PROTECTION_L} {106};set_instance_parameter_value {router_003} {PKT_DEST_ID_H} {104};set_instance_parameter_value {router_003} {PKT_DEST_ID_L} {103};set_instance_parameter_value {router_003} {PKT_TRANS_WRITE} {81};set_instance_parameter_value {router_003} {PKT_TRANS_READ} {82};set_instance_parameter_value {router_003} {ST_DATA_W} {127};set_instance_parameter_value {router_003} {ST_CHANNEL_W} {3};set_instance_parameter_value {router_003} {DECODER_TYPE} {1};set_instance_parameter_value {router_003} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_003} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_003} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_003} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_003} {MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {router_003} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router_003} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router_003} {SYNC_RESET} {0};add_instance {csr_m0_limiter} {altera_merlin_traffic_limiter};set_instance_parameter_value {csr_m0_limiter} {SYNC_RESET} {0};set_instance_parameter_value {csr_m0_limiter} {PKT_DEST_ID_H} {104};set_instance_parameter_value {csr_m0_limiter} {PKT_DEST_ID_L} {103};set_instance_parameter_value {csr_m0_limiter} {PKT_SRC_ID_H} {102};set_instance_parameter_value {csr_m0_limiter} {PKT_SRC_ID_L} {101};set_instance_parameter_value {csr_m0_limiter} {PKT_BYTE_CNT_H} {90};set_instance_parameter_value {csr_m0_limiter} {PKT_BYTE_CNT_L} {85};set_instance_parameter_value {csr_m0_limiter} {PKT_BYTEEN_H} {71};set_instance_parameter_value {csr_m0_limiter} {PKT_BYTEEN_L} {64};set_instance_parameter_value {csr_m0_limiter} {PKT_TRANS_POSTED} {80};set_instance_parameter_value {csr_m0_limiter} {PKT_TRANS_WRITE} {81};set_instance_parameter_value {csr_m0_limiter} {PKT_THREAD_ID_H} {105};set_instance_parameter_value {csr_m0_limiter} {PKT_THREAD_ID_L} {105};set_instance_parameter_value {csr_m0_limiter} {MAX_BURST_LENGTH} {1};set_instance_parameter_value {csr_m0_limiter} {MAX_OUTSTANDING_RESPONSES} {4};set_instance_parameter_value {csr_m0_limiter} {PIPELINED} {0};set_instance_parameter_value {csr_m0_limiter} {ST_DATA_W} {127};set_instance_parameter_value {csr_m0_limiter} {ST_CHANNEL_W} {3};set_instance_parameter_value {csr_m0_limiter} {VALID_WIDTH} {3};set_instance_parameter_value {csr_m0_limiter} {ENFORCE_ORDER} {1};set_instance_parameter_value {csr_m0_limiter} {PREVENT_HAZARDS} {0};set_instance_parameter_value {csr_m0_limiter} {SUPPORTS_POSTED_WRITES} {1};set_instance_parameter_value {csr_m0_limiter} {SUPPORTS_NONPOSTED_WRITES} {0};set_instance_parameter_value {csr_m0_limiter} {MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {csr_m0_limiter} {REORDER} {0};add_instance {modular_sgdma_dispatcher_0_CSR_burst_adapter} {altera_merlin_burst_adapter};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PKT_ADDR_H} {42};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PKT_ADDR_L} {36};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PKT_BEGIN_BURST} {63};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PKT_BYTE_CNT_H} {54};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PKT_BYTE_CNT_L} {49};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PKT_BYTEEN_H} {35};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PKT_BYTEEN_L} {32};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PKT_BURST_SIZE_H} {58};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PKT_BURST_SIZE_L} {56};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PKT_BURST_TYPE_H} {60};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PKT_BURST_TYPE_L} {59};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PKT_BURSTWRAP_H} {55};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PKT_BURSTWRAP_L} {55};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PKT_TRANS_COMPRESSED_READ} {43};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PKT_TRANS_WRITE} {45};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PKT_TRANS_READ} {46};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {OUT_NARROW_SIZE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {IN_NARROW_SIZE} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {OUT_FIXED} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {OUT_COMPLETE_WRAP} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {ST_DATA_W} {91};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {ST_CHANNEL_W} {3};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {OUT_BYTE_CNT_H} {51};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {OUT_BURSTWRAP_H} {55};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {MERLIN_PACKET_FORMAT} {wunique(90) domain(89:88) snoop(87:84) barrier(83:82) ori_burst_size(81:79) response_status(78:77) cache(76:73) protection(72:70) thread_id(69) dest_id(68:67) src_id(66:65) qos(64) begin_burst(63) data_sideband(62) addr_sideband(61) burst_type(60:59) burst_size(58:56) burstwrap(55) byte_cnt(54:49) trans_exclusive(48) trans_lock(47) trans_read(46) trans_write(45) trans_posted(44) trans_compressed_read(43) addr(42:36) byteen(35:32) data(31:0)};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {COMPRESSED_READ_SUPPORT} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {BYTEENABLE_SYNTHESIS} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {PIPE_INPUTS} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {NO_WRAP_SUPPORT} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {INCOMPLETE_WRAP_SUPPORT} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {BURSTWRAP_CONST_MASK} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {BURSTWRAP_CONST_VALUE} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {ADAPTER_VERSION} {13.1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_burst_adapter} {SYNC_RESET} {0};add_instance {cmd_demux} {altera_merlin_demultiplexer};set_instance_parameter_value {cmd_demux} {ST_DATA_W} {127};set_instance_parameter_value {cmd_demux} {ST_CHANNEL_W} {3};set_instance_parameter_value {cmd_demux} {NUM_OUTPUTS} {3};set_instance_parameter_value {cmd_demux} {VALID_WIDTH} {3};set_instance_parameter_value {cmd_demux} {MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {cmd_demux} {SYNC_RESET} {0};add_instance {cmd_mux} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux} {ST_DATA_W} {127};set_instance_parameter_value {cmd_mux} {ST_CHANNEL_W} {3};set_instance_parameter_value {cmd_mux} {NUM_INPUTS} {1};set_instance_parameter_value {cmd_mux} {PIPELINE_ARB} {0};set_instance_parameter_value {cmd_mux} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux} {PKT_TRANS_LOCK} {83};set_instance_parameter_value {cmd_mux} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux} {ARBITRATION_SHARES} {1 };set_instance_parameter_value {cmd_mux} {MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {cmd_mux} {SYNC_RESET} {0};add_instance {cmd_mux_001} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux_001} {ST_DATA_W} {127};set_instance_parameter_value {cmd_mux_001} {ST_CHANNEL_W} {3};set_instance_parameter_value {cmd_mux_001} {NUM_INPUTS} {1};set_instance_parameter_value {cmd_mux_001} {PIPELINE_ARB} {0};set_instance_parameter_value {cmd_mux_001} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux_001} {PKT_TRANS_LOCK} {83};set_instance_parameter_value {cmd_mux_001} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux_001} {ARBITRATION_SHARES} {1 };set_instance_parameter_value {cmd_mux_001} {MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {cmd_mux_001} {SYNC_RESET} {0};add_instance {cmd_mux_002} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux_002} {ST_DATA_W} {127};set_instance_parameter_value {cmd_mux_002} {ST_CHANNEL_W} {3};set_instance_parameter_value {cmd_mux_002} {NUM_INPUTS} {1};set_instance_parameter_value {cmd_mux_002} {PIPELINE_ARB} {0};set_instance_parameter_value {cmd_mux_002} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux_002} {PKT_TRANS_LOCK} {83};set_instance_parameter_value {cmd_mux_002} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux_002} {ARBITRATION_SHARES} {1 };set_instance_parameter_value {cmd_mux_002} {MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {cmd_mux_002} {SYNC_RESET} {0};add_instance {rsp_demux} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux} {ST_DATA_W} {127};set_instance_parameter_value {rsp_demux} {ST_CHANNEL_W} {3};set_instance_parameter_value {rsp_demux} {NUM_OUTPUTS} {1};set_instance_parameter_value {rsp_demux} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux} {MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {rsp_demux} {SYNC_RESET} {0};add_instance {rsp_demux_001} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux_001} {ST_DATA_W} {127};set_instance_parameter_value {rsp_demux_001} {ST_CHANNEL_W} {3};set_instance_parameter_value {rsp_demux_001} {NUM_OUTPUTS} {1};set_instance_parameter_value {rsp_demux_001} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux_001} {MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {rsp_demux_001} {SYNC_RESET} {0};add_instance {rsp_demux_002} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux_002} {ST_DATA_W} {127};set_instance_parameter_value {rsp_demux_002} {ST_CHANNEL_W} {3};set_instance_parameter_value {rsp_demux_002} {NUM_OUTPUTS} {1};set_instance_parameter_value {rsp_demux_002} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux_002} {MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {rsp_demux_002} {SYNC_RESET} {0};add_instance {rsp_mux} {altera_merlin_multiplexer};set_instance_parameter_value {rsp_mux} {ST_DATA_W} {127};set_instance_parameter_value {rsp_mux} {ST_CHANNEL_W} {3};set_instance_parameter_value {rsp_mux} {NUM_INPUTS} {3};set_instance_parameter_value {rsp_mux} {PIPELINE_ARB} {0};set_instance_parameter_value {rsp_mux} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {rsp_mux} {PKT_TRANS_LOCK} {83};set_instance_parameter_value {rsp_mux} {ARBITRATION_SCHEME} {no-arb};set_instance_parameter_value {rsp_mux} {ARBITRATION_SHARES} {1 1 1 };set_instance_parameter_value {rsp_mux} {MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {rsp_mux} {SYNC_RESET} {0};add_instance {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {altera_merlin_width_adapter};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_ADDR_H} {78};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_ADDR_L} {72};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_DATA_H} {63};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_DATA_L} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_BYTEEN_H} {71};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_BYTEEN_L} {64};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_BYTE_CNT_H} {90};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_BYTE_CNT_L} {85};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_TRANS_COMPRESSED_READ} {79};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_TRANS_WRITE} {81};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_BURSTWRAP_H} {91};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_BURSTWRAP_L} {91};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_BURST_SIZE_H} {94};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_BURST_SIZE_L} {92};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_RESPONSE_STATUS_H} {114};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_RESPONSE_STATUS_L} {113};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_TRANS_EXCLUSIVE} {84};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_BURST_TYPE_H} {96};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_BURST_TYPE_L} {95};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_ORI_BURST_SIZE_L} {115};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_PKT_ORI_BURST_SIZE_H} {117};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_ST_DATA_W} {127};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_ADDR_H} {294};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_ADDR_L} {288};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_DATA_H} {255};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_DATA_L} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_BYTEEN_H} {287};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_BYTEEN_L} {256};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_BYTE_CNT_H} {306};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_BYTE_CNT_L} {301};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_TRANS_COMPRESSED_READ} {295};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_BURST_SIZE_H} {310};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_BURST_SIZE_L} {308};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_RESPONSE_STATUS_H} {330};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_RESPONSE_STATUS_L} {329};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_TRANS_EXCLUSIVE} {300};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_BURST_TYPE_H} {312};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_BURST_TYPE_L} {311};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_ORI_BURST_SIZE_L} {331};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_PKT_ORI_BURST_SIZE_H} {333};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_ST_DATA_W} {343};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {ST_CHANNEL_W} {3};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OPTIMIZE_FOR_RSP} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {RESPONSE_PATH} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {CONSTANT_BURST_SIZE} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {PACKING} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {IN_MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {OUT_MERLIN_PACKET_FORMAT} {wunique(342) domain(341:340) snoop(339:336) barrier(335:334) ori_burst_size(333:331) response_status(330:329) cache(328:325) protection(324:322) thread_id(321) dest_id(320:319) src_id(318:317) qos(316) begin_burst(315) data_sideband(314) addr_sideband(313) burst_type(312:311) burst_size(310:308) burstwrap(307) byte_cnt(306:301) trans_exclusive(300) trans_lock(299) trans_read(298) trans_write(297) trans_posted(296) trans_compressed_read(295) addr(294:288) byteen(287:256) data(255:0)};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {COMMAND_SIZE_W} {3};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {ENABLE_ADDRESS_ALIGNMENT} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter} {SYNC_RESET} {0};add_instance {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {altera_merlin_width_adapter};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_ADDR_H} {42};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_ADDR_L} {36};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_DATA_H} {31};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_DATA_L} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_BYTEEN_H} {35};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_BYTEEN_L} {32};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_BYTE_CNT_H} {54};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_BYTE_CNT_L} {49};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_TRANS_COMPRESSED_READ} {43};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_TRANS_WRITE} {45};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_BURSTWRAP_H} {55};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_BURSTWRAP_L} {55};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_BURST_SIZE_H} {58};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_BURST_SIZE_L} {56};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_RESPONSE_STATUS_H} {78};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_RESPONSE_STATUS_L} {77};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_TRANS_EXCLUSIVE} {48};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_BURST_TYPE_H} {60};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_BURST_TYPE_L} {59};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_ORI_BURST_SIZE_L} {79};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_PKT_ORI_BURST_SIZE_H} {81};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_ST_DATA_W} {91};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_ADDR_H} {78};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_ADDR_L} {72};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_DATA_H} {63};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_DATA_L} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_BYTEEN_H} {71};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_BYTEEN_L} {64};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_BYTE_CNT_H} {90};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_BYTE_CNT_L} {85};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_TRANS_COMPRESSED_READ} {79};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_BURST_SIZE_H} {94};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_BURST_SIZE_L} {92};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_RESPONSE_STATUS_H} {114};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_RESPONSE_STATUS_L} {113};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_TRANS_EXCLUSIVE} {84};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_BURST_TYPE_H} {96};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_BURST_TYPE_L} {95};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_ORI_BURST_SIZE_L} {115};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_PKT_ORI_BURST_SIZE_H} {117};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_ST_DATA_W} {127};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {ST_CHANNEL_W} {3};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OPTIMIZE_FOR_RSP} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {RESPONSE_PATH} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {CONSTANT_BURST_SIZE} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {PACKING} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {IN_MERLIN_PACKET_FORMAT} {wunique(90) domain(89:88) snoop(87:84) barrier(83:82) ori_burst_size(81:79) response_status(78:77) cache(76:73) protection(72:70) thread_id(69) dest_id(68:67) src_id(66:65) qos(64) begin_burst(63) data_sideband(62) addr_sideband(61) burst_type(60:59) burst_size(58:56) burstwrap(55) byte_cnt(54:49) trans_exclusive(48) trans_lock(47) trans_read(46) trans_write(45) trans_posted(44) trans_compressed_read(43) addr(42:36) byteen(35:32) data(31:0)};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {OUT_MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {COMMAND_SIZE_W} {3};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {ENABLE_ADDRESS_ALIGNMENT} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter} {SYNC_RESET} {0};add_instance {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {altera_merlin_width_adapter};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_ADDR_H} {294};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_ADDR_L} {288};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_DATA_H} {255};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_DATA_L} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_BYTEEN_H} {287};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_BYTEEN_L} {256};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_BYTE_CNT_H} {306};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_BYTE_CNT_L} {301};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_TRANS_COMPRESSED_READ} {295};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_TRANS_WRITE} {297};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_BURSTWRAP_H} {307};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_BURSTWRAP_L} {307};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_BURST_SIZE_H} {310};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_BURST_SIZE_L} {308};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_RESPONSE_STATUS_H} {330};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_RESPONSE_STATUS_L} {329};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_TRANS_EXCLUSIVE} {300};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_BURST_TYPE_H} {312};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_BURST_TYPE_L} {311};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_ORI_BURST_SIZE_L} {331};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_PKT_ORI_BURST_SIZE_H} {333};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_ST_DATA_W} {343};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_ADDR_H} {78};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_ADDR_L} {72};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_DATA_H} {63};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_DATA_L} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_BYTEEN_H} {71};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_BYTEEN_L} {64};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_BYTE_CNT_H} {90};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_BYTE_CNT_L} {85};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_TRANS_COMPRESSED_READ} {79};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_BURST_SIZE_H} {94};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_BURST_SIZE_L} {92};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_RESPONSE_STATUS_H} {114};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_RESPONSE_STATUS_L} {113};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_TRANS_EXCLUSIVE} {84};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_BURST_TYPE_H} {96};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_BURST_TYPE_L} {95};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_ORI_BURST_SIZE_L} {115};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_PKT_ORI_BURST_SIZE_H} {117};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_ST_DATA_W} {127};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {ST_CHANNEL_W} {3};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OPTIMIZE_FOR_RSP} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {RESPONSE_PATH} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {CONSTANT_BURST_SIZE} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {PACKING} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {IN_MERLIN_PACKET_FORMAT} {wunique(342) domain(341:340) snoop(339:336) barrier(335:334) ori_burst_size(333:331) response_status(330:329) cache(328:325) protection(324:322) thread_id(321) dest_id(320:319) src_id(318:317) qos(316) begin_burst(315) data_sideband(314) addr_sideband(313) burst_type(312:311) burst_size(310:308) burstwrap(307) byte_cnt(306:301) trans_exclusive(300) trans_lock(299) trans_read(298) trans_write(297) trans_posted(296) trans_compressed_read(295) addr(294:288) byteen(287:256) data(255:0)};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {OUT_MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {COMMAND_SIZE_W} {3};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {ENABLE_ADDRESS_ALIGNMENT} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter} {SYNC_RESET} {0};add_instance {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {altera_merlin_width_adapter};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_ADDR_H} {78};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_ADDR_L} {72};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_DATA_H} {63};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_DATA_L} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_BYTEEN_H} {71};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_BYTEEN_L} {64};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_BYTE_CNT_H} {90};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_BYTE_CNT_L} {85};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_TRANS_COMPRESSED_READ} {79};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_TRANS_WRITE} {81};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_BURSTWRAP_H} {91};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_BURSTWRAP_L} {91};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_BURST_SIZE_H} {94};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_BURST_SIZE_L} {92};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_RESPONSE_STATUS_H} {114};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_RESPONSE_STATUS_L} {113};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_TRANS_EXCLUSIVE} {84};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_BURST_TYPE_H} {96};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_BURST_TYPE_L} {95};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_ORI_BURST_SIZE_L} {115};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_PKT_ORI_BURST_SIZE_H} {117};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_ST_DATA_W} {127};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_ADDR_H} {42};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_ADDR_L} {36};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_DATA_H} {31};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_DATA_L} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_BYTEEN_H} {35};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_BYTEEN_L} {32};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_BYTE_CNT_H} {54};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_BYTE_CNT_L} {49};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_TRANS_COMPRESSED_READ} {43};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_BURST_SIZE_H} {58};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_BURST_SIZE_L} {56};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_RESPONSE_STATUS_H} {78};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_RESPONSE_STATUS_L} {77};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_TRANS_EXCLUSIVE} {48};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_BURST_TYPE_H} {60};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_BURST_TYPE_L} {59};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_ORI_BURST_SIZE_L} {79};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_PKT_ORI_BURST_SIZE_H} {81};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_ST_DATA_W} {91};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {ST_CHANNEL_W} {3};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OPTIMIZE_FOR_RSP} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {RESPONSE_PATH} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {CONSTANT_BURST_SIZE} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {PACKING} {1};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {IN_MERLIN_PACKET_FORMAT} {wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {OUT_MERLIN_PACKET_FORMAT} {wunique(90) domain(89:88) snoop(87:84) barrier(83:82) ori_burst_size(81:79) response_status(78:77) cache(76:73) protection(72:70) thread_id(69) dest_id(68:67) src_id(66:65) qos(64) begin_burst(63) data_sideband(62) addr_sideband(61) burst_type(60:59) burst_size(58:56) burstwrap(55) byte_cnt(54:49) trans_exclusive(48) trans_lock(47) trans_read(46) trans_write(45) trans_posted(44) trans_compressed_read(43) addr(42:36) byteen(35:32) data(31:0)};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {COMMAND_SIZE_W} {3};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {ENABLE_ADDRESS_ALIGNMENT} {0};set_instance_parameter_value {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter} {SYNC_RESET} {0};add_instance {csr_reset_reset_bridge} {altera_reset_bridge};set_instance_parameter_value {csr_reset_reset_bridge} {ACTIVE_LOW_RESET} {0};set_instance_parameter_value {csr_reset_reset_bridge} {SYNCHRONOUS_EDGES} {deassert};set_instance_parameter_value {csr_reset_reset_bridge} {NUM_RESET_OUTPUTS} {1};set_instance_parameter_value {csr_reset_reset_bridge} {USE_RESET_REQUEST} {0};set_instance_parameter_value {csr_reset_reset_bridge} {SYNC_RESET} {0};add_instance {clk_clk_clock_bridge} {altera_clock_bridge};set_instance_parameter_value {clk_clk_clock_bridge} {EXPLICIT_CLOCK_RATE} {200000000};set_instance_parameter_value {clk_clk_clock_bridge} {NUM_CLOCK_OUTPUTS} {1};add_connection {csr_m0_translator.avalon_universal_master_0} {csr_m0_agent.av} {avalon};set_connection_parameter_value {csr_m0_translator.avalon_universal_master_0/csr_m0_agent.av} {arbitrationPriority} {1};set_connection_parameter_value {csr_m0_translator.avalon_universal_master_0/csr_m0_agent.av} {baseAddress} {0x0000};set_connection_parameter_value {csr_m0_translator.avalon_universal_master_0/csr_m0_agent.av} {defaultConnection} {false};set_connection_parameter_value {csr_m0_translator.avalon_universal_master_0/csr_m0_agent.av} {domainAlias} {};set_connection_parameter_value {csr_m0_translator.avalon_universal_master_0/csr_m0_agent.av} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {csr_m0_translator.avalon_universal_master_0/csr_m0_agent.av} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {csr_m0_translator.avalon_universal_master_0/csr_m0_agent.av} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {csr_m0_translator.avalon_universal_master_0/csr_m0_agent.av} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {csr_m0_translator.avalon_universal_master_0/csr_m0_agent.av} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {csr_m0_translator.avalon_universal_master_0/csr_m0_agent.av} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {csr_m0_translator.avalon_universal_master_0/csr_m0_agent.av} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {csr_m0_translator.avalon_universal_master_0/csr_m0_agent.av} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {csr_m0_translator.avalon_universal_master_0/csr_m0_agent.av} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {csr_m0_translator.avalon_universal_master_0/csr_m0_agent.av} {qsys_mm.syncResets} {FALSE};add_connection {modular_sgdma_dispatcher_0_CSR_agent.m0} {modular_sgdma_dispatcher_0_CSR_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {modular_sgdma_dispatcher_0_CSR_agent.m0/modular_sgdma_dispatcher_0_CSR_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {modular_sgdma_dispatcher_0_CSR_agent.m0/modular_sgdma_dispatcher_0_CSR_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {modular_sgdma_dispatcher_0_CSR_agent.m0/modular_sgdma_dispatcher_0_CSR_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {modular_sgdma_dispatcher_0_CSR_agent.m0/modular_sgdma_dispatcher_0_CSR_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {modular_sgdma_dispatcher_0_CSR_agent.m0/modular_sgdma_dispatcher_0_CSR_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {modular_sgdma_dispatcher_0_CSR_agent.m0/modular_sgdma_dispatcher_0_CSR_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {modular_sgdma_dispatcher_0_CSR_agent.m0/modular_sgdma_dispatcher_0_CSR_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {modular_sgdma_dispatcher_0_CSR_agent.m0/modular_sgdma_dispatcher_0_CSR_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {modular_sgdma_dispatcher_0_CSR_agent.m0/modular_sgdma_dispatcher_0_CSR_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {modular_sgdma_dispatcher_0_CSR_agent.m0/modular_sgdma_dispatcher_0_CSR_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {modular_sgdma_dispatcher_0_CSR_agent.m0/modular_sgdma_dispatcher_0_CSR_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {modular_sgdma_dispatcher_0_CSR_agent.m0/modular_sgdma_dispatcher_0_CSR_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {modular_sgdma_dispatcher_0_CSR_agent.m0/modular_sgdma_dispatcher_0_CSR_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {modular_sgdma_dispatcher_0_CSR_agent.m0/modular_sgdma_dispatcher_0_CSR_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {modular_sgdma_dispatcher_0_CSR_agent.rf_source} {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo.in} {avalon_streaming};add_connection {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo.out} {modular_sgdma_dispatcher_0_CSR_agent.rf_sink} {avalon_streaming};add_connection {modular_sgdma_dispatcher_0_CSR_agent.rdata_fifo_src} {modular_sgdma_dispatcher_0_CSR_agent.rdata_fifo_sink} {avalon_streaming};add_connection {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.m0} {modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.m0/modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.m0/modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.m0/modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.m0/modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.m0/modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.m0/modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.m0/modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.m0/modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.m0/modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.m0/modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.m0/modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.m0/modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.m0/modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.m0/modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.rf_source} {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo.in} {avalon_streaming};add_connection {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo.out} {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.rf_sink} {avalon_streaming};add_connection {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.rdata_fifo_src} {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.rdata_fifo_sink} {avalon_streaming};add_connection {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0} {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.m0/msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.rf_source} {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo.in} {avalon_streaming};add_connection {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo.out} {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.rf_sink} {avalon_streaming};add_connection {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.rdata_fifo_src} {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.rdata_fifo_sink} {avalon_streaming};add_connection {cmd_mux_002.src} {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.cp} {avalon_streaming};preview_set_connection_tag {cmd_mux_002.src/msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.cp} {qsys_mm.command};add_connection {csr_m0_agent.cp} {router.sink} {avalon_streaming};preview_set_connection_tag {csr_m0_agent.cp/router.sink} {qsys_mm.command};add_connection {modular_sgdma_dispatcher_0_CSR_agent.rp} {router_001.sink} {avalon_streaming};preview_set_connection_tag {modular_sgdma_dispatcher_0_CSR_agent.rp/router_001.sink} {qsys_mm.response};add_connection {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.rp} {router_002.sink} {avalon_streaming};preview_set_connection_tag {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.rp/router_002.sink} {qsys_mm.response};add_connection {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.rp} {router_003.sink} {avalon_streaming};preview_set_connection_tag {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.rp/router_003.sink} {qsys_mm.response};add_connection {router_003.src} {rsp_demux_002.sink} {avalon_streaming};preview_set_connection_tag {router_003.src/rsp_demux_002.sink} {qsys_mm.response};add_connection {router.src} {csr_m0_limiter.cmd_sink} {avalon_streaming};preview_set_connection_tag {router.src/csr_m0_limiter.cmd_sink} {qsys_mm.command};add_connection {csr_m0_limiter.cmd_src} {cmd_demux.sink} {avalon_streaming};preview_set_connection_tag {csr_m0_limiter.cmd_src/cmd_demux.sink} {qsys_mm.command};add_connection {rsp_mux.src} {csr_m0_limiter.rsp_sink} {avalon_streaming};preview_set_connection_tag {rsp_mux.src/csr_m0_limiter.rsp_sink} {qsys_mm.response};add_connection {csr_m0_limiter.rsp_src} {csr_m0_agent.rp} {avalon_streaming};preview_set_connection_tag {csr_m0_limiter.rsp_src/csr_m0_agent.rp} {qsys_mm.response};add_connection {modular_sgdma_dispatcher_0_CSR_burst_adapter.source0} {modular_sgdma_dispatcher_0_CSR_agent.cp} {avalon_streaming};preview_set_connection_tag {modular_sgdma_dispatcher_0_CSR_burst_adapter.source0/modular_sgdma_dispatcher_0_CSR_agent.cp} {qsys_mm.command};add_connection {cmd_demux.src0} {cmd_mux.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src0/cmd_mux.sink0} {qsys_mm.command};add_connection {cmd_demux.src1} {cmd_mux_001.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src1/cmd_mux_001.sink0} {qsys_mm.command};add_connection {cmd_demux.src2} {cmd_mux_002.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src2/cmd_mux_002.sink0} {qsys_mm.command};add_connection {rsp_demux.src0} {rsp_mux.sink0} {avalon_streaming};preview_set_connection_tag {rsp_demux.src0/rsp_mux.sink0} {qsys_mm.response};add_connection {rsp_demux_001.src0} {rsp_mux.sink1} {avalon_streaming};preview_set_connection_tag {rsp_demux_001.src0/rsp_mux.sink1} {qsys_mm.response};add_connection {rsp_demux_002.src0} {rsp_mux.sink2} {avalon_streaming};preview_set_connection_tag {rsp_demux_002.src0/rsp_mux.sink2} {qsys_mm.response};add_connection {cmd_mux_001.src} {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter.sink} {avalon_streaming};preview_set_connection_tag {cmd_mux_001.src/modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter.sink} {qsys_mm.command};add_connection {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter.src} {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.cp} {avalon_streaming};preview_set_connection_tag {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter.src/modular_sgdma_dispatcher_0_Descriptor_Slave_agent.cp} {qsys_mm.command};add_connection {router_001.src} {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter.sink} {avalon_streaming};preview_set_connection_tag {router_001.src/modular_sgdma_dispatcher_0_CSR_rsp_width_adapter.sink} {qsys_mm.response};add_connection {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter.src} {rsp_demux.sink} {avalon_streaming};preview_set_connection_tag {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter.src/rsp_demux.sink} {qsys_mm.response};add_connection {router_002.src} {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter.sink} {avalon_streaming};preview_set_connection_tag {router_002.src/modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter.sink} {qsys_mm.response};add_connection {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter.src} {rsp_demux_001.sink} {avalon_streaming};preview_set_connection_tag {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter.src/rsp_demux_001.sink} {qsys_mm.response};add_connection {cmd_mux.src} {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter.sink} {avalon_streaming};preview_set_connection_tag {cmd_mux.src/modular_sgdma_dispatcher_0_CSR_cmd_width_adapter.sink} {qsys_mm.command};add_connection {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter.src} {modular_sgdma_dispatcher_0_CSR_burst_adapter.sink0} {avalon_streaming};preview_set_connection_tag {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter.src/modular_sgdma_dispatcher_0_CSR_burst_adapter.sink0} {qsys_mm.command};add_connection {csr_m0_limiter.cmd_valid} {cmd_demux.sink_valid} {avalon_streaming};add_connection {csr_reset_reset_bridge.out_reset} {csr_m0_translator.reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {modular_sgdma_dispatcher_0_CSR_translator.reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {modular_sgdma_dispatcher_0_Descriptor_Slave_translator.reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {csr_m0_agent.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {modular_sgdma_dispatcher_0_CSR_agent.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {router.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {router_001.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {router_002.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {router_003.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {csr_m0_limiter.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {modular_sgdma_dispatcher_0_CSR_burst_adapter.cr0_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {cmd_demux.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {cmd_mux.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {cmd_mux_001.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {cmd_mux_002.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {rsp_demux.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {rsp_demux_001.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {rsp_demux_002.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {rsp_mux.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter.clk_reset} {reset};add_connection {csr_reset_reset_bridge.out_reset} {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter.clk_reset} {reset};add_connection {clk_clk_clock_bridge.out_clk} {csr_m0_translator.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {modular_sgdma_dispatcher_0_CSR_translator.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {modular_sgdma_dispatcher_0_Descriptor_Slave_translator.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {csr_m0_agent.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {modular_sgdma_dispatcher_0_CSR_agent.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {modular_sgdma_dispatcher_0_Descriptor_Slave_agent.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {router.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {router_001.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {router_002.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {router_003.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {csr_m0_limiter.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {modular_sgdma_dispatcher_0_CSR_burst_adapter.cr0} {clock};add_connection {clk_clk_clock_bridge.out_clk} {cmd_demux.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {rsp_mux.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {cmd_mux.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {rsp_demux.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {cmd_mux_001.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {rsp_demux_001.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {cmd_mux_002.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {rsp_demux_002.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {modular_sgdma_dispatcher_0_CSR_rsp_width_adapter.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {modular_sgdma_dispatcher_0_CSR_cmd_width_adapter.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {csr_reset_reset_bridge.clk} {clock};add_interface {csr_m0} {avalon} {slave};set_interface_property {csr_m0} {EXPORT_OF} {csr_m0_translator.avalon_anti_master_0};add_interface {modular_sgdma_dispatcher_0_CSR} {avalon} {master};set_interface_property {modular_sgdma_dispatcher_0_CSR} {EXPORT_OF} {modular_sgdma_dispatcher_0_CSR_translator.avalon_anti_slave_0};add_interface {modular_sgdma_dispatcher_0_Descriptor_Slave} {avalon} {master};set_interface_property {modular_sgdma_dispatcher_0_Descriptor_Slave} {EXPORT_OF} {modular_sgdma_dispatcher_0_Descriptor_Slave_translator.avalon_anti_slave_0};add_interface {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave} {avalon} {master};set_interface_property {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave} {EXPORT_OF} {msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator.avalon_anti_slave_0};add_interface {csr_reset_reset_bridge_in_reset} {reset} {slave};set_interface_property {csr_reset_reset_bridge_in_reset} {EXPORT_OF} {csr_reset_reset_bridge.in_reset};add_interface {clk_clk} {clock} {slave};set_interface_property {clk_clk} {EXPORT_OF} {clk_clk_clock_bridge.in_clk};set_module_assignment {interconnect_id.csr.m0} {0};set_module_assignment {interconnect_id.modular_sgdma_dispatcher_0.CSR} {0};set_module_assignment {interconnect_id.modular_sgdma_dispatcher_0.Descriptor_Slave} {1};set_module_assignment {interconnect_id.msgdma_bbb_afu_id_avmm_slave_0.afu_cfg_slave} {2};" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_mm_interconnect_191/synth/msgdma_bbb_altera_mm_interconnect_191_shqzigy.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_mm_interconnect_191/synth/msgdma_bbb_altera_mm_interconnect_191_shqzigy.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_mm_interconnect/altera_mm_interconnect_hw.tcl" />
  </sourceFiles>
  <childSourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_translator/altera_merlin_master_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_translator/altera_merlin_slave_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_agent/altera_merlin_master_agent_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_agent/altera_merlin_slave_agent_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_traffic_limiter/altera_merlin_traffic_limiter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/iconnect/alt_hiconnect_sc_fifo/alt_hiconnect_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_burst_adapter/altera_merlin_burst_adapter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
  </childSourceFiles>
  <instantiator instantiator="msgdma_bbb" as="mm_interconnect_2" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_mm_interconnect_191_shqzigy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_master_translator_191_g7h47bq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_slave_translator_191_x56fcki"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_master_agent_191_mpbm6tq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_slave_agent_191_ncfkfri"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_avalon_sc_fifo_191_e5eqkcq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_7nsl54q"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_bjgub5i"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_k5ic25a"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_qypc7ni"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_kcba44q"</message>
   <message level="Info" culprit="my_altera_avalon_sc_fifo_dest_id_fifo">"Generating: my_altera_avalon_sc_fifo_dest_id_fifo"</message>
   <message level="Info" culprit="my_alt_hiconnect_sc_fifo_dest_id_fifo">"Generating: my_alt_hiconnect_sc_fifo_dest_id_fifo"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_bbthvuy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_avalon_sc_fifo_191_e5eqkcq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_oslblqy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_alt_hiconnect_sc_fifo_191_7qtmpqq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_burst_adapter_191_swp6qdq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_ukvrogq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_37uvtri"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_vtbwn6q"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_3dzcbwq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_width_adapter_191_xe36m3y"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_width_adapter_191_tiejfvy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_width_adapter_191_zq7vway"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_width_adapter_191_rngqqti"</message>
  </messages>
 </entity>
 <entity
   kind="altera_mm_interconnect"
   version="19.1"
   name="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y">
  <parameter name="AUTO_DEVICE" value="10AX115N2F40E2LG" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="AUTO_DEVICE_SPEEDGRADE" value="" />
  <parameter
     name="COMPOSE_CONTENTS"
     value="add_instance {pipe_stage_dma_write_m0_translator} {altera_merlin_master_translator};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_ADDRESS_W} {50};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_DATA_W} {512};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_BURSTCOUNT_W} {3};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_BYTEENABLE_W} {64};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {UAV_ADDRESS_W} {50};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {UAV_BURSTCOUNT_W} {9};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_READLATENCY} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_READDATA} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_READ} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_WRITE} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_ADDRESS} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_DEBUGACCESS} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_CLKEN} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_LOCK} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_SYMBOLS_PER_WORD} {64};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_CONSTANT_BURST_BEHAVIOR} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {64};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {SYNC_RESET} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_translator} {WAITREQUEST_ALLOWANCE} {0};add_instance {pipe_stage_dma_read_m0_translator} {altera_merlin_master_translator};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_ADDRESS_W} {50};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_DATA_W} {512};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_BURSTCOUNT_W} {3};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_BYTEENABLE_W} {64};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {UAV_ADDRESS_W} {50};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {UAV_BURSTCOUNT_W} {9};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_READLATENCY} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_READ_WAIT} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_READDATA} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_READ} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_WRITE} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_ADDRESS} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_DEBUGACCESS} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_CLKEN} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_LOCK} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_SYMBOLS_PER_WORD} {64};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_CONSTANT_BURST_BEHAVIOR} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {64};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {SYNC_RESET} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_translator} {WAITREQUEST_ALLOWANCE} {0};add_instance {pipe_stage_mem_s0_translator} {altera_merlin_slave_translator};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_ADDRESS_W} {48};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_DATA_W} {512};set_instance_parameter_value {pipe_stage_mem_s0_translator} {UAV_DATA_W} {512};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_BURSTCOUNT_W} {3};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_BYTEENABLE_W} {64};set_instance_parameter_value {pipe_stage_mem_s0_translator} {UAV_BYTEENABLE_W} {64};set_instance_parameter_value {pipe_stage_mem_s0_translator} {UAV_ADDRESS_W} {50};set_instance_parameter_value {pipe_stage_mem_s0_translator} {UAV_BURSTCOUNT_W} {9};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_READLATENCY} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_READ_WAIT} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_READDATA} {1};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_READ} {1};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_WRITE} {1};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_ADDRESS} {1};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_LOCK} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_DEBUGACCESS} {1};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_SYMBOLS_PER_WORD} {64};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {64};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {pipe_stage_mem_s0_translator} {SYNC_RESET} {0};add_instance {pipe_stage_host_wr_s0_translator} {altera_merlin_slave_translator};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_ADDRESS_W} {49};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_DATA_W} {512};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {UAV_DATA_W} {512};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_BURSTCOUNT_W} {3};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_BYTEENABLE_W} {64};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {UAV_BYTEENABLE_W} {64};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {UAV_ADDRESS_W} {50};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {UAV_BURSTCOUNT_W} {9};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_READLATENCY} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_READ_WAIT} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_READDATA} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_READ} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_WRITE} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_ADDRESS} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_LOCK} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_DEBUGACCESS} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_SYMBOLS_PER_WORD} {64};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {64};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_translator} {SYNC_RESET} {0};add_instance {pipe_stage_host_rd_s0_translator} {altera_merlin_slave_translator};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_ADDRESS_W} {48};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_DATA_W} {512};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {UAV_DATA_W} {512};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_BURSTCOUNT_W} {3};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_BYTEENABLE_W} {64};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {UAV_BYTEENABLE_W} {64};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {UAV_ADDRESS_W} {50};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {UAV_BURSTCOUNT_W} {9};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_READLATENCY} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_READ_WAIT} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_READDATA} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_WRITEDATA} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_READ} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_WRITE} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_BYTEENABLE} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_ADDRESS} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_LOCK} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_DEBUGACCESS} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_SYMBOLS_PER_WORD} {64};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_ADDRESS_SYMBOLS} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {64};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_translator} {SYNC_RESET} {0};add_instance {magic_number_rom_slave_translator} {altera_merlin_slave_translator};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_ADDRESS_W} {2};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_DATA_W} {512};set_instance_parameter_value {magic_number_rom_slave_translator} {UAV_DATA_W} {512};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_BURSTCOUNT_W} {3};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_BYTEENABLE_W} {64};set_instance_parameter_value {magic_number_rom_slave_translator} {UAV_BYTEENABLE_W} {64};set_instance_parameter_value {magic_number_rom_slave_translator} {UAV_ADDRESS_W} {50};set_instance_parameter_value {magic_number_rom_slave_translator} {UAV_BURSTCOUNT_W} {9};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_READLATENCY} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_SETUP_WAIT} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_WRITE_WAIT} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_READ_WAIT} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_DATA_HOLD} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_TIMING_UNITS} {1};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_READDATA} {1};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_WRITEDATA} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_READ} {1};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_WRITE} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_BEGINBURSTTRANSFER} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_BEGINTRANSFER} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_BYTEENABLE} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_CHIPSELECT} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_ADDRESS} {1};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_BURSTCOUNT} {1};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_READDATAVALID} {1};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_WAITREQUEST} {1};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_WRITEBYTEENABLE} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_LOCK} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_AV_CLKEN} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_UAV_CLKEN} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_OUTPUTENABLE} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_DEBUGACCESS} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_READRESPONSE} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {USE_WRITERESPONSE} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_SYMBOLS_PER_WORD} {64};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_ADDRESS_SYMBOLS} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {UAV_CONSTANT_BURST_BEHAVIOR} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_REQUIRE_UNALIGNED_ADDRESSES} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_MAX_PENDING_READ_TRANSACTIONS} {1};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_MAX_PENDING_WRITE_TRANSACTIONS} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_INTERLEAVEBURSTS} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_BITS_PER_SYMBOL} {8};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_ISBIGENDIAN} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_ADDRESSGROUP} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {UAV_ADDRESSGROUP} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_REGISTEROUTGOINGSIGNALS} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_REGISTERINCOMINGSIGNALS} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {AV_ALWAYSBURSTMAXBURST} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {CHIPSELECT_THROUGH_READLATENCY} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {WAITREQUEST_ALLOWANCE} {0};set_instance_parameter_value {magic_number_rom_slave_translator} {SYNC_RESET} {0};add_instance {pipe_stage_dma_write_m0_agent} {altera_merlin_master_agent};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_WUNIQUE} {676};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_DOMAIN_H} {675};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_DOMAIN_L} {674};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_SNOOP_H} {673};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_SNOOP_L} {670};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_BARRIER_H} {669};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_BARRIER_L} {668};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_ORI_BURST_SIZE_H} {667};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_ORI_BURST_SIZE_L} {665};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_RESPONSE_STATUS_H} {664};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_RESPONSE_STATUS_L} {663};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_QOS_H} {650};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_QOS_L} {650};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_DATA_SIDEBAND_H} {648};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_DATA_SIDEBAND_L} {648};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_ADDR_SIDEBAND_H} {647};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_ADDR_SIDEBAND_L} {647};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_BURST_TYPE_H} {646};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_BURST_TYPE_L} {645};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_CACHE_H} {662};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_CACHE_L} {659};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_THREAD_ID_H} {655};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_THREAD_ID_L} {655};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_BURST_SIZE_H} {644};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_BURST_SIZE_L} {642};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_TRANS_EXCLUSIVE} {631};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_TRANS_LOCK} {630};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_BEGIN_BURST} {649};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_PROTECTION_H} {658};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_PROTECTION_L} {656};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_BURSTWRAP_H} {641};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_BURSTWRAP_L} {641};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_BYTE_CNT_H} {640};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_BYTE_CNT_L} {632};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_ADDR_H} {625};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_ADDR_L} {576};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_TRANS_COMPRESSED_READ} {626};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_TRANS_POSTED} {627};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_TRANS_WRITE} {628};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_TRANS_READ} {629};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_DATA_H} {511};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_DATA_L} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_BYTEEN_H} {575};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_BYTEEN_L} {512};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_SRC_ID_H} {652};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_SRC_ID_L} {651};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_DEST_ID_H} {654};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {PKT_DEST_ID_L} {653};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {ST_DATA_W} {677};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {ST_CHANNEL_W} {4};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {AV_BURSTCOUNT_W} {9};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {ADDR_MAP} {&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;address_map&gt;
 &lt;slave
   id=&quot;3&quot;
   name=&quot;pipe_stage_mem_s0_translator.avalon_universal_slave_0&quot;
   start=&quot;0x0000000000000000&quot;
   end=&quot;0x00001000000000000&quot;
   responds=&quot;1&quot;
   user_default=&quot;0&quot; /&gt;
 &lt;slave
   id=&quot;2&quot;
   name=&quot;pipe_stage_host_wr_s0_translator.avalon_universal_slave_0&quot;
   start=&quot;0x0002000000000000&quot;
   end=&quot;0x00004000000000000&quot;
   responds=&quot;1&quot;
   user_default=&quot;0&quot; /&gt;
&lt;/address_map&gt;
};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {SUPPRESS_0_BYTEEN_RSP} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {ID} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {BURSTWRAP_VALUE} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {CACHE_VALUE} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {SECURE_ACCESS_BIT} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {DOMAIN_VALUE} {3};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {BARRIER_VALUE} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {SNOOP_VALUE} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {WUNIQUE_VALUE} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_agent} {SYNC_RESET} {0};add_instance {pipe_stage_dma_read_m0_agent} {altera_merlin_master_agent};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_WUNIQUE} {676};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_DOMAIN_H} {675};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_DOMAIN_L} {674};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_SNOOP_H} {673};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_SNOOP_L} {670};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_BARRIER_H} {669};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_BARRIER_L} {668};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_ORI_BURST_SIZE_H} {667};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_ORI_BURST_SIZE_L} {665};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_RESPONSE_STATUS_H} {664};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_RESPONSE_STATUS_L} {663};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_QOS_H} {650};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_QOS_L} {650};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_DATA_SIDEBAND_H} {648};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_DATA_SIDEBAND_L} {648};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_ADDR_SIDEBAND_H} {647};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_ADDR_SIDEBAND_L} {647};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_BURST_TYPE_H} {646};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_BURST_TYPE_L} {645};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_CACHE_H} {662};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_CACHE_L} {659};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_THREAD_ID_H} {655};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_THREAD_ID_L} {655};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_BURST_SIZE_H} {644};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_BURST_SIZE_L} {642};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_TRANS_EXCLUSIVE} {631};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_TRANS_LOCK} {630};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_BEGIN_BURST} {649};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_PROTECTION_H} {658};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_PROTECTION_L} {656};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_BURSTWRAP_H} {641};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_BURSTWRAP_L} {641};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_BYTE_CNT_H} {640};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_BYTE_CNT_L} {632};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_ADDR_H} {625};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_ADDR_L} {576};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_TRANS_COMPRESSED_READ} {626};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_TRANS_POSTED} {627};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_TRANS_WRITE} {628};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_TRANS_READ} {629};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_DATA_H} {511};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_DATA_L} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_BYTEEN_H} {575};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_BYTEEN_L} {512};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_SRC_ID_H} {652};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_SRC_ID_L} {651};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_DEST_ID_H} {654};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {PKT_DEST_ID_L} {653};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {ST_DATA_W} {677};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {ST_CHANNEL_W} {4};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {AV_BURSTCOUNT_W} {9};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {AV_BURSTBOUNDARIES} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {ADDR_MAP} {&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;address_map&gt;
 &lt;slave
   id=&quot;3&quot;
   name=&quot;pipe_stage_mem_s0_translator.avalon_universal_slave_0&quot;
   start=&quot;0x0000000000000000&quot;
   end=&quot;0x00001000000000000&quot;
   responds=&quot;1&quot;
   user_default=&quot;0&quot; /&gt;
 &lt;slave
   id=&quot;1&quot;
   name=&quot;pipe_stage_host_rd_s0_translator.avalon_universal_slave_0&quot;
   start=&quot;0x0002000000000000&quot;
   end=&quot;0x00003000000000000&quot;
   responds=&quot;1&quot;
   user_default=&quot;0&quot; /&gt;
 &lt;slave
   id=&quot;0&quot;
   name=&quot;magic_number_rom_slave_translator.avalon_universal_slave_0&quot;
   start=&quot;0x0001000000000000&quot;
   end=&quot;0x00001000000000100&quot;
   responds=&quot;1&quot;
   user_default=&quot;0&quot; /&gt;
&lt;/address_map&gt;
};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {SUPPRESS_0_BYTEEN_RSP} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {ID} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {BURSTWRAP_VALUE} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {CACHE_VALUE} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {SECURE_ACCESS_BIT} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {DOMAIN_VALUE} {3};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {BARRIER_VALUE} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {SNOOP_VALUE} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {WUNIQUE_VALUE} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_agent} {SYNC_RESET} {0};add_instance {pipe_stage_mem_s0_agent} {altera_merlin_slave_agent};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_ORI_BURST_SIZE_H} {667};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_ORI_BURST_SIZE_L} {665};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_RESPONSE_STATUS_H} {664};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_RESPONSE_STATUS_L} {663};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_BURST_SIZE_H} {644};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_BURST_SIZE_L} {642};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_TRANS_LOCK} {630};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_BEGIN_BURST} {649};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_PROTECTION_H} {658};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_PROTECTION_L} {656};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_BURSTWRAP_H} {641};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_BURSTWRAP_L} {641};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_BYTE_CNT_H} {640};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_BYTE_CNT_L} {632};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_ADDR_H} {625};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_ADDR_L} {576};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_TRANS_COMPRESSED_READ} {626};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_TRANS_POSTED} {627};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_TRANS_WRITE} {628};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_TRANS_READ} {629};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_DATA_H} {511};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_DATA_L} {0};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_BYTEEN_H} {575};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_BYTEEN_L} {512};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_SRC_ID_H} {652};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_SRC_ID_L} {651};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_DEST_ID_H} {654};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_DEST_ID_L} {653};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {pipe_stage_mem_s0_agent} {ST_CHANNEL_W} {4};set_instance_parameter_value {pipe_stage_mem_s0_agent} {ST_DATA_W} {677};set_instance_parameter_value {pipe_stage_mem_s0_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {pipe_stage_mem_s0_agent} {AVS_BURSTCOUNT_W} {9};set_instance_parameter_value {pipe_stage_mem_s0_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {pipe_stage_mem_s0_agent} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {pipe_stage_mem_s0_agent} {SUPPRESS_0_BYTEEN_CMD} {0};set_instance_parameter_value {pipe_stage_mem_s0_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {pipe_stage_mem_s0_agent} {MAX_BYTE_CNT} {256};set_instance_parameter_value {pipe_stage_mem_s0_agent} {MAX_BURSTWRAP} {1};set_instance_parameter_value {pipe_stage_mem_s0_agent} {ID} {3};set_instance_parameter_value {pipe_stage_mem_s0_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {pipe_stage_mem_s0_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {pipe_stage_mem_s0_agent} {ECC_ENABLE} {0};set_instance_parameter_value {pipe_stage_mem_s0_agent} {SYNC_RESET} {0};add_instance {pipe_stage_mem_s0_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {pipe_stage_mem_s0_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {pipe_stage_mem_s0_agent_rsp_fifo} {BITS_PER_SYMBOL} {678};set_instance_parameter_value {pipe_stage_mem_s0_agent_rsp_fifo} {FIFO_DEPTH} {65};set_instance_parameter_value {pipe_stage_mem_s0_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {pipe_stage_mem_s0_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {pipe_stage_mem_s0_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {pipe_stage_mem_s0_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {pipe_stage_mem_s0_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {pipe_stage_mem_s0_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {pipe_stage_mem_s0_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {pipe_stage_mem_s0_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {pipe_stage_mem_s0_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {pipe_stage_mem_s0_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {pipe_stage_mem_s0_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};set_instance_parameter_value {pipe_stage_mem_s0_agent_rsp_fifo} {SYNC_RESET} {0};add_instance {pipe_stage_host_wr_s0_agent} {altera_merlin_slave_agent};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_ORI_BURST_SIZE_H} {667};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_ORI_BURST_SIZE_L} {665};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_RESPONSE_STATUS_H} {664};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_RESPONSE_STATUS_L} {663};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_BURST_SIZE_H} {644};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_BURST_SIZE_L} {642};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_TRANS_LOCK} {630};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_BEGIN_BURST} {649};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_PROTECTION_H} {658};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_PROTECTION_L} {656};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_BURSTWRAP_H} {641};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_BURSTWRAP_L} {641};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_BYTE_CNT_H} {640};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_BYTE_CNT_L} {632};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_ADDR_H} {625};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_ADDR_L} {576};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_TRANS_COMPRESSED_READ} {626};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_TRANS_POSTED} {627};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_TRANS_WRITE} {628};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_TRANS_READ} {629};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_DATA_H} {511};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_DATA_L} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_BYTEEN_H} {575};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_BYTEEN_L} {512};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_SRC_ID_H} {652};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_SRC_ID_L} {651};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_DEST_ID_H} {654};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_DEST_ID_L} {653};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {ST_CHANNEL_W} {4};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {ST_DATA_W} {677};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {AVS_BURSTCOUNT_W} {9};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {SUPPRESS_0_BYTEEN_CMD} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {MAX_BYTE_CNT} {256};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {MAX_BURSTWRAP} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {ID} {2};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {ECC_ENABLE} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_agent} {SYNC_RESET} {0};add_instance {pipe_stage_host_wr_s0_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {pipe_stage_host_wr_s0_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_agent_rsp_fifo} {BITS_PER_SYMBOL} {678};set_instance_parameter_value {pipe_stage_host_wr_s0_agent_rsp_fifo} {FIFO_DEPTH} {65};set_instance_parameter_value {pipe_stage_host_wr_s0_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {pipe_stage_host_wr_s0_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {pipe_stage_host_wr_s0_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};set_instance_parameter_value {pipe_stage_host_wr_s0_agent_rsp_fifo} {SYNC_RESET} {0};add_instance {pipe_stage_host_rd_s0_agent} {altera_merlin_slave_agent};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_ORI_BURST_SIZE_H} {667};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_ORI_BURST_SIZE_L} {665};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_RESPONSE_STATUS_H} {664};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_RESPONSE_STATUS_L} {663};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_BURST_SIZE_H} {644};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_BURST_SIZE_L} {642};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_TRANS_LOCK} {630};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_BEGIN_BURST} {649};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_PROTECTION_H} {658};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_PROTECTION_L} {656};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_BURSTWRAP_H} {641};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_BURSTWRAP_L} {641};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_BYTE_CNT_H} {640};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_BYTE_CNT_L} {632};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_ADDR_H} {625};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_ADDR_L} {576};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_TRANS_COMPRESSED_READ} {626};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_TRANS_POSTED} {627};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_TRANS_WRITE} {628};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_TRANS_READ} {629};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_DATA_H} {511};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_DATA_L} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_BYTEEN_H} {575};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_BYTEEN_L} {512};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_SRC_ID_H} {652};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_SRC_ID_L} {651};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_DEST_ID_H} {654};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_DEST_ID_L} {653};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {ST_CHANNEL_W} {4};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {ST_DATA_W} {677};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {AVS_BURSTCOUNT_W} {9};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {SUPPRESS_0_BYTEEN_CMD} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {MAX_BYTE_CNT} {256};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {MAX_BURSTWRAP} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {ID} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {ECC_ENABLE} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_agent} {SYNC_RESET} {0};add_instance {pipe_stage_host_rd_s0_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {pipe_stage_host_rd_s0_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_agent_rsp_fifo} {BITS_PER_SYMBOL} {678};set_instance_parameter_value {pipe_stage_host_rd_s0_agent_rsp_fifo} {FIFO_DEPTH} {65};set_instance_parameter_value {pipe_stage_host_rd_s0_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {pipe_stage_host_rd_s0_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {pipe_stage_host_rd_s0_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};set_instance_parameter_value {pipe_stage_host_rd_s0_agent_rsp_fifo} {SYNC_RESET} {0};add_instance {magic_number_rom_slave_agent} {altera_merlin_slave_agent};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_ORI_BURST_SIZE_H} {667};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_ORI_BURST_SIZE_L} {665};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_RESPONSE_STATUS_H} {664};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_RESPONSE_STATUS_L} {663};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_BURST_SIZE_H} {644};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_BURST_SIZE_L} {642};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_TRANS_LOCK} {630};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_BEGIN_BURST} {649};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_PROTECTION_H} {658};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_PROTECTION_L} {656};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_BURSTWRAP_H} {641};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_BURSTWRAP_L} {641};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_BYTE_CNT_H} {640};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_BYTE_CNT_L} {632};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_ADDR_H} {625};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_ADDR_L} {576};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_TRANS_COMPRESSED_READ} {626};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_TRANS_POSTED} {627};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_TRANS_WRITE} {628};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_TRANS_READ} {629};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_DATA_H} {511};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_DATA_L} {0};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_BYTEEN_H} {575};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_BYTEEN_L} {512};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_SRC_ID_H} {652};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_SRC_ID_L} {651};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_DEST_ID_H} {654};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_DEST_ID_L} {653};set_instance_parameter_value {magic_number_rom_slave_agent} {PKT_SYMBOL_W} {8};set_instance_parameter_value {magic_number_rom_slave_agent} {ST_CHANNEL_W} {4};set_instance_parameter_value {magic_number_rom_slave_agent} {ST_DATA_W} {677};set_instance_parameter_value {magic_number_rom_slave_agent} {AVS_BURSTCOUNT_SYMBOLS} {0};set_instance_parameter_value {magic_number_rom_slave_agent} {AVS_BURSTCOUNT_W} {9};set_instance_parameter_value {magic_number_rom_slave_agent} {AV_LINEWRAPBURSTS} {0};set_instance_parameter_value {magic_number_rom_slave_agent} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {magic_number_rom_slave_agent} {SUPPRESS_0_BYTEEN_CMD} {0};set_instance_parameter_value {magic_number_rom_slave_agent} {PREVENT_FIFO_OVERFLOW} {1};set_instance_parameter_value {magic_number_rom_slave_agent} {MAX_BYTE_CNT} {256};set_instance_parameter_value {magic_number_rom_slave_agent} {MAX_BURSTWRAP} {1};set_instance_parameter_value {magic_number_rom_slave_agent} {ID} {0};set_instance_parameter_value {magic_number_rom_slave_agent} {USE_READRESPONSE} {0};set_instance_parameter_value {magic_number_rom_slave_agent} {USE_WRITERESPONSE} {0};set_instance_parameter_value {magic_number_rom_slave_agent} {ECC_ENABLE} {0};set_instance_parameter_value {magic_number_rom_slave_agent} {SYNC_RESET} {0};add_instance {magic_number_rom_slave_agent_rsp_fifo} {altera_avalon_sc_fifo};set_instance_parameter_value {magic_number_rom_slave_agent_rsp_fifo} {SYMBOLS_PER_BEAT} {1};set_instance_parameter_value {magic_number_rom_slave_agent_rsp_fifo} {BITS_PER_SYMBOL} {678};set_instance_parameter_value {magic_number_rom_slave_agent_rsp_fifo} {FIFO_DEPTH} {2};set_instance_parameter_value {magic_number_rom_slave_agent_rsp_fifo} {CHANNEL_WIDTH} {0};set_instance_parameter_value {magic_number_rom_slave_agent_rsp_fifo} {ERROR_WIDTH} {0};set_instance_parameter_value {magic_number_rom_slave_agent_rsp_fifo} {USE_PACKETS} {1};set_instance_parameter_value {magic_number_rom_slave_agent_rsp_fifo} {USE_FILL_LEVEL} {0};set_instance_parameter_value {magic_number_rom_slave_agent_rsp_fifo} {EMPTY_LATENCY} {1};set_instance_parameter_value {magic_number_rom_slave_agent_rsp_fifo} {USE_MEMORY_BLOCKS} {0};set_instance_parameter_value {magic_number_rom_slave_agent_rsp_fifo} {USE_STORE_FORWARD} {0};set_instance_parameter_value {magic_number_rom_slave_agent_rsp_fifo} {USE_ALMOST_FULL_IF} {0};set_instance_parameter_value {magic_number_rom_slave_agent_rsp_fifo} {USE_ALMOST_EMPTY_IF} {0};set_instance_parameter_value {magic_number_rom_slave_agent_rsp_fifo} {ENABLE_EXPLICIT_MAXCHANNEL} {false};set_instance_parameter_value {magic_number_rom_slave_agent_rsp_fifo} {EXPLICIT_MAXCHANNEL} {0};set_instance_parameter_value {magic_number_rom_slave_agent_rsp_fifo} {SYNC_RESET} {0};add_instance {router} {altera_merlin_router};set_instance_parameter_value {router} {DESTINATION_ID} {3 2 };set_instance_parameter_value {router} {CHANNEL_ID} {01 10 };set_instance_parameter_value {router} {TYPE_OF_TRANSACTION} {both both };set_instance_parameter_value {router} {START_ADDRESS} {0x0 0x2000000000000 };set_instance_parameter_value {router} {END_ADDRESS} {0x1000000000000 0x4000000000000 };set_instance_parameter_value {router} {NON_SECURED_TAG} {1 1 };set_instance_parameter_value {router} {SECURED_RANGE_PAIRS} {0 0 };set_instance_parameter_value {router} {SECURED_RANGE_LIST} {0 0 };set_instance_parameter_value {router} {SPAN_OFFSET} {};set_instance_parameter_value {router} {PKT_ADDR_H} {625};set_instance_parameter_value {router} {PKT_ADDR_L} {576};set_instance_parameter_value {router} {PKT_PROTECTION_H} {658};set_instance_parameter_value {router} {PKT_PROTECTION_L} {656};set_instance_parameter_value {router} {PKT_DEST_ID_H} {654};set_instance_parameter_value {router} {PKT_DEST_ID_L} {653};set_instance_parameter_value {router} {PKT_TRANS_WRITE} {628};set_instance_parameter_value {router} {PKT_TRANS_READ} {629};set_instance_parameter_value {router} {ST_DATA_W} {677};set_instance_parameter_value {router} {ST_CHANNEL_W} {4};set_instance_parameter_value {router} {DECODER_TYPE} {0};set_instance_parameter_value {router} {DEFAULT_CHANNEL} {1};set_instance_parameter_value {router} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router} {DEFAULT_DESTID} {2};set_instance_parameter_value {router} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {router} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router} {SYNC_RESET} {0};add_instance {router_001} {altera_merlin_router};set_instance_parameter_value {router_001} {DESTINATION_ID} {3 0 1 };set_instance_parameter_value {router_001} {CHANNEL_ID} {001 100 010 };set_instance_parameter_value {router_001} {TYPE_OF_TRANSACTION} {both read both };set_instance_parameter_value {router_001} {START_ADDRESS} {0x0 0x1000000000000 0x2000000000000 };set_instance_parameter_value {router_001} {END_ADDRESS} {0x1000000000000 0x1000000000100 0x3000000000000 };set_instance_parameter_value {router_001} {NON_SECURED_TAG} {1 1 1 };set_instance_parameter_value {router_001} {SECURED_RANGE_PAIRS} {0 0 0 };set_instance_parameter_value {router_001} {SECURED_RANGE_LIST} {0 0 0 };set_instance_parameter_value {router_001} {SPAN_OFFSET} {};set_instance_parameter_value {router_001} {PKT_ADDR_H} {625};set_instance_parameter_value {router_001} {PKT_ADDR_L} {576};set_instance_parameter_value {router_001} {PKT_PROTECTION_H} {658};set_instance_parameter_value {router_001} {PKT_PROTECTION_L} {656};set_instance_parameter_value {router_001} {PKT_DEST_ID_H} {654};set_instance_parameter_value {router_001} {PKT_DEST_ID_L} {653};set_instance_parameter_value {router_001} {PKT_TRANS_WRITE} {628};set_instance_parameter_value {router_001} {PKT_TRANS_READ} {629};set_instance_parameter_value {router_001} {ST_DATA_W} {677};set_instance_parameter_value {router_001} {ST_CHANNEL_W} {4};set_instance_parameter_value {router_001} {DECODER_TYPE} {0};set_instance_parameter_value {router_001} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_001} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_001} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_001} {DEFAULT_DESTID} {3};set_instance_parameter_value {router_001} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {router_001} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router_001} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router_001} {SYNC_RESET} {0};add_instance {router_002} {altera_merlin_router};set_instance_parameter_value {router_002} {DESTINATION_ID} {1 0 };set_instance_parameter_value {router_002} {CHANNEL_ID} {01 10 };set_instance_parameter_value {router_002} {TYPE_OF_TRANSACTION} {both both };set_instance_parameter_value {router_002} {START_ADDRESS} {0x0 0x0 };set_instance_parameter_value {router_002} {END_ADDRESS} {0x0 0x0 };set_instance_parameter_value {router_002} {NON_SECURED_TAG} {1 1 };set_instance_parameter_value {router_002} {SECURED_RANGE_PAIRS} {0 0 };set_instance_parameter_value {router_002} {SECURED_RANGE_LIST} {0 0 };set_instance_parameter_value {router_002} {SPAN_OFFSET} {};set_instance_parameter_value {router_002} {PKT_ADDR_H} {625};set_instance_parameter_value {router_002} {PKT_ADDR_L} {576};set_instance_parameter_value {router_002} {PKT_PROTECTION_H} {658};set_instance_parameter_value {router_002} {PKT_PROTECTION_L} {656};set_instance_parameter_value {router_002} {PKT_DEST_ID_H} {654};set_instance_parameter_value {router_002} {PKT_DEST_ID_L} {653};set_instance_parameter_value {router_002} {PKT_TRANS_WRITE} {628};set_instance_parameter_value {router_002} {PKT_TRANS_READ} {629};set_instance_parameter_value {router_002} {ST_DATA_W} {677};set_instance_parameter_value {router_002} {ST_CHANNEL_W} {4};set_instance_parameter_value {router_002} {DECODER_TYPE} {1};set_instance_parameter_value {router_002} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_002} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_002} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_002} {DEFAULT_DESTID} {1};set_instance_parameter_value {router_002} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {router_002} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router_002} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router_002} {SYNC_RESET} {0};add_instance {router_003} {altera_merlin_router};set_instance_parameter_value {router_003} {DESTINATION_ID} {1 };set_instance_parameter_value {router_003} {CHANNEL_ID} {1 };set_instance_parameter_value {router_003} {TYPE_OF_TRANSACTION} {both };set_instance_parameter_value {router_003} {START_ADDRESS} {0x0 };set_instance_parameter_value {router_003} {END_ADDRESS} {0x0 };set_instance_parameter_value {router_003} {NON_SECURED_TAG} {1 };set_instance_parameter_value {router_003} {SECURED_RANGE_PAIRS} {0 };set_instance_parameter_value {router_003} {SECURED_RANGE_LIST} {0 };set_instance_parameter_value {router_003} {SPAN_OFFSET} {};set_instance_parameter_value {router_003} {PKT_ADDR_H} {625};set_instance_parameter_value {router_003} {PKT_ADDR_L} {576};set_instance_parameter_value {router_003} {PKT_PROTECTION_H} {658};set_instance_parameter_value {router_003} {PKT_PROTECTION_L} {656};set_instance_parameter_value {router_003} {PKT_DEST_ID_H} {654};set_instance_parameter_value {router_003} {PKT_DEST_ID_L} {653};set_instance_parameter_value {router_003} {PKT_TRANS_WRITE} {628};set_instance_parameter_value {router_003} {PKT_TRANS_READ} {629};set_instance_parameter_value {router_003} {ST_DATA_W} {677};set_instance_parameter_value {router_003} {ST_CHANNEL_W} {4};set_instance_parameter_value {router_003} {DECODER_TYPE} {1};set_instance_parameter_value {router_003} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_003} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_003} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_003} {DEFAULT_DESTID} {1};set_instance_parameter_value {router_003} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {router_003} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router_003} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router_003} {SYNC_RESET} {0};add_instance {router_004} {altera_merlin_router};set_instance_parameter_value {router_004} {DESTINATION_ID} {0 };set_instance_parameter_value {router_004} {CHANNEL_ID} {1 };set_instance_parameter_value {router_004} {TYPE_OF_TRANSACTION} {both };set_instance_parameter_value {router_004} {START_ADDRESS} {0x0 };set_instance_parameter_value {router_004} {END_ADDRESS} {0x0 };set_instance_parameter_value {router_004} {NON_SECURED_TAG} {1 };set_instance_parameter_value {router_004} {SECURED_RANGE_PAIRS} {0 };set_instance_parameter_value {router_004} {SECURED_RANGE_LIST} {0 };set_instance_parameter_value {router_004} {SPAN_OFFSET} {};set_instance_parameter_value {router_004} {PKT_ADDR_H} {625};set_instance_parameter_value {router_004} {PKT_ADDR_L} {576};set_instance_parameter_value {router_004} {PKT_PROTECTION_H} {658};set_instance_parameter_value {router_004} {PKT_PROTECTION_L} {656};set_instance_parameter_value {router_004} {PKT_DEST_ID_H} {654};set_instance_parameter_value {router_004} {PKT_DEST_ID_L} {653};set_instance_parameter_value {router_004} {PKT_TRANS_WRITE} {628};set_instance_parameter_value {router_004} {PKT_TRANS_READ} {629};set_instance_parameter_value {router_004} {ST_DATA_W} {677};set_instance_parameter_value {router_004} {ST_CHANNEL_W} {4};set_instance_parameter_value {router_004} {DECODER_TYPE} {1};set_instance_parameter_value {router_004} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_004} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_004} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_004} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_004} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {router_004} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router_004} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router_004} {SYNC_RESET} {0};add_instance {router_005} {altera_merlin_router};set_instance_parameter_value {router_005} {DESTINATION_ID} {0 };set_instance_parameter_value {router_005} {CHANNEL_ID} {1 };set_instance_parameter_value {router_005} {TYPE_OF_TRANSACTION} {both };set_instance_parameter_value {router_005} {START_ADDRESS} {0x0 };set_instance_parameter_value {router_005} {END_ADDRESS} {0x0 };set_instance_parameter_value {router_005} {NON_SECURED_TAG} {1 };set_instance_parameter_value {router_005} {SECURED_RANGE_PAIRS} {0 };set_instance_parameter_value {router_005} {SECURED_RANGE_LIST} {0 };set_instance_parameter_value {router_005} {SPAN_OFFSET} {};set_instance_parameter_value {router_005} {PKT_ADDR_H} {625};set_instance_parameter_value {router_005} {PKT_ADDR_L} {576};set_instance_parameter_value {router_005} {PKT_PROTECTION_H} {658};set_instance_parameter_value {router_005} {PKT_PROTECTION_L} {656};set_instance_parameter_value {router_005} {PKT_DEST_ID_H} {654};set_instance_parameter_value {router_005} {PKT_DEST_ID_L} {653};set_instance_parameter_value {router_005} {PKT_TRANS_WRITE} {628};set_instance_parameter_value {router_005} {PKT_TRANS_READ} {629};set_instance_parameter_value {router_005} {ST_DATA_W} {677};set_instance_parameter_value {router_005} {ST_CHANNEL_W} {4};set_instance_parameter_value {router_005} {DECODER_TYPE} {1};set_instance_parameter_value {router_005} {DEFAULT_CHANNEL} {0};set_instance_parameter_value {router_005} {DEFAULT_WR_CHANNEL} {-1};set_instance_parameter_value {router_005} {DEFAULT_RD_CHANNEL} {-1};set_instance_parameter_value {router_005} {DEFAULT_DESTID} {0};set_instance_parameter_value {router_005} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {router_005} {MEMORY_ALIASING_DECODE} {0};set_instance_parameter_value {router_005} {HAS_USER_DEFAULT_SLAVE} {0};set_instance_parameter_value {router_005} {SYNC_RESET} {0};add_instance {pipe_stage_dma_write_m0_limiter} {altera_merlin_traffic_limiter};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {SYNC_RESET} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {PKT_DEST_ID_H} {654};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {PKT_DEST_ID_L} {653};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {PKT_SRC_ID_H} {652};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {PKT_SRC_ID_L} {651};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {PKT_BYTE_CNT_H} {640};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {PKT_BYTE_CNT_L} {632};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {PKT_BYTEEN_H} {575};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {PKT_BYTEEN_L} {512};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {PKT_TRANS_POSTED} {627};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {PKT_TRANS_WRITE} {628};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {PKT_THREAD_ID_H} {655};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {PKT_THREAD_ID_L} {655};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {MAX_BURST_LENGTH} {4};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {MAX_OUTSTANDING_RESPONSES} {65};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {PIPELINED} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {ST_DATA_W} {677};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {ST_CHANNEL_W} {4};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {VALID_WIDTH} {4};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {ENFORCE_ORDER} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {PREVENT_HAZARDS} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {SUPPORTS_POSTED_WRITES} {1};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {SUPPORTS_NONPOSTED_WRITES} {0};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {pipe_stage_dma_write_m0_limiter} {REORDER} {0};add_instance {pipe_stage_dma_read_m0_limiter} {altera_merlin_traffic_limiter};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {SYNC_RESET} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {PKT_DEST_ID_H} {654};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {PKT_DEST_ID_L} {653};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {PKT_SRC_ID_H} {652};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {PKT_SRC_ID_L} {651};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {PKT_BYTE_CNT_H} {640};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {PKT_BYTE_CNT_L} {632};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {PKT_BYTEEN_H} {575};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {PKT_BYTEEN_L} {512};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {PKT_TRANS_POSTED} {627};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {PKT_TRANS_WRITE} {628};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {PKT_THREAD_ID_H} {655};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {PKT_THREAD_ID_L} {655};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {MAX_BURST_LENGTH} {4};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {MAX_OUTSTANDING_RESPONSES} {65};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {PIPELINED} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {ST_DATA_W} {677};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {ST_CHANNEL_W} {4};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {VALID_WIDTH} {4};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {ENFORCE_ORDER} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {PREVENT_HAZARDS} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {SUPPORTS_POSTED_WRITES} {1};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {SUPPORTS_NONPOSTED_WRITES} {0};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {pipe_stage_dma_read_m0_limiter} {REORDER} {0};add_instance {cmd_demux} {altera_merlin_demultiplexer};set_instance_parameter_value {cmd_demux} {ST_DATA_W} {677};set_instance_parameter_value {cmd_demux} {ST_CHANNEL_W} {4};set_instance_parameter_value {cmd_demux} {NUM_OUTPUTS} {2};set_instance_parameter_value {cmd_demux} {VALID_WIDTH} {4};set_instance_parameter_value {cmd_demux} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {cmd_demux} {SYNC_RESET} {0};add_instance {cmd_demux_001} {altera_merlin_demultiplexer};set_instance_parameter_value {cmd_demux_001} {ST_DATA_W} {677};set_instance_parameter_value {cmd_demux_001} {ST_CHANNEL_W} {4};set_instance_parameter_value {cmd_demux_001} {NUM_OUTPUTS} {3};set_instance_parameter_value {cmd_demux_001} {VALID_WIDTH} {4};set_instance_parameter_value {cmd_demux_001} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {cmd_demux_001} {SYNC_RESET} {0};add_instance {cmd_mux} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux} {ST_DATA_W} {677};set_instance_parameter_value {cmd_mux} {ST_CHANNEL_W} {4};set_instance_parameter_value {cmd_mux} {NUM_INPUTS} {2};set_instance_parameter_value {cmd_mux} {PIPELINE_ARB} {0};set_instance_parameter_value {cmd_mux} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux} {PKT_TRANS_LOCK} {630};set_instance_parameter_value {cmd_mux} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux} {ARBITRATION_SHARES} {1 1 };set_instance_parameter_value {cmd_mux} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {cmd_mux} {SYNC_RESET} {0};add_instance {cmd_mux_001} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux_001} {ST_DATA_W} {677};set_instance_parameter_value {cmd_mux_001} {ST_CHANNEL_W} {4};set_instance_parameter_value {cmd_mux_001} {NUM_INPUTS} {1};set_instance_parameter_value {cmd_mux_001} {PIPELINE_ARB} {0};set_instance_parameter_value {cmd_mux_001} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux_001} {PKT_TRANS_LOCK} {630};set_instance_parameter_value {cmd_mux_001} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux_001} {ARBITRATION_SHARES} {1 };set_instance_parameter_value {cmd_mux_001} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {cmd_mux_001} {SYNC_RESET} {0};add_instance {cmd_mux_002} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux_002} {ST_DATA_W} {677};set_instance_parameter_value {cmd_mux_002} {ST_CHANNEL_W} {4};set_instance_parameter_value {cmd_mux_002} {NUM_INPUTS} {1};set_instance_parameter_value {cmd_mux_002} {PIPELINE_ARB} {0};set_instance_parameter_value {cmd_mux_002} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux_002} {PKT_TRANS_LOCK} {630};set_instance_parameter_value {cmd_mux_002} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux_002} {ARBITRATION_SHARES} {1 };set_instance_parameter_value {cmd_mux_002} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {cmd_mux_002} {SYNC_RESET} {0};add_instance {cmd_mux_003} {altera_merlin_multiplexer};set_instance_parameter_value {cmd_mux_003} {ST_DATA_W} {677};set_instance_parameter_value {cmd_mux_003} {ST_CHANNEL_W} {4};set_instance_parameter_value {cmd_mux_003} {NUM_INPUTS} {1};set_instance_parameter_value {cmd_mux_003} {PIPELINE_ARB} {0};set_instance_parameter_value {cmd_mux_003} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {cmd_mux_003} {PKT_TRANS_LOCK} {630};set_instance_parameter_value {cmd_mux_003} {ARBITRATION_SCHEME} {round-robin};set_instance_parameter_value {cmd_mux_003} {ARBITRATION_SHARES} {1 };set_instance_parameter_value {cmd_mux_003} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {cmd_mux_003} {SYNC_RESET} {0};add_instance {rsp_demux} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux} {ST_DATA_W} {677};set_instance_parameter_value {rsp_demux} {ST_CHANNEL_W} {4};set_instance_parameter_value {rsp_demux} {NUM_OUTPUTS} {2};set_instance_parameter_value {rsp_demux} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {rsp_demux} {SYNC_RESET} {0};add_instance {rsp_demux_001} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux_001} {ST_DATA_W} {677};set_instance_parameter_value {rsp_demux_001} {ST_CHANNEL_W} {4};set_instance_parameter_value {rsp_demux_001} {NUM_OUTPUTS} {1};set_instance_parameter_value {rsp_demux_001} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux_001} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {rsp_demux_001} {SYNC_RESET} {0};add_instance {rsp_demux_002} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux_002} {ST_DATA_W} {677};set_instance_parameter_value {rsp_demux_002} {ST_CHANNEL_W} {4};set_instance_parameter_value {rsp_demux_002} {NUM_OUTPUTS} {1};set_instance_parameter_value {rsp_demux_002} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux_002} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {rsp_demux_002} {SYNC_RESET} {0};add_instance {rsp_demux_003} {altera_merlin_demultiplexer};set_instance_parameter_value {rsp_demux_003} {ST_DATA_W} {677};set_instance_parameter_value {rsp_demux_003} {ST_CHANNEL_W} {4};set_instance_parameter_value {rsp_demux_003} {NUM_OUTPUTS} {1};set_instance_parameter_value {rsp_demux_003} {VALID_WIDTH} {1};set_instance_parameter_value {rsp_demux_003} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {rsp_demux_003} {SYNC_RESET} {0};add_instance {rsp_mux} {altera_merlin_multiplexer};set_instance_parameter_value {rsp_mux} {ST_DATA_W} {677};set_instance_parameter_value {rsp_mux} {ST_CHANNEL_W} {4};set_instance_parameter_value {rsp_mux} {NUM_INPUTS} {2};set_instance_parameter_value {rsp_mux} {PIPELINE_ARB} {0};set_instance_parameter_value {rsp_mux} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {rsp_mux} {PKT_TRANS_LOCK} {630};set_instance_parameter_value {rsp_mux} {ARBITRATION_SCHEME} {no-arb};set_instance_parameter_value {rsp_mux} {ARBITRATION_SHARES} {1 1 };set_instance_parameter_value {rsp_mux} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {rsp_mux} {SYNC_RESET} {0};add_instance {rsp_mux_001} {altera_merlin_multiplexer};set_instance_parameter_value {rsp_mux_001} {ST_DATA_W} {677};set_instance_parameter_value {rsp_mux_001} {ST_CHANNEL_W} {4};set_instance_parameter_value {rsp_mux_001} {NUM_INPUTS} {3};set_instance_parameter_value {rsp_mux_001} {PIPELINE_ARB} {0};set_instance_parameter_value {rsp_mux_001} {USE_EXTERNAL_ARB} {0};set_instance_parameter_value {rsp_mux_001} {PKT_TRANS_LOCK} {630};set_instance_parameter_value {rsp_mux_001} {ARBITRATION_SCHEME} {no-arb};set_instance_parameter_value {rsp_mux_001} {ARBITRATION_SHARES} {1 1 1 };set_instance_parameter_value {rsp_mux_001} {MERLIN_PACKET_FORMAT} {wunique(676) domain(675:674) snoop(673:670) barrier(669:668) ori_burst_size(667:665) response_status(664:663) cache(662:659) protection(658:656) thread_id(655) dest_id(654:653) src_id(652:651) qos(650) begin_burst(649) data_sideband(648) addr_sideband(647) burst_type(646:645) burst_size(644:642) burstwrap(641) byte_cnt(640:632) trans_exclusive(631) trans_lock(630) trans_read(629) trans_write(628) trans_posted(627) trans_compressed_read(626) addr(625:576) byteen(575:512) data(511:0)};set_instance_parameter_value {rsp_mux_001} {SYNC_RESET} {0};add_instance {pipe_stage_dma_write_reset_reset_bridge} {altera_reset_bridge};set_instance_parameter_value {pipe_stage_dma_write_reset_reset_bridge} {ACTIVE_LOW_RESET} {0};set_instance_parameter_value {pipe_stage_dma_write_reset_reset_bridge} {SYNCHRONOUS_EDGES} {deassert};set_instance_parameter_value {pipe_stage_dma_write_reset_reset_bridge} {NUM_RESET_OUTPUTS} {1};set_instance_parameter_value {pipe_stage_dma_write_reset_reset_bridge} {USE_RESET_REQUEST} {0};set_instance_parameter_value {pipe_stage_dma_write_reset_reset_bridge} {SYNC_RESET} {0};add_instance {clk_clk_clock_bridge} {altera_clock_bridge};set_instance_parameter_value {clk_clk_clock_bridge} {EXPLICIT_CLOCK_RATE} {200000000};set_instance_parameter_value {clk_clk_clock_bridge} {NUM_CLOCK_OUTPUTS} {1};add_connection {pipe_stage_dma_write_m0_translator.avalon_universal_master_0} {pipe_stage_dma_write_m0_agent.av} {avalon};set_connection_parameter_value {pipe_stage_dma_write_m0_translator.avalon_universal_master_0/pipe_stage_dma_write_m0_agent.av} {arbitrationPriority} {1};set_connection_parameter_value {pipe_stage_dma_write_m0_translator.avalon_universal_master_0/pipe_stage_dma_write_m0_agent.av} {baseAddress} {0x0000};set_connection_parameter_value {pipe_stage_dma_write_m0_translator.avalon_universal_master_0/pipe_stage_dma_write_m0_agent.av} {defaultConnection} {false};set_connection_parameter_value {pipe_stage_dma_write_m0_translator.avalon_universal_master_0/pipe_stage_dma_write_m0_agent.av} {domainAlias} {};set_connection_parameter_value {pipe_stage_dma_write_m0_translator.avalon_universal_master_0/pipe_stage_dma_write_m0_agent.av} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {pipe_stage_dma_write_m0_translator.avalon_universal_master_0/pipe_stage_dma_write_m0_agent.av} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {pipe_stage_dma_write_m0_translator.avalon_universal_master_0/pipe_stage_dma_write_m0_agent.av} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {pipe_stage_dma_write_m0_translator.avalon_universal_master_0/pipe_stage_dma_write_m0_agent.av} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {pipe_stage_dma_write_m0_translator.avalon_universal_master_0/pipe_stage_dma_write_m0_agent.av} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {pipe_stage_dma_write_m0_translator.avalon_universal_master_0/pipe_stage_dma_write_m0_agent.av} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {pipe_stage_dma_write_m0_translator.avalon_universal_master_0/pipe_stage_dma_write_m0_agent.av} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {pipe_stage_dma_write_m0_translator.avalon_universal_master_0/pipe_stage_dma_write_m0_agent.av} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {pipe_stage_dma_write_m0_translator.avalon_universal_master_0/pipe_stage_dma_write_m0_agent.av} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {pipe_stage_dma_write_m0_translator.avalon_universal_master_0/pipe_stage_dma_write_m0_agent.av} {qsys_mm.syncResets} {FALSE};add_connection {pipe_stage_dma_read_m0_translator.avalon_universal_master_0} {pipe_stage_dma_read_m0_agent.av} {avalon};set_connection_parameter_value {pipe_stage_dma_read_m0_translator.avalon_universal_master_0/pipe_stage_dma_read_m0_agent.av} {arbitrationPriority} {1};set_connection_parameter_value {pipe_stage_dma_read_m0_translator.avalon_universal_master_0/pipe_stage_dma_read_m0_agent.av} {baseAddress} {0x0000};set_connection_parameter_value {pipe_stage_dma_read_m0_translator.avalon_universal_master_0/pipe_stage_dma_read_m0_agent.av} {defaultConnection} {false};set_connection_parameter_value {pipe_stage_dma_read_m0_translator.avalon_universal_master_0/pipe_stage_dma_read_m0_agent.av} {domainAlias} {};set_connection_parameter_value {pipe_stage_dma_read_m0_translator.avalon_universal_master_0/pipe_stage_dma_read_m0_agent.av} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {pipe_stage_dma_read_m0_translator.avalon_universal_master_0/pipe_stage_dma_read_m0_agent.av} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {pipe_stage_dma_read_m0_translator.avalon_universal_master_0/pipe_stage_dma_read_m0_agent.av} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {pipe_stage_dma_read_m0_translator.avalon_universal_master_0/pipe_stage_dma_read_m0_agent.av} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {pipe_stage_dma_read_m0_translator.avalon_universal_master_0/pipe_stage_dma_read_m0_agent.av} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {pipe_stage_dma_read_m0_translator.avalon_universal_master_0/pipe_stage_dma_read_m0_agent.av} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {pipe_stage_dma_read_m0_translator.avalon_universal_master_0/pipe_stage_dma_read_m0_agent.av} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {pipe_stage_dma_read_m0_translator.avalon_universal_master_0/pipe_stage_dma_read_m0_agent.av} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {pipe_stage_dma_read_m0_translator.avalon_universal_master_0/pipe_stage_dma_read_m0_agent.av} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {pipe_stage_dma_read_m0_translator.avalon_universal_master_0/pipe_stage_dma_read_m0_agent.av} {qsys_mm.syncResets} {FALSE};add_connection {pipe_stage_mem_s0_agent.m0} {pipe_stage_mem_s0_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {pipe_stage_mem_s0_agent.m0/pipe_stage_mem_s0_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {pipe_stage_mem_s0_agent.m0/pipe_stage_mem_s0_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {pipe_stage_mem_s0_agent.m0/pipe_stage_mem_s0_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {pipe_stage_mem_s0_agent.m0/pipe_stage_mem_s0_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {pipe_stage_mem_s0_agent.m0/pipe_stage_mem_s0_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {pipe_stage_mem_s0_agent.m0/pipe_stage_mem_s0_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {pipe_stage_mem_s0_agent.m0/pipe_stage_mem_s0_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {pipe_stage_mem_s0_agent.m0/pipe_stage_mem_s0_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {pipe_stage_mem_s0_agent.m0/pipe_stage_mem_s0_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {pipe_stage_mem_s0_agent.m0/pipe_stage_mem_s0_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {pipe_stage_mem_s0_agent.m0/pipe_stage_mem_s0_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {pipe_stage_mem_s0_agent.m0/pipe_stage_mem_s0_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {pipe_stage_mem_s0_agent.m0/pipe_stage_mem_s0_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {pipe_stage_mem_s0_agent.m0/pipe_stage_mem_s0_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {pipe_stage_mem_s0_agent.rf_source} {pipe_stage_mem_s0_agent_rsp_fifo.in} {avalon_streaming};add_connection {pipe_stage_mem_s0_agent_rsp_fifo.out} {pipe_stage_mem_s0_agent.rf_sink} {avalon_streaming};add_connection {pipe_stage_mem_s0_agent.rdata_fifo_src} {pipe_stage_mem_s0_agent.rdata_fifo_sink} {avalon_streaming};add_connection {cmd_mux.src} {pipe_stage_mem_s0_agent.cp} {avalon_streaming};preview_set_connection_tag {cmd_mux.src/pipe_stage_mem_s0_agent.cp} {qsys_mm.command};add_connection {pipe_stage_host_wr_s0_agent.m0} {pipe_stage_host_wr_s0_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {pipe_stage_host_wr_s0_agent.m0/pipe_stage_host_wr_s0_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {pipe_stage_host_wr_s0_agent.m0/pipe_stage_host_wr_s0_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {pipe_stage_host_wr_s0_agent.m0/pipe_stage_host_wr_s0_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {pipe_stage_host_wr_s0_agent.m0/pipe_stage_host_wr_s0_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {pipe_stage_host_wr_s0_agent.m0/pipe_stage_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {pipe_stage_host_wr_s0_agent.m0/pipe_stage_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {pipe_stage_host_wr_s0_agent.m0/pipe_stage_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {pipe_stage_host_wr_s0_agent.m0/pipe_stage_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {pipe_stage_host_wr_s0_agent.m0/pipe_stage_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {pipe_stage_host_wr_s0_agent.m0/pipe_stage_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {pipe_stage_host_wr_s0_agent.m0/pipe_stage_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {pipe_stage_host_wr_s0_agent.m0/pipe_stage_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {pipe_stage_host_wr_s0_agent.m0/pipe_stage_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {pipe_stage_host_wr_s0_agent.m0/pipe_stage_host_wr_s0_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {pipe_stage_host_wr_s0_agent.rf_source} {pipe_stage_host_wr_s0_agent_rsp_fifo.in} {avalon_streaming};add_connection {pipe_stage_host_wr_s0_agent_rsp_fifo.out} {pipe_stage_host_wr_s0_agent.rf_sink} {avalon_streaming};add_connection {pipe_stage_host_wr_s0_agent.rdata_fifo_src} {pipe_stage_host_wr_s0_agent.rdata_fifo_sink} {avalon_streaming};add_connection {cmd_mux_001.src} {pipe_stage_host_wr_s0_agent.cp} {avalon_streaming};preview_set_connection_tag {cmd_mux_001.src/pipe_stage_host_wr_s0_agent.cp} {qsys_mm.command};add_connection {pipe_stage_host_rd_s0_agent.m0} {pipe_stage_host_rd_s0_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {pipe_stage_host_rd_s0_agent.m0/pipe_stage_host_rd_s0_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {pipe_stage_host_rd_s0_agent.m0/pipe_stage_host_rd_s0_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {pipe_stage_host_rd_s0_agent.m0/pipe_stage_host_rd_s0_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {pipe_stage_host_rd_s0_agent.m0/pipe_stage_host_rd_s0_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {pipe_stage_host_rd_s0_agent.m0/pipe_stage_host_rd_s0_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {pipe_stage_host_rd_s0_agent.m0/pipe_stage_host_rd_s0_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {pipe_stage_host_rd_s0_agent.m0/pipe_stage_host_rd_s0_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {pipe_stage_host_rd_s0_agent.m0/pipe_stage_host_rd_s0_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {pipe_stage_host_rd_s0_agent.m0/pipe_stage_host_rd_s0_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {pipe_stage_host_rd_s0_agent.m0/pipe_stage_host_rd_s0_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {pipe_stage_host_rd_s0_agent.m0/pipe_stage_host_rd_s0_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {pipe_stage_host_rd_s0_agent.m0/pipe_stage_host_rd_s0_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {pipe_stage_host_rd_s0_agent.m0/pipe_stage_host_rd_s0_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {pipe_stage_host_rd_s0_agent.m0/pipe_stage_host_rd_s0_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {pipe_stage_host_rd_s0_agent.rf_source} {pipe_stage_host_rd_s0_agent_rsp_fifo.in} {avalon_streaming};add_connection {pipe_stage_host_rd_s0_agent_rsp_fifo.out} {pipe_stage_host_rd_s0_agent.rf_sink} {avalon_streaming};add_connection {pipe_stage_host_rd_s0_agent.rdata_fifo_src} {pipe_stage_host_rd_s0_agent.rdata_fifo_sink} {avalon_streaming};add_connection {cmd_mux_002.src} {pipe_stage_host_rd_s0_agent.cp} {avalon_streaming};preview_set_connection_tag {cmd_mux_002.src/pipe_stage_host_rd_s0_agent.cp} {qsys_mm.command};add_connection {magic_number_rom_slave_agent.m0} {magic_number_rom_slave_translator.avalon_universal_slave_0} {avalon};set_connection_parameter_value {magic_number_rom_slave_agent.m0/magic_number_rom_slave_translator.avalon_universal_slave_0} {arbitrationPriority} {1};set_connection_parameter_value {magic_number_rom_slave_agent.m0/magic_number_rom_slave_translator.avalon_universal_slave_0} {baseAddress} {0x0000};set_connection_parameter_value {magic_number_rom_slave_agent.m0/magic_number_rom_slave_translator.avalon_universal_slave_0} {defaultConnection} {false};set_connection_parameter_value {magic_number_rom_slave_agent.m0/magic_number_rom_slave_translator.avalon_universal_slave_0} {domainAlias} {};set_connection_parameter_value {magic_number_rom_slave_agent.m0/magic_number_rom_slave_translator.avalon_universal_slave_0} {qsys_mm.maxAdditionalLatency} {1};set_connection_parameter_value {magic_number_rom_slave_agent.m0/magic_number_rom_slave_translator.avalon_universal_slave_0} {qsys_mm.clockCrossingAdapter} {HANDSHAKE};set_connection_parameter_value {magic_number_rom_slave_agent.m0/magic_number_rom_slave_translator.avalon_universal_slave_0} {qsys_mm.insertDefaultSlave} {FALSE};set_connection_parameter_value {magic_number_rom_slave_agent.m0/magic_number_rom_slave_translator.avalon_universal_slave_0} {qsys_mm.enableInstrumentation} {FALSE};set_connection_parameter_value {magic_number_rom_slave_agent.m0/magic_number_rom_slave_translator.avalon_universal_slave_0} {qsys_mm.interconnectResetSource} {DEFAULT};set_connection_parameter_value {magic_number_rom_slave_agent.m0/magic_number_rom_slave_translator.avalon_universal_slave_0} {qsys_mm.burstAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {magic_number_rom_slave_agent.m0/magic_number_rom_slave_translator.avalon_universal_slave_0} {qsys_mm.widthAdapterImplementation} {GENERIC_CONVERTER};set_connection_parameter_value {magic_number_rom_slave_agent.m0/magic_number_rom_slave_translator.avalon_universal_slave_0} {qsys_mm.enableEccProtection} {FALSE};set_connection_parameter_value {magic_number_rom_slave_agent.m0/magic_number_rom_slave_translator.avalon_universal_slave_0} {qsys_mm.interconnectType} {STANDARD};set_connection_parameter_value {magic_number_rom_slave_agent.m0/magic_number_rom_slave_translator.avalon_universal_slave_0} {qsys_mm.syncResets} {FALSE};add_connection {magic_number_rom_slave_agent.rf_source} {magic_number_rom_slave_agent_rsp_fifo.in} {avalon_streaming};add_connection {magic_number_rom_slave_agent_rsp_fifo.out} {magic_number_rom_slave_agent.rf_sink} {avalon_streaming};add_connection {magic_number_rom_slave_agent.rdata_fifo_src} {magic_number_rom_slave_agent.rdata_fifo_sink} {avalon_streaming};add_connection {cmd_mux_003.src} {magic_number_rom_slave_agent.cp} {avalon_streaming};preview_set_connection_tag {cmd_mux_003.src/magic_number_rom_slave_agent.cp} {qsys_mm.command};add_connection {pipe_stage_dma_write_m0_agent.cp} {router.sink} {avalon_streaming};preview_set_connection_tag {pipe_stage_dma_write_m0_agent.cp/router.sink} {qsys_mm.command};add_connection {pipe_stage_dma_read_m0_agent.cp} {router_001.sink} {avalon_streaming};preview_set_connection_tag {pipe_stage_dma_read_m0_agent.cp/router_001.sink} {qsys_mm.command};add_connection {pipe_stage_mem_s0_agent.rp} {router_002.sink} {avalon_streaming};preview_set_connection_tag {pipe_stage_mem_s0_agent.rp/router_002.sink} {qsys_mm.response};add_connection {router_002.src} {rsp_demux.sink} {avalon_streaming};preview_set_connection_tag {router_002.src/rsp_demux.sink} {qsys_mm.response};add_connection {pipe_stage_host_wr_s0_agent.rp} {router_003.sink} {avalon_streaming};preview_set_connection_tag {pipe_stage_host_wr_s0_agent.rp/router_003.sink} {qsys_mm.response};add_connection {router_003.src} {rsp_demux_001.sink} {avalon_streaming};preview_set_connection_tag {router_003.src/rsp_demux_001.sink} {qsys_mm.response};add_connection {pipe_stage_host_rd_s0_agent.rp} {router_004.sink} {avalon_streaming};preview_set_connection_tag {pipe_stage_host_rd_s0_agent.rp/router_004.sink} {qsys_mm.response};add_connection {router_004.src} {rsp_demux_002.sink} {avalon_streaming};preview_set_connection_tag {router_004.src/rsp_demux_002.sink} {qsys_mm.response};add_connection {magic_number_rom_slave_agent.rp} {router_005.sink} {avalon_streaming};preview_set_connection_tag {magic_number_rom_slave_agent.rp/router_005.sink} {qsys_mm.response};add_connection {router_005.src} {rsp_demux_003.sink} {avalon_streaming};preview_set_connection_tag {router_005.src/rsp_demux_003.sink} {qsys_mm.response};add_connection {router.src} {pipe_stage_dma_write_m0_limiter.cmd_sink} {avalon_streaming};preview_set_connection_tag {router.src/pipe_stage_dma_write_m0_limiter.cmd_sink} {qsys_mm.command};add_connection {pipe_stage_dma_write_m0_limiter.cmd_src} {cmd_demux.sink} {avalon_streaming};preview_set_connection_tag {pipe_stage_dma_write_m0_limiter.cmd_src/cmd_demux.sink} {qsys_mm.command};add_connection {rsp_mux.src} {pipe_stage_dma_write_m0_limiter.rsp_sink} {avalon_streaming};preview_set_connection_tag {rsp_mux.src/pipe_stage_dma_write_m0_limiter.rsp_sink} {qsys_mm.response};add_connection {pipe_stage_dma_write_m0_limiter.rsp_src} {pipe_stage_dma_write_m0_agent.rp} {avalon_streaming};preview_set_connection_tag {pipe_stage_dma_write_m0_limiter.rsp_src/pipe_stage_dma_write_m0_agent.rp} {qsys_mm.response};add_connection {router_001.src} {pipe_stage_dma_read_m0_limiter.cmd_sink} {avalon_streaming};preview_set_connection_tag {router_001.src/pipe_stage_dma_read_m0_limiter.cmd_sink} {qsys_mm.command};add_connection {pipe_stage_dma_read_m0_limiter.cmd_src} {cmd_demux_001.sink} {avalon_streaming};preview_set_connection_tag {pipe_stage_dma_read_m0_limiter.cmd_src/cmd_demux_001.sink} {qsys_mm.command};add_connection {rsp_mux_001.src} {pipe_stage_dma_read_m0_limiter.rsp_sink} {avalon_streaming};preview_set_connection_tag {rsp_mux_001.src/pipe_stage_dma_read_m0_limiter.rsp_sink} {qsys_mm.response};add_connection {pipe_stage_dma_read_m0_limiter.rsp_src} {pipe_stage_dma_read_m0_agent.rp} {avalon_streaming};preview_set_connection_tag {pipe_stage_dma_read_m0_limiter.rsp_src/pipe_stage_dma_read_m0_agent.rp} {qsys_mm.response};add_connection {cmd_demux.src0} {cmd_mux.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src0/cmd_mux.sink0} {qsys_mm.command};add_connection {cmd_demux.src1} {cmd_mux_001.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux.src1/cmd_mux_001.sink0} {qsys_mm.command};add_connection {cmd_demux_001.src0} {cmd_mux.sink1} {avalon_streaming};preview_set_connection_tag {cmd_demux_001.src0/cmd_mux.sink1} {qsys_mm.command};add_connection {cmd_demux_001.src1} {cmd_mux_002.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux_001.src1/cmd_mux_002.sink0} {qsys_mm.command};add_connection {cmd_demux_001.src2} {cmd_mux_003.sink0} {avalon_streaming};preview_set_connection_tag {cmd_demux_001.src2/cmd_mux_003.sink0} {qsys_mm.command};add_connection {rsp_demux.src0} {rsp_mux.sink0} {avalon_streaming};preview_set_connection_tag {rsp_demux.src0/rsp_mux.sink0} {qsys_mm.response};add_connection {rsp_demux.src1} {rsp_mux_001.sink0} {avalon_streaming};preview_set_connection_tag {rsp_demux.src1/rsp_mux_001.sink0} {qsys_mm.response};add_connection {rsp_demux_001.src0} {rsp_mux.sink1} {avalon_streaming};preview_set_connection_tag {rsp_demux_001.src0/rsp_mux.sink1} {qsys_mm.response};add_connection {rsp_demux_002.src0} {rsp_mux_001.sink1} {avalon_streaming};preview_set_connection_tag {rsp_demux_002.src0/rsp_mux_001.sink1} {qsys_mm.response};add_connection {rsp_demux_003.src0} {rsp_mux_001.sink2} {avalon_streaming};preview_set_connection_tag {rsp_demux_003.src0/rsp_mux_001.sink2} {qsys_mm.response};add_connection {pipe_stage_dma_write_m0_limiter.cmd_valid} {cmd_demux.sink_valid} {avalon_streaming};add_connection {pipe_stage_dma_read_m0_limiter.cmd_valid} {cmd_demux_001.sink_valid} {avalon_streaming};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {pipe_stage_dma_write_m0_translator.reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {pipe_stage_dma_read_m0_translator.reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {pipe_stage_mem_s0_translator.reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {pipe_stage_host_wr_s0_translator.reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {pipe_stage_host_rd_s0_translator.reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {magic_number_rom_slave_translator.reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {pipe_stage_dma_write_m0_agent.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {pipe_stage_dma_read_m0_agent.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {pipe_stage_mem_s0_agent.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {pipe_stage_mem_s0_agent_rsp_fifo.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {pipe_stage_host_wr_s0_agent.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {pipe_stage_host_wr_s0_agent_rsp_fifo.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {pipe_stage_host_rd_s0_agent.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {pipe_stage_host_rd_s0_agent_rsp_fifo.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {magic_number_rom_slave_agent.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {magic_number_rom_slave_agent_rsp_fifo.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {router.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {router_001.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {router_002.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {router_003.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {router_004.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {router_005.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {pipe_stage_dma_write_m0_limiter.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {pipe_stage_dma_read_m0_limiter.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {cmd_demux.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {cmd_demux_001.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {cmd_mux.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {cmd_mux_001.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {cmd_mux_002.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {cmd_mux_003.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {rsp_demux.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {rsp_demux_001.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {rsp_demux_002.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {rsp_demux_003.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {rsp_mux.clk_reset} {reset};add_connection {pipe_stage_dma_write_reset_reset_bridge.out_reset} {rsp_mux_001.clk_reset} {reset};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_dma_write_m0_translator.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_dma_read_m0_translator.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_mem_s0_translator.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_host_wr_s0_translator.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_host_rd_s0_translator.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {magic_number_rom_slave_translator.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_dma_write_m0_agent.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_dma_read_m0_agent.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_mem_s0_agent.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_mem_s0_agent_rsp_fifo.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_host_wr_s0_agent.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_host_wr_s0_agent_rsp_fifo.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_host_rd_s0_agent.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_host_rd_s0_agent_rsp_fifo.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {magic_number_rom_slave_agent.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {magic_number_rom_slave_agent_rsp_fifo.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {router.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {router_001.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {router_002.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {router_003.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {router_004.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {router_005.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_dma_write_m0_limiter.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_dma_read_m0_limiter.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {cmd_demux.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {rsp_mux.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {cmd_demux_001.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {rsp_mux_001.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {cmd_mux.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {rsp_demux.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {cmd_mux_001.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {rsp_demux_001.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {cmd_mux_002.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {rsp_demux_002.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {cmd_mux_003.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {rsp_demux_003.clk} {clock};add_connection {clk_clk_clock_bridge.out_clk} {pipe_stage_dma_write_reset_reset_bridge.clk} {clock};add_interface {pipe_stage_dma_write_m0} {avalon} {slave};set_interface_property {pipe_stage_dma_write_m0} {EXPORT_OF} {pipe_stage_dma_write_m0_translator.avalon_anti_master_0};add_interface {pipe_stage_dma_read_m0} {avalon} {slave};set_interface_property {pipe_stage_dma_read_m0} {EXPORT_OF} {pipe_stage_dma_read_m0_translator.avalon_anti_master_0};add_interface {pipe_stage_mem_s0} {avalon} {master};set_interface_property {pipe_stage_mem_s0} {EXPORT_OF} {pipe_stage_mem_s0_translator.avalon_anti_slave_0};add_interface {pipe_stage_host_wr_s0} {avalon} {master};set_interface_property {pipe_stage_host_wr_s0} {EXPORT_OF} {pipe_stage_host_wr_s0_translator.avalon_anti_slave_0};add_interface {pipe_stage_host_rd_s0} {avalon} {master};set_interface_property {pipe_stage_host_rd_s0} {EXPORT_OF} {pipe_stage_host_rd_s0_translator.avalon_anti_slave_0};add_interface {magic_number_rom_slave} {avalon} {master};set_interface_property {magic_number_rom_slave} {EXPORT_OF} {magic_number_rom_slave_translator.avalon_anti_slave_0};add_interface {pipe_stage_dma_write_reset_reset_bridge_in_reset} {reset} {slave};set_interface_property {pipe_stage_dma_write_reset_reset_bridge_in_reset} {EXPORT_OF} {pipe_stage_dma_write_reset_reset_bridge.in_reset};add_interface {clk_clk} {clock} {slave};set_interface_property {clk_clk} {EXPORT_OF} {clk_clk_clock_bridge.in_clk};set_module_assignment {interconnect_id.magic_number_rom.slave} {0};set_module_assignment {interconnect_id.pipe_stage_dma_read.m0} {0};set_module_assignment {interconnect_id.pipe_stage_dma_write.m0} {1};set_module_assignment {interconnect_id.pipe_stage_host_rd.s0} {1};set_module_assignment {interconnect_id.pipe_stage_host_wr.s0} {2};set_module_assignment {interconnect_id.pipe_stage_mem.s0} {3};" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_mm_interconnect_191/synth/msgdma_bbb_altera_mm_interconnect_191_iuu5b4y.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_mm_interconnect_191/synth/msgdma_bbb_altera_mm_interconnect_191_iuu5b4y.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_mm_interconnect/altera_mm_interconnect_hw.tcl" />
  </sourceFiles>
  <childSourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_translator/altera_merlin_master_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_translator/altera_merlin_slave_translator_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_agent/altera_merlin_master_agent_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_agent/altera_merlin_slave_agent_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_traffic_limiter/altera_merlin_traffic_limiter_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/iconnect/alt_hiconnect_sc_fifo/alt_hiconnect_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
  </childSourceFiles>
  <instantiator instantiator="msgdma_bbb" as="mm_interconnect_3" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_master_translator_191_g7h47bq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_slave_translator_191_x56fcki"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_master_agent_191_mpbm6tq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_slave_agent_191_ncfkfri"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_avalon_sc_fifo_191_e5eqkcq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_acw7igi"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_c35n5ai"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_ryksocy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_ai6ulwa"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_7mgzb3i"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_kcba44q"</message>
   <message level="Info" culprit="my_altera_avalon_sc_fifo_dest_id_fifo">"Generating: my_altera_avalon_sc_fifo_dest_id_fifo"</message>
   <message level="Info" culprit="my_alt_hiconnect_sc_fifo_dest_id_fifo">"Generating: my_alt_hiconnect_sc_fifo_dest_id_fifo"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_bbthvuy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_avalon_sc_fifo_191_e5eqkcq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_oslblqy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_alt_hiconnect_sc_fifo_191_7qtmpqq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_5js56xy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_b4filfy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_br63msi"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_fkmy6zy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_osdbpdq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_kazjgxy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_jurlxwy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_2n4vlwy"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_master_translator"
   version="19.1"
   name="msgdma_bbb_altera_merlin_master_translator_191_g7h47bq">
  <parameter name="WAITREQUEST_ALLOWANCE" value="0" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_master_translator_191/synth/msgdma_bbb_altera_merlin_master_translator_191_g7h47bq.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_master_translator_191/synth/msgdma_bbb_altera_merlin_master_translator_191_g7h47bq.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_translator/altera_merlin_master_translator_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_jmxhaza"
     as="dma_read_master_Data_Read_Master_translator" />
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_32dta6a"
     as="dma_write_master_Data_Write_Master_translator" />
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="csr_m0_translator" />
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="pipe_stage_dma_write_m0_translator,pipe_stage_dma_read_m0_translator" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_master_translator_191_g7h47bq"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_slave_translator"
   version="19.1"
   name="msgdma_bbb_altera_merlin_slave_translator_191_x56fcki">
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_slave_translator_191/synth/msgdma_bbb_altera_merlin_slave_translator_191_x56fcki.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_slave_translator_191/synth/msgdma_bbb_altera_merlin_slave_translator_191_x56fcki.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_translator/altera_merlin_slave_translator_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_jmxhaza"
     as="pipe_stage_dma_read_s0_translator" />
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_32dta6a"
     as="pipe_stage_dma_write_s0_translator" />
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="modular_sgdma_dispatcher_0_CSR_translator,modular_sgdma_dispatcher_0_Descriptor_Slave_translator,msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_translator" />
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="pipe_stage_mem_s0_translator,pipe_stage_host_wr_s0_translator,pipe_stage_host_rd_s0_translator,magic_number_rom_slave_translator" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_slave_translator_191_x56fcki"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_master_agent"
   version="19.1"
   name="msgdma_bbb_altera_merlin_master_agent_191_mpbm6tq">
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_master_agent_191/synth/msgdma_bbb_altera_merlin_master_agent_191_mpbm6tq.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_master_agent_191/synth/msgdma_bbb_altera_merlin_master_agent_191_mpbm6tq.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_master_agent/altera_merlin_master_agent_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="csr_m0_agent" />
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="pipe_stage_dma_write_m0_agent,pipe_stage_dma_read_m0_agent" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_master_agent_191_mpbm6tq"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_slave_agent"
   version="19.1"
   name="msgdma_bbb_altera_merlin_slave_agent_191_ncfkfri">
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_slave_agent_191/synth/msgdma_bbb_altera_merlin_slave_agent_191_ncfkfri.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_slave_agent_191/synth/altera_merlin_burst_uncompressor.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_slave_agent_191/synth/msgdma_bbb_altera_merlin_slave_agent_191_ncfkfri.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_slave_agent_191/synth/altera_merlin_burst_uncompressor.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_slave_agent/altera_merlin_slave_agent_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="modular_sgdma_dispatcher_0_CSR_agent,modular_sgdma_dispatcher_0_Descriptor_Slave_agent,msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent" />
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="pipe_stage_mem_s0_agent,pipe_stage_host_wr_s0_agent,pipe_stage_host_rd_s0_agent,magic_number_rom_slave_agent" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_slave_agent_191_ncfkfri"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_router"
   version="19.1"
   name="msgdma_bbb_altera_merlin_router_191_7nsl54q">
  <parameter name="ST_CHANNEL_W" value="3" />
  <parameter name="DEFAULT_WR_CHANNEL" value="-1" />
  <parameter name="PKT_TRANS_READ" value="82" />
  <parameter name="START_ADDRESS" value="0x0,0x40,0x60" />
  <parameter name="DEFAULT_CHANNEL" value="2" />
  <parameter name="MEMORY_ALIASING_DECODE" value="0" />
  <parameter name="HAS_USER_DEFAULT_SLAVE" value="0" />
  <parameter
     name="SLAVES_INFO"
     value="2:100:0x0:0x40:both:1:0:0:1,0:001:0x40:0x60:both:1:0:0:1,1:010:0x60:0x80:write:1:0:0:1" />
  <parameter name="DEFAULT_RD_CHANNEL" value="-1" />
  <parameter name="PKT_ADDR_H" value="78" />
  <parameter name="PKT_DEST_ID_H" value="104" />
  <parameter name="PKT_ADDR_L" value="72" />
  <parameter name="PKT_DEST_ID_L" value="103" />
  <parameter name="CHANNEL_ID" value="100,001,010" />
  <parameter name="TYPE_OF_TRANSACTION" value="both,both,write" />
  <parameter name="SECURED_RANGE_PAIRS" value="0,0,0" />
  <parameter name="SPAN_OFFSET" value="" />
  <parameter name="ST_DATA_W" value="127" />
  <parameter name="SECURED_RANGE_LIST" value="0,0,0" />
  <parameter name="DECODER_TYPE" value="0" />
  <parameter name="PKT_PROTECTION_H" value="108" />
  <parameter name="END_ADDRESS" value="0x40,0x60,0x80" />
  <parameter name="PKT_PROTECTION_L" value="106" />
  <parameter name="PKT_TRANS_WRITE" value="81" />
  <parameter name="DEFAULT_DESTID" value="2" />
  <parameter name="DESTINATION_ID" value="2,0,1" />
  <parameter name="NON_SECURED_TAG" value="1,1,1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_7nsl54q.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_7nsl54q.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="router" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_7nsl54q"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_router"
   version="19.1"
   name="msgdma_bbb_altera_merlin_router_191_bjgub5i">
  <parameter name="ST_CHANNEL_W" value="3" />
  <parameter name="DEFAULT_WR_CHANNEL" value="-1" />
  <parameter name="PKT_TRANS_READ" value="46" />
  <parameter name="START_ADDRESS" value="0x0" />
  <parameter name="DEFAULT_CHANNEL" value="0" />
  <parameter name="MEMORY_ALIASING_DECODE" value="0" />
  <parameter name="HAS_USER_DEFAULT_SLAVE" value="0" />
  <parameter name="SLAVES_INFO" value="0:1:0x0:0x0:both:1:0:0:1" />
  <parameter name="DEFAULT_RD_CHANNEL" value="-1" />
  <parameter name="PKT_ADDR_H" value="42" />
  <parameter name="PKT_DEST_ID_H" value="68" />
  <parameter name="PKT_ADDR_L" value="36" />
  <parameter name="PKT_DEST_ID_L" value="67" />
  <parameter name="CHANNEL_ID" value="1" />
  <parameter name="TYPE_OF_TRANSACTION" value="both" />
  <parameter name="SECURED_RANGE_PAIRS" value="0" />
  <parameter name="SPAN_OFFSET" value="" />
  <parameter name="ST_DATA_W" value="91" />
  <parameter name="SECURED_RANGE_LIST" value="0" />
  <parameter name="DECODER_TYPE" value="1" />
  <parameter name="PKT_PROTECTION_H" value="72" />
  <parameter name="END_ADDRESS" value="0x0" />
  <parameter name="PKT_PROTECTION_L" value="70" />
  <parameter name="PKT_TRANS_WRITE" value="45" />
  <parameter name="DEFAULT_DESTID" value="0" />
  <parameter name="DESTINATION_ID" value="0" />
  <parameter name="NON_SECURED_TAG" value="1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_bjgub5i.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_bjgub5i.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="router_001" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_bjgub5i"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_router"
   version="19.1"
   name="msgdma_bbb_altera_merlin_router_191_k5ic25a">
  <parameter name="ST_CHANNEL_W" value="3" />
  <parameter name="DEFAULT_WR_CHANNEL" value="-1" />
  <parameter name="PKT_TRANS_READ" value="298" />
  <parameter name="START_ADDRESS" value="0x0" />
  <parameter name="DEFAULT_CHANNEL" value="0" />
  <parameter name="MEMORY_ALIASING_DECODE" value="0" />
  <parameter name="HAS_USER_DEFAULT_SLAVE" value="0" />
  <parameter name="SLAVES_INFO" value="0:1:0x0:0x0:both:1:0:0:1" />
  <parameter name="DEFAULT_RD_CHANNEL" value="-1" />
  <parameter name="PKT_ADDR_H" value="294" />
  <parameter name="PKT_DEST_ID_H" value="320" />
  <parameter name="PKT_ADDR_L" value="288" />
  <parameter name="PKT_DEST_ID_L" value="319" />
  <parameter name="CHANNEL_ID" value="1" />
  <parameter name="TYPE_OF_TRANSACTION" value="both" />
  <parameter name="SECURED_RANGE_PAIRS" value="0" />
  <parameter name="SPAN_OFFSET" value="" />
  <parameter name="ST_DATA_W" value="343" />
  <parameter name="SECURED_RANGE_LIST" value="0" />
  <parameter name="DECODER_TYPE" value="1" />
  <parameter name="PKT_PROTECTION_H" value="324" />
  <parameter name="END_ADDRESS" value="0x0" />
  <parameter name="PKT_PROTECTION_L" value="322" />
  <parameter name="PKT_TRANS_WRITE" value="297" />
  <parameter name="DEFAULT_DESTID" value="0" />
  <parameter name="DESTINATION_ID" value="0" />
  <parameter name="NON_SECURED_TAG" value="1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_k5ic25a.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_k5ic25a.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="router_002" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_k5ic25a"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_router"
   version="19.1"
   name="msgdma_bbb_altera_merlin_router_191_qypc7ni">
  <parameter name="ST_CHANNEL_W" value="3" />
  <parameter name="DEFAULT_WR_CHANNEL" value="-1" />
  <parameter name="PKT_TRANS_READ" value="82" />
  <parameter name="START_ADDRESS" value="0x0" />
  <parameter name="DEFAULT_CHANNEL" value="0" />
  <parameter name="MEMORY_ALIASING_DECODE" value="0" />
  <parameter name="HAS_USER_DEFAULT_SLAVE" value="0" />
  <parameter name="SLAVES_INFO" value="0:1:0x0:0x0:both:1:0:0:1" />
  <parameter name="DEFAULT_RD_CHANNEL" value="-1" />
  <parameter name="PKT_ADDR_H" value="78" />
  <parameter name="PKT_DEST_ID_H" value="104" />
  <parameter name="PKT_ADDR_L" value="72" />
  <parameter name="PKT_DEST_ID_L" value="103" />
  <parameter name="CHANNEL_ID" value="1" />
  <parameter name="TYPE_OF_TRANSACTION" value="both" />
  <parameter name="SECURED_RANGE_PAIRS" value="0" />
  <parameter name="SPAN_OFFSET" value="" />
  <parameter name="ST_DATA_W" value="127" />
  <parameter name="SECURED_RANGE_LIST" value="0" />
  <parameter name="DECODER_TYPE" value="1" />
  <parameter name="PKT_PROTECTION_H" value="108" />
  <parameter name="END_ADDRESS" value="0x0" />
  <parameter name="PKT_PROTECTION_L" value="106" />
  <parameter name="PKT_TRANS_WRITE" value="81" />
  <parameter name="DEFAULT_DESTID" value="0" />
  <parameter name="DESTINATION_ID" value="0" />
  <parameter name="NON_SECURED_TAG" value="1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_qypc7ni.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_qypc7ni.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="router_003" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_qypc7ni"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_traffic_limiter"
   version="19.1"
   name="msgdma_bbb_altera_merlin_traffic_limiter_191_kcba44q">
  <parameter name="SYNC_RESET" value="0" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_traffic_limiter_191/synth/altera_merlin_reorder_memory.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_traffic_limiter_191/synth/altera_avalon_st_pipeline_base.v"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_traffic_limiter_191/synth/msgdma_bbb_altera_merlin_traffic_limiter_191_kcba44q.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_traffic_limiter_191/synth/altera_merlin_reorder_memory.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_traffic_limiter_191/synth/altera_avalon_st_pipeline_base.v"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_traffic_limiter_191/synth/msgdma_bbb_altera_merlin_traffic_limiter_191_kcba44q.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_traffic_limiter/altera_merlin_traffic_limiter_hw.tcl" />
  </sourceFiles>
  <childSourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/iconnect/alt_hiconnect_sc_fifo/alt_hiconnect_sc_fifo_hw.tcl" />
  </childSourceFiles>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="csr_m0_limiter" />
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="pipe_stage_dma_write_m0_limiter,pipe_stage_dma_read_m0_limiter" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_kcba44q"</message>
   <message level="Info" culprit="my_altera_avalon_sc_fifo_dest_id_fifo">"Generating: my_altera_avalon_sc_fifo_dest_id_fifo"</message>
   <message level="Info" culprit="my_alt_hiconnect_sc_fifo_dest_id_fifo">"Generating: my_alt_hiconnect_sc_fifo_dest_id_fifo"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_bbthvuy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_avalon_sc_fifo_191_e5eqkcq"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_oslblqy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_alt_hiconnect_sc_fifo_191_7qtmpqq"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_burst_adapter"
   version="19.1"
   name="msgdma_bbb_altera_merlin_burst_adapter_191_swp6qdq">
  <parameter
     name="MERLIN_PACKET_FORMAT"
     value="wunique(90) domain(89:88) snoop(87:84) barrier(83:82) ori_burst_size(81:79) response_status(78:77) cache(76:73) protection(72:70) thread_id(69) dest_id(68:67) src_id(66:65) qos(64) begin_burst(63) data_sideband(62) addr_sideband(61) burst_type(60:59) burst_size(58:56) burstwrap(55) byte_cnt(54:49) trans_exclusive(48) trans_lock(47) trans_read(46) trans_write(45) trans_posted(44) trans_compressed_read(43) addr(42:36) byteen(35:32) data(31:0)" />
  <parameter name="PKT_TRANS_COMPRESSED_READ" value="43" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/msgdma_bbb_altera_merlin_burst_adapter_191_swp6qdq.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_merlin_burst_adapter_uncmpr.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_merlin_burst_adapter_13_1.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_merlin_burst_adapter_new.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_incr_burst_converter.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_wrap_burst_converter.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_default_burst_converter.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_merlin_address_alignment.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_avalon_st_pipeline_stage.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_avalon_st_pipeline_base.v"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/msgdma_bbb_altera_merlin_burst_adapter_191_swp6qdq.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_merlin_burst_adapter_uncmpr.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_merlin_burst_adapter_13_1.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_merlin_burst_adapter_new.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_incr_burst_converter.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_wrap_burst_converter.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_default_burst_converter.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_merlin_address_alignment.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_avalon_st_pipeline_stage.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_burst_adapter_191/synth/altera_avalon_st_pipeline_base.v"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_burst_adapter/altera_merlin_burst_adapter_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="modular_sgdma_dispatcher_0_CSR_burst_adapter" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_burst_adapter_191_swp6qdq"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_demultiplexer"
   version="19.1"
   name="msgdma_bbb_altera_merlin_demultiplexer_191_ukvrogq">
  <parameter name="ST_CHANNEL_W" value="3" />
  <parameter name="AUTO_CLK_CLOCK_RATE" value="200000000" />
  <parameter name="VALID_WIDTH" value="3" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="ST_DATA_W" value="127" />
  <parameter name="NUM_OUTPUTS" value="3" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_demultiplexer_191/synth/msgdma_bbb_altera_merlin_demultiplexer_191_ukvrogq.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_demultiplexer_191/synth/msgdma_bbb_altera_merlin_demultiplexer_191_ukvrogq.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="cmd_demux" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_ukvrogq"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_multiplexer"
   version="19.1"
   name="msgdma_bbb_altera_merlin_multiplexer_191_37uvtri">
  <parameter name="ST_CHANNEL_W" value="3" />
  <parameter name="ARBITRATION_SHARES" value="1" />
  <parameter name="NUM_INPUTS" value="1" />
  <parameter name="PIPELINE_ARB" value="0" />
  <parameter name="ARBITRATION_SCHEME" value="round-robin" />
  <parameter name="ST_DATA_W" value="127" />
  <parameter name="USE_EXTERNAL_ARB" value="0" />
  <parameter name="PKT_TRANS_LOCK" value="83" />
  <parameter name="SYNC_RESET" value="0" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/msgdma_bbb_altera_merlin_multiplexer_191_37uvtri.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/altera_merlin_arbitrator.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/msgdma_bbb_altera_merlin_multiplexer_191_37uvtri.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/altera_merlin_arbitrator.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="cmd_mux,cmd_mux_001,cmd_mux_002" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_37uvtri"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_demultiplexer"
   version="19.1"
   name="msgdma_bbb_altera_merlin_demultiplexer_191_vtbwn6q">
  <parameter name="ST_CHANNEL_W" value="3" />
  <parameter name="AUTO_CLK_CLOCK_RATE" value="200000000" />
  <parameter name="VALID_WIDTH" value="1" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="ST_DATA_W" value="127" />
  <parameter name="NUM_OUTPUTS" value="1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_demultiplexer_191/synth/msgdma_bbb_altera_merlin_demultiplexer_191_vtbwn6q.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_demultiplexer_191/synth/msgdma_bbb_altera_merlin_demultiplexer_191_vtbwn6q.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="rsp_demux,rsp_demux_001,rsp_demux_002" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_vtbwn6q"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_multiplexer"
   version="19.1"
   name="msgdma_bbb_altera_merlin_multiplexer_191_3dzcbwq">
  <parameter name="ST_CHANNEL_W" value="3" />
  <parameter name="ARBITRATION_SHARES" value="1,1,1" />
  <parameter name="NUM_INPUTS" value="3" />
  <parameter name="PIPELINE_ARB" value="0" />
  <parameter name="ARBITRATION_SCHEME" value="no-arb" />
  <parameter name="ST_DATA_W" value="127" />
  <parameter name="USE_EXTERNAL_ARB" value="0" />
  <parameter name="PKT_TRANS_LOCK" value="83" />
  <parameter name="SYNC_RESET" value="0" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/msgdma_bbb_altera_merlin_multiplexer_191_3dzcbwq.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/altera_merlin_arbitrator.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/msgdma_bbb_altera_merlin_multiplexer_191_3dzcbwq.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/altera_merlin_arbitrator.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="rsp_mux" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_3dzcbwq"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_width_adapter"
   version="19.1"
   name="msgdma_bbb_altera_merlin_width_adapter_191_xe36m3y">
  <parameter name="OUT_PKT_ORI_BURST_SIZE_H" value="333" />
  <parameter name="OUT_PKT_ORI_BURST_SIZE_L" value="331" />
  <parameter name="IN_PKT_ORI_BURST_SIZE_H" value="117" />
  <parameter
     name="OUT_MERLIN_PACKET_FORMAT"
     value="wunique(342) domain(341:340) snoop(339:336) barrier(335:334) ori_burst_size(333:331) response_status(330:329) cache(328:325) protection(324:322) thread_id(321) dest_id(320:319) src_id(318:317) qos(316) begin_burst(315) data_sideband(314) addr_sideband(313) burst_type(312:311) burst_size(310:308) burstwrap(307) byte_cnt(306:301) trans_exclusive(300) trans_lock(299) trans_read(298) trans_write(297) trans_posted(296) trans_compressed_read(295) addr(294:288) byteen(287:256) data(255:0)" />
  <parameter
     name="IN_MERLIN_PACKET_FORMAT"
     value="wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)" />
  <parameter name="IN_PKT_ORI_BURST_SIZE_L" value="115" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/msgdma_bbb_altera_merlin_width_adapter_191_xe36m3y.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/altera_merlin_address_alignment.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/altera_merlin_burst_uncompressor.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/msgdma_bbb_altera_merlin_width_adapter_191_xe36m3y.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/altera_merlin_address_alignment.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/altera_merlin_burst_uncompressor.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="modular_sgdma_dispatcher_0_Descriptor_Slave_cmd_width_adapter" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_width_adapter_191_xe36m3y"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_width_adapter"
   version="19.1"
   name="msgdma_bbb_altera_merlin_width_adapter_191_tiejfvy">
  <parameter name="OUT_PKT_ORI_BURST_SIZE_H" value="117" />
  <parameter name="OUT_PKT_ORI_BURST_SIZE_L" value="115" />
  <parameter name="IN_PKT_ORI_BURST_SIZE_H" value="81" />
  <parameter
     name="OUT_MERLIN_PACKET_FORMAT"
     value="wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)" />
  <parameter
     name="IN_MERLIN_PACKET_FORMAT"
     value="wunique(90) domain(89:88) snoop(87:84) barrier(83:82) ori_burst_size(81:79) response_status(78:77) cache(76:73) protection(72:70) thread_id(69) dest_id(68:67) src_id(66:65) qos(64) begin_burst(63) data_sideband(62) addr_sideband(61) burst_type(60:59) burst_size(58:56) burstwrap(55) byte_cnt(54:49) trans_exclusive(48) trans_lock(47) trans_read(46) trans_write(45) trans_posted(44) trans_compressed_read(43) addr(42:36) byteen(35:32) data(31:0)" />
  <parameter name="IN_PKT_ORI_BURST_SIZE_L" value="79" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/msgdma_bbb_altera_merlin_width_adapter_191_tiejfvy.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/altera_merlin_address_alignment.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/altera_merlin_burst_uncompressor.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/msgdma_bbb_altera_merlin_width_adapter_191_tiejfvy.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/altera_merlin_address_alignment.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/altera_merlin_burst_uncompressor.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="modular_sgdma_dispatcher_0_CSR_rsp_width_adapter" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_width_adapter_191_tiejfvy"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_width_adapter"
   version="19.1"
   name="msgdma_bbb_altera_merlin_width_adapter_191_zq7vway">
  <parameter name="OUT_PKT_ORI_BURST_SIZE_H" value="117" />
  <parameter name="OUT_PKT_ORI_BURST_SIZE_L" value="115" />
  <parameter name="IN_PKT_ORI_BURST_SIZE_H" value="333" />
  <parameter
     name="OUT_MERLIN_PACKET_FORMAT"
     value="wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)" />
  <parameter
     name="IN_MERLIN_PACKET_FORMAT"
     value="wunique(342) domain(341:340) snoop(339:336) barrier(335:334) ori_burst_size(333:331) response_status(330:329) cache(328:325) protection(324:322) thread_id(321) dest_id(320:319) src_id(318:317) qos(316) begin_burst(315) data_sideband(314) addr_sideband(313) burst_type(312:311) burst_size(310:308) burstwrap(307) byte_cnt(306:301) trans_exclusive(300) trans_lock(299) trans_read(298) trans_write(297) trans_posted(296) trans_compressed_read(295) addr(294:288) byteen(287:256) data(255:0)" />
  <parameter name="IN_PKT_ORI_BURST_SIZE_L" value="331" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/msgdma_bbb_altera_merlin_width_adapter_191_zq7vway.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/altera_merlin_address_alignment.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/altera_merlin_burst_uncompressor.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/msgdma_bbb_altera_merlin_width_adapter_191_zq7vway.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/altera_merlin_address_alignment.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/altera_merlin_burst_uncompressor.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="modular_sgdma_dispatcher_0_Descriptor_Slave_rsp_width_adapter" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_width_adapter_191_zq7vway"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_width_adapter"
   version="19.1"
   name="msgdma_bbb_altera_merlin_width_adapter_191_rngqqti">
  <parameter name="OUT_PKT_ORI_BURST_SIZE_H" value="81" />
  <parameter name="OUT_PKT_ORI_BURST_SIZE_L" value="79" />
  <parameter name="IN_PKT_ORI_BURST_SIZE_H" value="117" />
  <parameter
     name="OUT_MERLIN_PACKET_FORMAT"
     value="wunique(90) domain(89:88) snoop(87:84) barrier(83:82) ori_burst_size(81:79) response_status(78:77) cache(76:73) protection(72:70) thread_id(69) dest_id(68:67) src_id(66:65) qos(64) begin_burst(63) data_sideband(62) addr_sideband(61) burst_type(60:59) burst_size(58:56) burstwrap(55) byte_cnt(54:49) trans_exclusive(48) trans_lock(47) trans_read(46) trans_write(45) trans_posted(44) trans_compressed_read(43) addr(42:36) byteen(35:32) data(31:0)" />
  <parameter
     name="IN_MERLIN_PACKET_FORMAT"
     value="wunique(126) domain(125:124) snoop(123:120) barrier(119:118) ori_burst_size(117:115) response_status(114:113) cache(112:109) protection(108:106) thread_id(105) dest_id(104:103) src_id(102:101) qos(100) begin_burst(99) data_sideband(98) addr_sideband(97) burst_type(96:95) burst_size(94:92) burstwrap(91) byte_cnt(90:85) trans_exclusive(84) trans_lock(83) trans_read(82) trans_write(81) trans_posted(80) trans_compressed_read(79) addr(78:72) byteen(71:64) data(63:0)" />
  <parameter name="IN_PKT_ORI_BURST_SIZE_L" value="115" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/msgdma_bbb_altera_merlin_width_adapter_191_rngqqti.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/altera_merlin_address_alignment.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/altera_merlin_burst_uncompressor.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/msgdma_bbb_altera_merlin_width_adapter_191_rngqqti.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/altera_merlin_address_alignment.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_width_adapter_191/synth/altera_merlin_burst_uncompressor.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_width_adapter/altera_merlin_width_adapter_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="modular_sgdma_dispatcher_0_CSR_cmd_width_adapter" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_width_adapter_191_rngqqti"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_router"
   version="19.1"
   name="msgdma_bbb_altera_merlin_router_191_acw7igi">
  <parameter name="ST_CHANNEL_W" value="4" />
  <parameter name="DEFAULT_WR_CHANNEL" value="-1" />
  <parameter name="PKT_TRANS_READ" value="629" />
  <parameter name="START_ADDRESS" value="0x0,0x2000000000000" />
  <parameter name="DEFAULT_CHANNEL" value="1" />
  <parameter name="MEMORY_ALIASING_DECODE" value="0" />
  <parameter name="HAS_USER_DEFAULT_SLAVE" value="0" />
  <parameter
     name="SLAVES_INFO"
     value="3:01:0x0:0x1000000000000:both:1:0:0:1,2:10:0x2000000000000:0x4000000000000:both:1:0:0:1" />
  <parameter name="DEFAULT_RD_CHANNEL" value="-1" />
  <parameter name="PKT_ADDR_H" value="625" />
  <parameter name="PKT_DEST_ID_H" value="654" />
  <parameter name="PKT_ADDR_L" value="576" />
  <parameter name="PKT_DEST_ID_L" value="653" />
  <parameter name="CHANNEL_ID" value="01,10" />
  <parameter name="TYPE_OF_TRANSACTION" value="both,both" />
  <parameter name="SECURED_RANGE_PAIRS" value="0,0" />
  <parameter name="SPAN_OFFSET" value="" />
  <parameter name="ST_DATA_W" value="677" />
  <parameter name="SECURED_RANGE_LIST" value="0,0" />
  <parameter name="DECODER_TYPE" value="0" />
  <parameter name="PKT_PROTECTION_H" value="658" />
  <parameter name="END_ADDRESS" value="0x1000000000000,0x4000000000000" />
  <parameter name="PKT_PROTECTION_L" value="656" />
  <parameter name="PKT_TRANS_WRITE" value="628" />
  <parameter name="DEFAULT_DESTID" value="2" />
  <parameter name="DESTINATION_ID" value="3,2" />
  <parameter name="NON_SECURED_TAG" value="1,1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_acw7igi.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_acw7igi.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="router" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_acw7igi"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_router"
   version="19.1"
   name="msgdma_bbb_altera_merlin_router_191_c35n5ai">
  <parameter name="ST_CHANNEL_W" value="4" />
  <parameter name="DEFAULT_WR_CHANNEL" value="-1" />
  <parameter name="PKT_TRANS_READ" value="629" />
  <parameter name="START_ADDRESS" value="0x0,0x1000000000000,0x2000000000000" />
  <parameter name="DEFAULT_CHANNEL" value="0" />
  <parameter name="MEMORY_ALIASING_DECODE" value="0" />
  <parameter name="HAS_USER_DEFAULT_SLAVE" value="0" />
  <parameter
     name="SLAVES_INFO"
     value="3:001:0x0:0x1000000000000:both:1:0:0:1,0:100:0x1000000000000:0x1000000000100:read:1:0:0:1,1:010:0x2000000000000:0x3000000000000:both:1:0:0:1" />
  <parameter name="DEFAULT_RD_CHANNEL" value="-1" />
  <parameter name="PKT_ADDR_H" value="625" />
  <parameter name="PKT_DEST_ID_H" value="654" />
  <parameter name="PKT_ADDR_L" value="576" />
  <parameter name="PKT_DEST_ID_L" value="653" />
  <parameter name="CHANNEL_ID" value="001,100,010" />
  <parameter name="TYPE_OF_TRANSACTION" value="both,read,both" />
  <parameter name="SECURED_RANGE_PAIRS" value="0,0,0" />
  <parameter name="SPAN_OFFSET" value="" />
  <parameter name="ST_DATA_W" value="677" />
  <parameter name="SECURED_RANGE_LIST" value="0,0,0" />
  <parameter name="DECODER_TYPE" value="0" />
  <parameter name="PKT_PROTECTION_H" value="658" />
  <parameter
     name="END_ADDRESS"
     value="0x1000000000000,0x1000000000100,0x3000000000000" />
  <parameter name="PKT_PROTECTION_L" value="656" />
  <parameter name="PKT_TRANS_WRITE" value="628" />
  <parameter name="DEFAULT_DESTID" value="3" />
  <parameter name="DESTINATION_ID" value="3,0,1" />
  <parameter name="NON_SECURED_TAG" value="1,1,1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_c35n5ai.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_c35n5ai.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="router_001" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_c35n5ai"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_router"
   version="19.1"
   name="msgdma_bbb_altera_merlin_router_191_ryksocy">
  <parameter name="ST_CHANNEL_W" value="4" />
  <parameter name="DEFAULT_WR_CHANNEL" value="-1" />
  <parameter name="PKT_TRANS_READ" value="629" />
  <parameter name="START_ADDRESS" value="0x0,0x0" />
  <parameter name="DEFAULT_CHANNEL" value="0" />
  <parameter name="MEMORY_ALIASING_DECODE" value="0" />
  <parameter name="HAS_USER_DEFAULT_SLAVE" value="0" />
  <parameter
     name="SLAVES_INFO"
     value="1:01:0x0:0x0:both:1:0:0:1,0:10:0x0:0x0:both:1:0:0:1" />
  <parameter name="DEFAULT_RD_CHANNEL" value="-1" />
  <parameter name="PKT_ADDR_H" value="625" />
  <parameter name="PKT_DEST_ID_H" value="654" />
  <parameter name="PKT_ADDR_L" value="576" />
  <parameter name="PKT_DEST_ID_L" value="653" />
  <parameter name="CHANNEL_ID" value="01,10" />
  <parameter name="TYPE_OF_TRANSACTION" value="both,both" />
  <parameter name="SECURED_RANGE_PAIRS" value="0,0" />
  <parameter name="SPAN_OFFSET" value="" />
  <parameter name="ST_DATA_W" value="677" />
  <parameter name="SECURED_RANGE_LIST" value="0,0" />
  <parameter name="DECODER_TYPE" value="1" />
  <parameter name="PKT_PROTECTION_H" value="658" />
  <parameter name="END_ADDRESS" value="0x0,0x0" />
  <parameter name="PKT_PROTECTION_L" value="656" />
  <parameter name="PKT_TRANS_WRITE" value="628" />
  <parameter name="DEFAULT_DESTID" value="1" />
  <parameter name="DESTINATION_ID" value="1,0" />
  <parameter name="NON_SECURED_TAG" value="1,1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_ryksocy.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_ryksocy.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="router_002" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_ryksocy"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_router"
   version="19.1"
   name="msgdma_bbb_altera_merlin_router_191_ai6ulwa">
  <parameter name="ST_CHANNEL_W" value="4" />
  <parameter name="DEFAULT_WR_CHANNEL" value="-1" />
  <parameter name="PKT_TRANS_READ" value="629" />
  <parameter name="START_ADDRESS" value="0x0" />
  <parameter name="DEFAULT_CHANNEL" value="0" />
  <parameter name="MEMORY_ALIASING_DECODE" value="0" />
  <parameter name="HAS_USER_DEFAULT_SLAVE" value="0" />
  <parameter name="SLAVES_INFO" value="1:1:0x0:0x0:both:1:0:0:1" />
  <parameter name="DEFAULT_RD_CHANNEL" value="-1" />
  <parameter name="PKT_ADDR_H" value="625" />
  <parameter name="PKT_DEST_ID_H" value="654" />
  <parameter name="PKT_ADDR_L" value="576" />
  <parameter name="PKT_DEST_ID_L" value="653" />
  <parameter name="CHANNEL_ID" value="1" />
  <parameter name="TYPE_OF_TRANSACTION" value="both" />
  <parameter name="SECURED_RANGE_PAIRS" value="0" />
  <parameter name="SPAN_OFFSET" value="" />
  <parameter name="ST_DATA_W" value="677" />
  <parameter name="SECURED_RANGE_LIST" value="0" />
  <parameter name="DECODER_TYPE" value="1" />
  <parameter name="PKT_PROTECTION_H" value="658" />
  <parameter name="END_ADDRESS" value="0x0" />
  <parameter name="PKT_PROTECTION_L" value="656" />
  <parameter name="PKT_TRANS_WRITE" value="628" />
  <parameter name="DEFAULT_DESTID" value="1" />
  <parameter name="DESTINATION_ID" value="1" />
  <parameter name="NON_SECURED_TAG" value="1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_ai6ulwa.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_ai6ulwa.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="router_003" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_ai6ulwa"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_router"
   version="19.1"
   name="msgdma_bbb_altera_merlin_router_191_7mgzb3i">
  <parameter name="ST_CHANNEL_W" value="4" />
  <parameter name="DEFAULT_WR_CHANNEL" value="-1" />
  <parameter name="PKT_TRANS_READ" value="629" />
  <parameter name="START_ADDRESS" value="0x0" />
  <parameter name="DEFAULT_CHANNEL" value="0" />
  <parameter name="MEMORY_ALIASING_DECODE" value="0" />
  <parameter name="HAS_USER_DEFAULT_SLAVE" value="0" />
  <parameter name="SLAVES_INFO" value="0:1:0x0:0x0:both:1:0:0:1" />
  <parameter name="DEFAULT_RD_CHANNEL" value="-1" />
  <parameter name="PKT_ADDR_H" value="625" />
  <parameter name="PKT_DEST_ID_H" value="654" />
  <parameter name="PKT_ADDR_L" value="576" />
  <parameter name="PKT_DEST_ID_L" value="653" />
  <parameter name="CHANNEL_ID" value="1" />
  <parameter name="TYPE_OF_TRANSACTION" value="both" />
  <parameter name="SECURED_RANGE_PAIRS" value="0" />
  <parameter name="SPAN_OFFSET" value="" />
  <parameter name="ST_DATA_W" value="677" />
  <parameter name="SECURED_RANGE_LIST" value="0" />
  <parameter name="DECODER_TYPE" value="1" />
  <parameter name="PKT_PROTECTION_H" value="658" />
  <parameter name="END_ADDRESS" value="0x0" />
  <parameter name="PKT_PROTECTION_L" value="656" />
  <parameter name="PKT_TRANS_WRITE" value="628" />
  <parameter name="DEFAULT_DESTID" value="0" />
  <parameter name="DESTINATION_ID" value="0" />
  <parameter name="NON_SECURED_TAG" value="1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_7mgzb3i.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_router_191/synth/msgdma_bbb_altera_merlin_router_191_7mgzb3i.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_router/altera_merlin_router_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="router_004,router_005" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_router_191_7mgzb3i"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_demultiplexer"
   version="19.1"
   name="msgdma_bbb_altera_merlin_demultiplexer_191_5js56xy">
  <parameter name="ST_CHANNEL_W" value="4" />
  <parameter name="AUTO_CLK_CLOCK_RATE" value="200000000" />
  <parameter name="VALID_WIDTH" value="4" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="ST_DATA_W" value="677" />
  <parameter name="NUM_OUTPUTS" value="2" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_demultiplexer_191/synth/msgdma_bbb_altera_merlin_demultiplexer_191_5js56xy.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_demultiplexer_191/synth/msgdma_bbb_altera_merlin_demultiplexer_191_5js56xy.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="cmd_demux" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_5js56xy"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_demultiplexer"
   version="19.1"
   name="msgdma_bbb_altera_merlin_demultiplexer_191_b4filfy">
  <parameter name="ST_CHANNEL_W" value="4" />
  <parameter name="AUTO_CLK_CLOCK_RATE" value="200000000" />
  <parameter name="VALID_WIDTH" value="4" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="ST_DATA_W" value="677" />
  <parameter name="NUM_OUTPUTS" value="3" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_demultiplexer_191/synth/msgdma_bbb_altera_merlin_demultiplexer_191_b4filfy.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_demultiplexer_191/synth/msgdma_bbb_altera_merlin_demultiplexer_191_b4filfy.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="cmd_demux_001" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_b4filfy"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_multiplexer"
   version="19.1"
   name="msgdma_bbb_altera_merlin_multiplexer_191_br63msi">
  <parameter name="ST_CHANNEL_W" value="4" />
  <parameter name="ARBITRATION_SHARES" value="1,1" />
  <parameter name="NUM_INPUTS" value="2" />
  <parameter name="PIPELINE_ARB" value="0" />
  <parameter name="ARBITRATION_SCHEME" value="round-robin" />
  <parameter name="ST_DATA_W" value="677" />
  <parameter name="USE_EXTERNAL_ARB" value="0" />
  <parameter name="PKT_TRANS_LOCK" value="630" />
  <parameter name="SYNC_RESET" value="0" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/msgdma_bbb_altera_merlin_multiplexer_191_br63msi.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/altera_merlin_arbitrator.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/msgdma_bbb_altera_merlin_multiplexer_191_br63msi.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/altera_merlin_arbitrator.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="cmd_mux" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_br63msi"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_multiplexer"
   version="19.1"
   name="msgdma_bbb_altera_merlin_multiplexer_191_fkmy6zy">
  <parameter name="ST_CHANNEL_W" value="4" />
  <parameter name="ARBITRATION_SHARES" value="1" />
  <parameter name="NUM_INPUTS" value="1" />
  <parameter name="PIPELINE_ARB" value="0" />
  <parameter name="ARBITRATION_SCHEME" value="round-robin" />
  <parameter name="ST_DATA_W" value="677" />
  <parameter name="USE_EXTERNAL_ARB" value="0" />
  <parameter name="PKT_TRANS_LOCK" value="630" />
  <parameter name="SYNC_RESET" value="0" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/msgdma_bbb_altera_merlin_multiplexer_191_fkmy6zy.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/altera_merlin_arbitrator.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/msgdma_bbb_altera_merlin_multiplexer_191_fkmy6zy.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/altera_merlin_arbitrator.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="cmd_mux_001,cmd_mux_002,cmd_mux_003" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_fkmy6zy"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_demultiplexer"
   version="19.1"
   name="msgdma_bbb_altera_merlin_demultiplexer_191_osdbpdq">
  <parameter name="ST_CHANNEL_W" value="4" />
  <parameter name="AUTO_CLK_CLOCK_RATE" value="200000000" />
  <parameter name="VALID_WIDTH" value="1" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="ST_DATA_W" value="677" />
  <parameter name="NUM_OUTPUTS" value="2" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_demultiplexer_191/synth/msgdma_bbb_altera_merlin_demultiplexer_191_osdbpdq.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_demultiplexer_191/synth/msgdma_bbb_altera_merlin_demultiplexer_191_osdbpdq.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="rsp_demux" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_osdbpdq"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_demultiplexer"
   version="19.1"
   name="msgdma_bbb_altera_merlin_demultiplexer_191_kazjgxy">
  <parameter name="ST_CHANNEL_W" value="4" />
  <parameter name="AUTO_CLK_CLOCK_RATE" value="200000000" />
  <parameter name="VALID_WIDTH" value="1" />
  <parameter name="AUTO_DEVICE_FAMILY" value="Arria 10" />
  <parameter name="ST_DATA_W" value="677" />
  <parameter name="NUM_OUTPUTS" value="1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_demultiplexer_191/synth/msgdma_bbb_altera_merlin_demultiplexer_191_kazjgxy.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_demultiplexer_191/synth/msgdma_bbb_altera_merlin_demultiplexer_191_kazjgxy.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_demultiplexer/altera_merlin_demultiplexer_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="rsp_demux_001,rsp_demux_002,rsp_demux_003" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_demultiplexer_191_kazjgxy"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_multiplexer"
   version="19.1"
   name="msgdma_bbb_altera_merlin_multiplexer_191_jurlxwy">
  <parameter name="ST_CHANNEL_W" value="4" />
  <parameter name="ARBITRATION_SHARES" value="1,1" />
  <parameter name="NUM_INPUTS" value="2" />
  <parameter name="PIPELINE_ARB" value="0" />
  <parameter name="ARBITRATION_SCHEME" value="no-arb" />
  <parameter name="ST_DATA_W" value="677" />
  <parameter name="USE_EXTERNAL_ARB" value="0" />
  <parameter name="PKT_TRANS_LOCK" value="630" />
  <parameter name="SYNC_RESET" value="0" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/msgdma_bbb_altera_merlin_multiplexer_191_jurlxwy.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/altera_merlin_arbitrator.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/msgdma_bbb_altera_merlin_multiplexer_191_jurlxwy.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/altera_merlin_arbitrator.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="rsp_mux" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_jurlxwy"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_multiplexer"
   version="19.1"
   name="msgdma_bbb_altera_merlin_multiplexer_191_2n4vlwy">
  <parameter name="ST_CHANNEL_W" value="4" />
  <parameter name="ARBITRATION_SHARES" value="1,1,1" />
  <parameter name="NUM_INPUTS" value="3" />
  <parameter name="PIPELINE_ARB" value="0" />
  <parameter name="ARBITRATION_SCHEME" value="no-arb" />
  <parameter name="ST_DATA_W" value="677" />
  <parameter name="USE_EXTERNAL_ARB" value="0" />
  <parameter name="PKT_TRANS_LOCK" value="630" />
  <parameter name="SYNC_RESET" value="0" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/msgdma_bbb_altera_merlin_multiplexer_191_2n4vlwy.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/altera_merlin_arbitrator.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/msgdma_bbb_altera_merlin_multiplexer_191_2n4vlwy.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_multiplexer_191/synth/altera_merlin_arbitrator.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/merlin/altera_merlin_multiplexer/altera_merlin_multiplexer_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="rsp_mux_001" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_multiplexer_191_2n4vlwy"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_traffic_limiter"
   version="19.1"
   name="msgdma_bbb_altera_merlin_traffic_limiter_191_bbthvuy">
  <parameter name="FIFO_DEPTH" value="4" />
  <parameter name="USE_PACKETS" value="0" />
  <parameter name="EMPTY_LATENCY" value="1" />
  <parameter name="EXPLICIT_MAXCHANNEL" value="0" />
  <parameter name="EMPTY_WIDTH" value="1" />
  <parameter name="CHANNEL_WIDTH" value="0" />
  <parameter name="USE_ALMOST_FULL_IF" value="0" />
  <parameter name="ENABLE_EXPLICIT_MAXCHANNEL" value="false" />
  <parameter name="SYMBOLS_PER_BEAT" value="1" />
  <parameter name="BITS_PER_SYMBOL" value="4" />
  <parameter name="ERROR_WIDTH" value="0" />
  <parameter name="USE_MEMORY_BLOCKS" value="0" />
  <parameter name="USE_FILL_LEVEL" value="0" />
  <parameter name="USE_ALMOST_EMPTY_IF" value="0" />
  <parameter name="SYNC_RESET" value="0" />
  <parameter name="USE_STORE_FORWARD" value="0" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_traffic_limiter_191/synth/msgdma_bbb_altera_merlin_traffic_limiter_191_bbthvuy.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_traffic_limiter_191/synth/msgdma_bbb_altera_merlin_traffic_limiter_191_bbthvuy.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </childGeneratedFiles>
  <sourceFiles/>
  <childSourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
  </childSourceFiles>
  <instantiator
     instantiator="msgdma_bbb_altera_merlin_traffic_limiter_191_kcba44q"
     as="my_altera_avalon_sc_fifo_dest_id_fifo" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_bbthvuy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_avalon_sc_fifo_191_e5eqkcq"</message>
  </messages>
 </entity>
 <entity
   kind="altera_avalon_sc_fifo"
   version="19.1"
   name="msgdma_bbb_altera_avalon_sc_fifo_191_e5eqkcq">
  <parameter name="EXPLICIT_MAXCHANNEL" value="0" />
  <parameter name="EMPTY_WIDTH" value="1" />
  <parameter name="SYNC_RESET" value="0" />
  <parameter name="ENABLE_EXPLICIT_MAXCHANNEL" value="false" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_avalon_sc_fifo_191/synth/msgdma_bbb_altera_avalon_sc_fifo_191_e5eqkcq.v"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_avalon_sc_fifo_191/synth/msgdma_bbb_altera_avalon_sc_fifo_191_e5eqkcq.v"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/sopc_builder_ip/altera_avalon_sc_fifo/altera_avalon_sc_fifo_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_shqzigy"
     as="modular_sgdma_dispatcher_0_CSR_agent_rsp_fifo,modular_sgdma_dispatcher_0_Descriptor_Slave_agent_rsp_fifo,msgdma_bbb_afu_id_avmm_slave_0_afu_cfg_slave_agent_rsp_fifo" />
  <instantiator
     instantiator="msgdma_bbb_altera_mm_interconnect_191_iuu5b4y"
     as="pipe_stage_mem_s0_agent_rsp_fifo,pipe_stage_host_wr_s0_agent_rsp_fifo,pipe_stage_host_rd_s0_agent_rsp_fifo,magic_number_rom_slave_agent_rsp_fifo" />
  <instantiator
     instantiator="msgdma_bbb_altera_merlin_traffic_limiter_191_bbthvuy"
     as="my_altera_avalon_sc_fifo_dest_id_fifo" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_avalon_sc_fifo_191_e5eqkcq"</message>
  </messages>
 </entity>
 <entity
   kind="altera_merlin_traffic_limiter"
   version="19.1"
   name="msgdma_bbb_altera_merlin_traffic_limiter_191_oslblqy">
  <parameter name="IMPL" value="reg" />
  <parameter name="FIFO_DEPTH" value="4" />
  <parameter name="USE_PACKETS" value="0" />
  <parameter name="EMPTY_LATENCY" value="1" />
  <parameter name="ENABLE_POP" value="false" />
  <parameter name="EXPLICIT_MAXCHANNEL" value="0" />
  <parameter name="ALMOST_FULL_THRESHOLD" value="4" />
  <parameter name="CHANNEL_WIDTH" value="0" />
  <parameter name="ENABLE_EXPLICIT_MAXCHANNEL" value="false" />
  <parameter name="ENABLE_STOP" value="false" />
  <parameter name="SYMBOLS_PER_BEAT" value="1" />
  <parameter name="BITS_PER_SYMBOL" value="4" />
  <parameter name="ERROR_WIDTH" value="0" />
  <parameter name="SHOWAHEAD" value="1" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_traffic_limiter_191/synth/msgdma_bbb_altera_merlin_traffic_limiter_191_oslblqy.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/altera_merlin_traffic_limiter_191/synth/msgdma_bbb_altera_merlin_traffic_limiter_191_oslblqy.v"
       attributes="CONTAINS_INLINE_CONFIGURATION" />
  </childGeneratedFiles>
  <sourceFiles/>
  <childSourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/iconnect/alt_hiconnect_sc_fifo/alt_hiconnect_sc_fifo_hw.tcl" />
  </childSourceFiles>
  <instantiator
     instantiator="msgdma_bbb_altera_merlin_traffic_limiter_191_kcba44q"
     as="my_alt_hiconnect_sc_fifo_dest_id_fifo" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_altera_merlin_traffic_limiter_191_oslblqy"</message>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_alt_hiconnect_sc_fifo_191_7qtmpqq"</message>
  </messages>
 </entity>
 <entity
   kind="alt_hiconnect_sc_fifo"
   version="19.1"
   name="msgdma_bbb_alt_hiconnect_sc_fifo_191_7qtmpqq">
  <parameter name="ENABLE_STOP" value="false" />
  <parameter name="ENABLE_POP" value="false" />
  <parameter name="EXPLICIT_MAXCHANNEL" value="0" />
  <parameter name="ENABLE_EXPLICIT_MAXCHANNEL" value="false" />
  <generatedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/alt_hiconnect_sc_fifo_191/synth/msgdma_bbb_alt_hiconnect_sc_fifo_191_7qtmpqq.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/alt_hiconnect_sc_fifo_191/synth/alt_st_infer_scfifo.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/alt_hiconnect_sc_fifo_191/synth/alt_st_mlab_scfifo.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/alt_hiconnect_sc_fifo_191/synth/alt_st_fifo_empty.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/alt_hiconnect_sc_fifo_191/synth/alt_st_mlab_scfifo_a6.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/alt_hiconnect_sc_fifo_191/synth/alt_st_mlab_scfifo_a7.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/alt_hiconnect_sc_fifo_191/synth/alt_st_reg_scfifo.sv"
       attributes="" />
  </generatedFiles>
  <childGeneratedFiles>
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/alt_hiconnect_sc_fifo_191/synth/msgdma_bbb_alt_hiconnect_sc_fifo_191_7qtmpqq.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/alt_hiconnect_sc_fifo_191/synth/alt_st_infer_scfifo.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/alt_hiconnect_sc_fifo_191/synth/alt_st_mlab_scfifo.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/alt_hiconnect_sc_fifo_191/synth/alt_st_fifo_empty.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/alt_hiconnect_sc_fifo_191/synth/alt_st_mlab_scfifo_a6.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/alt_hiconnect_sc_fifo_191/synth/alt_st_mlab_scfifo_a7.sv"
       attributes="" />
   <file
       path="/home/u192806/A10_OPENCL_AFU/hello_world/bin/hello_world_fpga/build/msgdma_bbb/alt_hiconnect_sc_fifo_191/synth/alt_st_reg_scfifo.sv"
       attributes="" />
  </childGeneratedFiles>
  <sourceFiles>
   <file
       path="/glob/development-tools/versions/fpgasupportstack/a10/1.2.1/intelFPGA_pro/ip/altera/iconnect/alt_hiconnect_sc_fifo/alt_hiconnect_sc_fifo_hw.tcl" />
  </sourceFiles>
  <childSourceFiles/>
  <instantiator
     instantiator="msgdma_bbb_altera_merlin_traffic_limiter_191_oslblqy"
     as="my_alt_hiconnect_sc_fifo_dest_id_fifo" />
  <messages>
   <message level="Info" culprit="msgdma_bbb">"Generating: msgdma_bbb_alt_hiconnect_sc_fifo_191_7qtmpqq"</message>
  </messages>
 </entity>
</deploy>
