--dcfifo_mixed_widths CARRY_CHAIN="MANUAL" CBX_SINGLE_OUTPUT_FILE="OFF" DEVICE_FAMILY="Arria 10" LPM_NUMWORDS=256 LPM_SHOWAHEAD="ON" LPM_WIDTH=32 LPM_WIDTH_R=32 LPM_WIDTHU=8 LPM_WIDTHU_R=8 OVERFLOW_CHECKING="ON" RDSYNC_DELAYPIPE=4 UNDERFLOW_CHECKING="ON" USE_EAB="ON" WRSYNC_DELAYPIPE=4 aclr(gnd) data q rdclk rdempty rdfull rdreq rdusedw wrclk wrreq ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES="CARE" CYCLONEII_M4K_COMPATIBILITY="ON" INTENDED_DEVICE_FAMILY="Stratix IV" LOW_POWER_MODE="AUTO" ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
--VERSION_BEGIN 19.2 cbx_a_gray2bin 2019:06:24:17:05:51:SJ cbx_a_graycounter 2019:06:24:17:05:51:SJ cbx_altdpram 2019:06:24:17:05:51:SJ cbx_altera_counter 2019:06:24:17:05:51:SJ cbx_altera_gray_counter 2019:06:24:17:05:51:SJ cbx_altera_syncram 2019:06:24:17:05:51:SJ cbx_altera_syncram_nd_impl 2019:06:24:17:05:51:SJ cbx_altsyncram 2019:06:24:17:05:52:SJ cbx_dcfifo 2019:06:24:17:05:52:SJ cbx_fifo_common 2019:06:24:17:05:51:SJ cbx_lpm_add_sub 2019:06:24:17:05:52:SJ cbx_lpm_compare 2019:06:24:17:05:52:SJ cbx_lpm_counter 2019:06:24:17:05:52:SJ cbx_lpm_decode 2019:06:24:17:05:52:SJ cbx_lpm_mux 2019:06:24:17:05:52:SJ cbx_mgl 2019:06:24:18:19:52:SJ cbx_nadder 2019:06:24:17:05:52:SJ cbx_scfifo 2019:06:24:17:05:52:SJ cbx_stratix 2019:06:24:17:05:52:SJ cbx_stratixii 2019:06:24:17:05:52:SJ cbx_stratixiii 2019:06:24:17:05:52:SJ cbx_stratixv 2019:06:24:17:05:52:SJ cbx_util_mgl 2019:06:24:17:05:52:SJ  VERSION_END


-- Copyright (C) 2019  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.


FUNCTION a_gray2bin_d79 (gray[8..0])
RETURNS ( bin[8..0]);
FUNCTION a_graycounter_319 (clock, cnt_en)
RETURNS ( q[8..0]);
FUNCTION a_graycounter_vee (clock, cnt_en)
RETURNS ( q[8..0]);
FUNCTION altsyncram_rra1 (address_a[7..0], address_b[7..0], addressstall_b, clock0, clock1, data_a[31..0], wren_a)
RETURNS ( q_b[31..0]);
FUNCTION dffpipe_anb (clock, d[8..0])
RETURNS ( q[8..0]);
FUNCTION alt_synch_pipe_q1o (clock, d[8..0])
RETURNS ( q[8..0]);
FUNCTION alt_synch_pipe_r1o (clock, d[8..0])
RETURNS ( q[8..0]);
FUNCTION cmpr_nf8 (dataa[8..0], datab[8..0])
RETURNS ( aeb);

--synthesis_resources = lut 10 M20K 1 reg 105 
OPTIONS ALTERA_INTERNAL_OPTION = "AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;SYNCHRONIZER_IDENTIFICATION=OFF;SYNCHRONIZATION_REGISTER_CHAIN_LENGTH = 2;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;suppress_da_rule_internal=d103;{-to wrptr_g} suppress_da_rule_internal=S102;{-to wrptr_g} POWER_UP_LEVEL=LOW;-name CUT ON -from rdptr_g -to ws_dgrp|dffpipe_cnb:dffpipe16|dffe17a;-name SDC_STATEMENT ""set_false_path -from *rdptr_g* -to *ws_dgrp|dffpipe_cnb:dffpipe16|dffe17a* "";-name CUT ON -from delayed_wrptr_g -to rs_dgwp|dffpipe_bnb:dffpipe13|dffe14a;-name SDC_STATEMENT ""set_false_path -from *delayed_wrptr_g* -to *rs_dgwp|dffpipe_bnb:dffpipe13|dffe14a* """;

SUBDESIGN dcfifo_f6l1
( 
	aclr	:	input;
	data[31..0]	:	input;
	q[31..0]	:	output;
	rdclk	:	input;
	rdempty	:	output;
	rdfull	:	output;
	rdreq	:	input;
	rdusedw[7..0]	:	output;
	wrclk	:	input;
	wrreq	:	input;
) 
VARIABLE 
	rdptr_g_gray2bin : a_gray2bin_d79;
	rs_dgwp_gray2bin : a_gray2bin_d79;
	rdptr_g1p : a_graycounter_319;
	wrptr_g1p : a_graycounter_vee;
	fifo_ram : altsyncram_rra1;
	delayed_wrptr_g[8..0] : dffe;
	rdptr_g[8..0] : dffe;
	wrptr_g[8..0] : dffe
		WITH (
			power_up = "low"
		);
	rs_brp : dffpipe_anb;
	rs_bwp : dffpipe_anb;
	rs_dgwp : alt_synch_pipe_q1o;
	ws_dgrp : alt_synch_pipe_r1o;
	rdusedw_sub_dataa[8..0]	:	WIRE;
	rdusedw_sub_datab[8..0]	:	WIRE;
	rdusedw_sub_result[8..0]	:	WIRE;
	rdempty_eq_comp : cmpr_nf8;
	rdfull_eq_comp : cmpr_nf8;
	wrfull_eq_comp : cmpr_nf8;
	const_node_aclr	: NODE;
	int_rdempty	: WIRE;
	int_wrfull	: WIRE;
	ram_address_a[7..0]	: WIRE;
	ram_address_b[7..0]	: WIRE;
	rdptr_gs[8..0]	: WIRE;
	valid_rdreq	: WIRE;
	valid_wrreq	: WIRE;
	wrptr_gs[8..0]	: WIRE;

BEGIN 
	rdptr_g_gray2bin.gray[8..0] = rdptr_g[8..0].q;
	rs_dgwp_gray2bin.gray[8..0] = rs_dgwp.q[8..0];
	rdptr_g1p.clock = rdclk;
	rdptr_g1p.cnt_en = valid_rdreq;
	wrptr_g1p.clock = wrclk;
	wrptr_g1p.cnt_en = valid_wrreq;
	fifo_ram.address_a[] = ram_address_a[];
	fifo_ram.address_b[] = ram_address_b[];
	fifo_ram.addressstall_b = (! valid_rdreq);
	fifo_ram.clock0 = wrclk;
	fifo_ram.clock1 = rdclk;
	fifo_ram.data_a[] = data[];
	fifo_ram.wren_a = valid_wrreq;
	delayed_wrptr_g[].clk = wrclk;
	delayed_wrptr_g[].d = wrptr_g[].q;
	rdptr_g[].clk = rdclk;
	rdptr_g[].d = rdptr_g1p.q[];
	rdptr_g[].ena = valid_rdreq;
	wrptr_g[].clk = wrclk;
	wrptr_g[].d = wrptr_g1p.q[];
	wrptr_g[].ena = valid_wrreq;
	rs_brp.clock = rdclk;
	rs_brp.d[] = rdptr_g_gray2bin.bin[];
	rs_bwp.clock = rdclk;
	rs_bwp.d[] = rs_dgwp_gray2bin.bin[];
	rs_dgwp.clock = rdclk;
	rs_dgwp.d[] = delayed_wrptr_g[].q;
	ws_dgrp.clock = wrclk;
	ws_dgrp.d[] = rdptr_g[].q;
	rdusedw_sub_result[] = rdusedw_sub_dataa[] - rdusedw_sub_datab[];
	rdusedw_sub_dataa[] = rs_bwp.q[];
	rdusedw_sub_datab[] = rs_brp.q[];
	rdempty_eq_comp.dataa[] = rs_dgwp.q[];
	rdempty_eq_comp.datab[] = rdptr_g[].q;
	rdfull_eq_comp.dataa[] = rs_dgwp.q[];
	rdfull_eq_comp.datab[] = rdptr_gs[];
	wrfull_eq_comp.dataa[] = ws_dgrp.q[];
	wrfull_eq_comp.datab[] = wrptr_gs[];
	const_node_aclr = aclr;
	int_rdempty = rdempty_eq_comp.aeb;
	int_wrfull = wrfull_eq_comp.aeb;
	q[] = fifo_ram.q_b[];
	ram_address_a[] = ( (wrptr_g[8..8].q $ wrptr_g[7..7].q), wrptr_g[6..0].q);
	ram_address_b[] = ( (rdptr_g1p.q[8..8] $ rdptr_g1p.q[7..7]), rdptr_g1p.q[6..0]);
	rdempty = int_rdempty;
	rdfull = rdfull_eq_comp.aeb;
	rdptr_gs[] = ( (! rdptr_g[8..8].q), (! rdptr_g[7..7].q), rdptr_g[6..0].q);
	rdusedw[] = ( rdusedw_sub_result[7..0]);
	valid_rdreq = (rdreq & (! int_rdempty));
	valid_wrreq = (wrreq & (! int_wrfull));
	wrptr_gs[] = ( (! wrptr_g[8..8].q), (! wrptr_g[7..7].q), wrptr_g[6..0].q);
END;
--VALID FILE
